{
  "openapi": "3.0.0",
  "info": {
    "title": "Console API",
    "description": "The \"Console API\" is the CRUD API for performing the actions offered on console.statsig.com without needing to go through the web UI.\nIf you have any feature requests, drop on in to our [slack channel](https://www.statsig.com/slack) and let us know.\n<br /><br />\n<b>Authorization</b>\n<br />\nAll requests must include the **STATSIG-API-KEY** field in the header. The value should be a **Console API Key** which can be created in the Project Settings on [console.statsig.com/api_keys](https://console.statsig.com/api_keys)\n<br /><br />\n<b>Rate Limiting</b>\n<br />\nRequests to the Console API are limited to <code>~ 100reqs / 10secs and ~ 900reqs / 15 mins</code>.\n<br /><br />\n<b>Keyboard Search</b>\n<br />\nUse <code>Ctrl/Cmd + K</code> to search for specific endpoints.",
    "version": "20240601.0.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "https://statsigapi.net"
    }
  ],
  "tags": [],
  "paths": {
    "/console/v1/alerts": {
      "get": {
        "summary": "List Topline Alerts",
        "parameters": [
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Alerts success response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AlertSchemaDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Forbidden resource"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden resource"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Alerts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/audit_logs": {
      "get": {
        "summary": "List Audit Logs",
        "parameters": [
          {
            "name": "id",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortKey",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "changeLog",
                "actionType",
                "date",
                "time",
                "updatedBy",
                "updatedByUserID"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "latestID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "actionType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "edit_experiment_scheduled_start",
                "edit_ai_config_agent_version",
                "update_ai_dataset",
                "upload_ai_config_dataset_csv",
                "resalt_experiment",
                "edit_ai_config_eval_settings",
                "delete_ai_config",
                "set_suggest_cure_covariates",
                "edit_ai_playground_setup",
                "start_ai_config_version_evaluation_job",
                "start_ai_playground_completion_job",
                "stop_ai_config_version_evaluation_job",
                "clone_ai_config",
                "edit_ai_config_version",
                "delete_ai_config_version",
                "clone_ai_config_version",
                "ai_config_create",
                "ai_playground_create",
                "create_ai_dataset",
                "create_ai_config_version",
                "upsert_ai_config_version",
                "create_ai_config_eval_grader",
                "edit_ai_config_eval_grader",
                "delete_ai_config_eval_grader",
                "set_enable_id_resolution_toggle",
                "dynamic_config_create",
                "dynamic_config_template_create",
                "dynamic_config_update_owners",
                "gate_overrides_update",
                "gate_template_create",
                "gate_create",
                "gate_update",
                "set_user_sampling_rate_for_gate",
                "gate_update_owners",
                "update_store_0_100_exposures",
                "update_gate_analytics_enabled",
                "update_gate_display_name",
                "release_pipeline_create",
                "release_pipeline_update",
                "release_pipeline_delete",
                "update_config_release_pipeline",
                "release_pipeline_trigger_create",
                "apply_experiment_review",
                "extend_experiment_pulse_end_date",
                "restart_experiment_pulse",
                "autotune_experiment_create",
                "autotune_experiment_delete",
                "autotune_experiment_snapshot_delete",
                "autotune_experiment_edit",
                "autotune_experiment_update_target_apps",
                "autotune_experiment_update_pulse_paused",
                "autotune_overrides_edit",
                "autotune_reviews_on",
                "experiment_data_report_delete",
                "experiment_discussion_post_create",
                "experiment_discussion_post_delete",
                "experiment_abandon",
                "experiment_pause_assignment",
                "experiment_stopped",
                "experiment_review_accept",
                "experiment_review_reject",
                "experiment_template_create",
                "update_template_decision_framework",
                "remove_template_decision_framework",
                "experiment_create",
                "experiment_review_create",
                "experiment_delete",
                "experiment_review_delete",
                "experiment_review_update_team",
                "experiment_snapshot_delete",
                "experiment_group_disable",
                "experiment_description_edit",
                "experiment_display_name_edit",
                "experiment_edit",
                "experiment_overrides_edit",
                "hypothesis_edit",
                "key_experiment_metrics_edit",
                "experiment_advanced_settings_edit",
                "experiment_decision_make",
                "experiment_restart",
                "experiment_restart_as_new",
                "experiment_rollout",
                "experiment_schedule_rollout",
                "experiment_reviews_on",
                "experiment_start",
                "schedule_experiment_start",
                "experiment_follow_toggle",
                "experiment_allowed_reviewers_update",
                "experiment_review_info_update",
                "update_experiment_enabled_non_prod_environments",
                "archive_experiment",
                "unarchive_experiment",
                "experiment_update_owners",
                "update_echidna_subtype",
                "setup_stratified_sampling",
                "experiment_update_target_apps",
                "experiment_update_subdimension_filter",
                "experiment_review_update_overrides",
                "experiment_review_update_owners",
                "experiment_update_decision_note",
                "experiment_update_summary_sections",
                "unattach_experiment_to_power_analysis_report",
                "attach_experiment_to_power_analysis_report",
                "pin_chart_to_summary",
                "set_geotest_design",
                "delete_geotest_design",
                "create_geotest_design",
                "experiment_assigned_to_layer",
                "holdout_create",
                "holdout_delete",
                "holdout_layer_parameter_values_update",
                "holdout_update",
                "holdout_update_owners",
                "metric_edit_definition",
                "metric_edit_description",
                "metric_add_tag",
                "metric_remove_tag",
                "schedule_delete_metric",
                "schedule_archive_metric",
                "update_metric_is_permanent",
                "update_metric_is_verified",
                "metric_reviews_on",
                "metric_disable_reviews_locally",
                "custom_metric_definition_edit",
                "custom_metric_definition_create",
                "custom_metric_definition_delete",
                "custom_metric_update_owners",
                "tag_metrics_bulk",
                "tag_create",
                "tag_delete",
                "tag_edit",
                "segment_create",
                "segment_update_owners",
                "layer_update_owners",
                "layer_review_commit",
                "layer_review_accept",
                "layer_parameter_add",
                "layer_create",
                "layer_review_create",
                "layer_review_delete",
                "layer_delete",
                "layer_snapshot_delete",
                "layer_description_edit",
                "layer_edit",
                "layer_overrides_edit",
                "layer_parameters_edit",
                "layer_review_reject",
                "layer_allowed_reviewers_update",
                "layer_review_info_update",
                "layer_update_target_apps",
                "delete_layer_parameter",
                "update_layer_parameter",
                "config_review_accept",
                "config_review_commit",
                "config_review_create",
                "config_delete",
                "config_review_delete",
                "config_reviews_disable",
                "config_review_reject",
                "config_resalt",
                "config_revert",
                "config_require_reviews",
                "config_state_toggle",
                "config_allowed_reviewers_update",
                "config_conditions_update",
                "config_default_value_update",
                "config_description_update",
                "config_display_name_update",
                "config_environments_update",
                "config_review_info_update",
                "config_review_update",
                "config_review_required_update",
                "config_add_tag",
                "config_edit_tags",
                "config_remove_tag",
                "config_monitoring_metrics_update",
                "config_edit_target_apps",
                "update_config_analytics_enabled",
                "set_self_approvals_blocked",
                "release_pipeline_completed",
                "release_pipeline_waiting_for_review",
                "pin_dashboard_for_company",
                "add_dashboard_widget",
                "create_dashboard",
                "delete_dashboard_widget",
                "edit_dashboard_widget",
                "delete_dashboard",
                "edit_dashboard_description",
                "edit_dashboard_name",
                "restore_dashboard",
                "update_dashboard_widgets_from_generated_tags",
                "dashboard_update_owners",
                "update_dashboard_settings",
                "create_topline_alert",
                "update_topline_alert",
                "delete_topline_alert",
                "active_user_definition_update",
                "company_create",
                "company_metric_management_update",
                "metric_allowed_reviewers_update",
                "metric_review_commit",
                "metric_review_create",
                "metric_review_info_update",
                "set_metric_directionality",
                "custom_metric_edit",
                "custom_metric_name_edit",
                "custom_metric_review_accept",
                "custom_metric_review_delete",
                "custom_metric_review_reject",
                "delete_metric",
                "archive_metric",
                "unarchive_metric",
                "cancel_delete_metric",
                "cancel_archive_metric",
                "edit_guardrail_metric_alert",
                "create_guardrail_metric_alert",
                "delete_guardrail_metric_alert",
                "resolve_guardrail_metric_alert",
                "unsnooze_guardrail_metric_alert",
                "update_echidna_metric_loading_window",
                "update_metric_review_required",
                "layer_reviews_on",
                "delete_tag",
                "ID_list_update",
                "update_gate_is_permanent",
                "load_echidna_metric",
                "batch_load_echidna_topline_impact",
                "update_server_sdk_configuration_rollback",
                "company_ID_type_add",
                "update_echidna_source_review_required",
                "AWS_marketplace_account_delete",
                "batch_cancel_company_invites",
                "batch_user_role_update",
                "company_basic_info_edit",
                "company_delete",
                "company_email_domain_config_delete",
                "company_environments_edit",
                "add_geo_type",
                "delete_geo_type",
                "company_ID_type_delete",
                "company_ID_type_edit",
                "company_invite_access_update",
                "update_entities_require_teams",
                "update_company_user_store_enabled",
                "company_member_remove",
                "company_metric_delete",
                "company_snapshot_delete",
                "config_id_type_update",
                "config_update_owners",
                "create_customer_app",
                "edit_target_app",
                "delete_target_app",
                "source_allowed_reviewers_update",
                "create_echidna_assignment_source",
                "create_echidna_entity_property_source",
                "create_echidna_metric_source",
                "create_echidna_data_quality_checks",
                "create_echidna_source_review",
                "accept_echidna_source_review",
                "commit_echidna_source_review",
                "reject_echidna_source_review",
                "update_echidna_source_review",
                "delete_echidna_source_review",
                "create_power_analysis_gate_query",
                "create_power_analysis_custom_query",
                "custom_pulse_query_create",
                "custom_pulse_query_delete",
                "custom_pulse_query_name_edit",
                "custom_query_toggle_favorite",
                "custom_sankey_delete",
                "delete_echidna_assignment_source",
                "delete_echidna_entity_property_source",
                "delete_echidna_metric_source",
                "delete_payment_method",
                "tag_update_owners",
                "modify_override_config",
                "modify_overrides",
                "remove_override_config",
                "scheduled_custom_pulse_query_create",
                "integration_delete",
                "integration_create",
                "integration_update",
                "scheduled_pulse_custom_query_delete",
                "scheduled_pulse_query_name_edit",
                "user_data_load",
                "organization_member_remove",
                "shared_report_link_upsert",
                "scheduled_pulse_rollups_update",
                "OIDC_configuration_delete",
                "project_review_group_delete",
                "SSO_disable",
                "project_description_edit",
                "project_owner_set",
                "user_role_update",
                "OIDC_configuration_upsert",
                "payment_entitlements_upsert",
                "project_review_group_upsert",
                "project_review_group_remove",
                "update_team_settings",
                "update_team_admins",
                "update_team_name",
                "update_team_description",
                "update_team",
                "shared_report_link_delete",
                "experiment_data_report_rename",
                "experiment_data_report_update_parameters",
                "event_dimension_update",
                "integration_set_enabled",
                "integration_update_disabled_events",
                "integration_update_outgoing_config",
                "integration_update_rate_limits",
                "integration_upsert",
                "ingestion_source_delete",
                "tag_configs_bulk",
                "org_api_key_create",
                "set_personal_api_key_access",
                "sdk_key_create",
                "sdk_key_deactivate",
                "sdk_key_delete",
                "secret_key_regenerate",
                "sdk_key_update_description",
                "set_api_share_key_access",
                "set_plan_type",
                "generate_integration_webhook_secret",
                "set_default_payment_method",
                "set_user_sampling_rate",
                "sdk_key_update_environments",
                "upsert_trigger_integration",
                "delete_trigger_integration",
                "dismiss_runaway_entity",
                "update_echidna_metric_source",
                "update_echidna_metric_source_name",
                "update_echidna_metric_tag_or_description",
                "update_echidna_assignment_source",
                "update_echidna_assignment_source_name",
                "update_echidna_assignment_source_loading_window",
                "update_echidna_entity_property_source",
                "update_echidna_entity_property_source_name",
                "update_echidna_source_owner",
                "update_precommit_hook",
                "load_echidna_pulse",
                "load_echidna_autotune_pulse",
                "load_echidna_assignment_source",
                "set_echidna_schedule_hour",
                "echidna_drop_tables",
                "upsert_user_role",
                "delete_user_role",
                "sdk_key_update_target_app",
                "set_gate_analytics_enabled_by_default",
                "set_dynamic_config_analytics_enabled_by_default",
                "set_gate_analytics_0_100_exposures_enabled",
                "update_bv3_subscription",
                "upsert_experiment_settings",
                "upsert_gate_settings",
                "sdk_key_update_scopes",
                "user_login",
                "param_store_create",
                "param_store_update",
                "set_bv3_plan_type",
                "set_echidna_project_pulse_schedule",
                "set_echidna_project_metric_schedule",
                "set_company_default_user_role",
                "set_company_session_replay_sampling_rate",
                "set_company_session_replay_settings",
                "cancel_echidna_dag",
                "set_require_target_app_for_new_entity",
                "add_segments_of_interest_property",
                "delete_segments_of_interest_property",
                "add_srm_debugger_custom_dimension",
                "delete_srm_debugger_custom_dimension",
                "param_store_delete",
                "setup_external_opt_in",
                "param_store_update_owners",
                "create_statsig_proxy",
                "update_echidna_assignment_source_is_verified",
                "update_echidna_metric_source_is_verified",
                "update_echidna_entity_property_source_is_verified",
                "update_echidna_source_is_verified",
                "set_automated_bot_removals",
                "pulse_results_export",
                "update_company_auto_capture_settings",
                "update_company_experiment_exclusion_segment",
                "set_stop_new_assignment_toggle",
                "set_stop_experiment_enabled",
                "update_company_remove_default_gates_setting",
                "set_whn_results_export_setting",
                "update_experiment_quality_score_settings",
                "update_experiment_salt",
                "update_precommit_webhook_key",
                "set_whn_table_ttls",
                "set_id_resolution_inferred_id",
                "set_id_resolution_labeled_id",
                "add_session_recordings_to_playlist",
                "delete_session_recordings_from_playlist",
                "delete_session_replay_playlist",
                "backfill_metric_results",
                "cancel_metric_backfills",
                "archive_org_project",
                "update_ai_assistance_enabled",
                "update_ai_business_context",
                "update_experiment_ai_settings",
                "upsert_ai_config_eval_groups",
                "upsert_user_store_client_targeting_properties",
                "set_ai_config_baseline_version",
                "verify_dashboard",
                "set_first_exposure_user_store_default",
                "update_experiment_quality_score_criteria"
              ]
            }
          },
          {
            "name": "actionTypes",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "edit_experiment_scheduled_start",
                  "edit_ai_config_agent_version",
                  "update_ai_dataset",
                  "upload_ai_config_dataset_csv",
                  "resalt_experiment",
                  "edit_ai_config_eval_settings",
                  "delete_ai_config",
                  "set_suggest_cure_covariates",
                  "edit_ai_playground_setup",
                  "start_ai_config_version_evaluation_job",
                  "start_ai_playground_completion_job",
                  "stop_ai_config_version_evaluation_job",
                  "clone_ai_config",
                  "edit_ai_config_version",
                  "delete_ai_config_version",
                  "clone_ai_config_version",
                  "ai_config_create",
                  "ai_playground_create",
                  "create_ai_dataset",
                  "create_ai_config_version",
                  "upsert_ai_config_version",
                  "create_ai_config_eval_grader",
                  "edit_ai_config_eval_grader",
                  "delete_ai_config_eval_grader",
                  "set_enable_id_resolution_toggle",
                  "dynamic_config_create",
                  "dynamic_config_template_create",
                  "dynamic_config_update_owners",
                  "gate_overrides_update",
                  "gate_template_create",
                  "gate_create",
                  "gate_update",
                  "set_user_sampling_rate_for_gate",
                  "gate_update_owners",
                  "update_store_0_100_exposures",
                  "update_gate_analytics_enabled",
                  "update_gate_display_name",
                  "release_pipeline_create",
                  "release_pipeline_update",
                  "release_pipeline_delete",
                  "update_config_release_pipeline",
                  "release_pipeline_trigger_create",
                  "apply_experiment_review",
                  "extend_experiment_pulse_end_date",
                  "restart_experiment_pulse",
                  "autotune_experiment_create",
                  "autotune_experiment_delete",
                  "autotune_experiment_snapshot_delete",
                  "autotune_experiment_edit",
                  "autotune_experiment_update_target_apps",
                  "autotune_experiment_update_pulse_paused",
                  "autotune_overrides_edit",
                  "autotune_reviews_on",
                  "experiment_data_report_delete",
                  "experiment_discussion_post_create",
                  "experiment_discussion_post_delete",
                  "experiment_abandon",
                  "experiment_pause_assignment",
                  "experiment_stopped",
                  "experiment_review_accept",
                  "experiment_review_reject",
                  "experiment_template_create",
                  "update_template_decision_framework",
                  "remove_template_decision_framework",
                  "experiment_create",
                  "experiment_review_create",
                  "experiment_delete",
                  "experiment_review_delete",
                  "experiment_review_update_team",
                  "experiment_snapshot_delete",
                  "experiment_group_disable",
                  "experiment_description_edit",
                  "experiment_display_name_edit",
                  "experiment_edit",
                  "experiment_overrides_edit",
                  "hypothesis_edit",
                  "key_experiment_metrics_edit",
                  "experiment_advanced_settings_edit",
                  "experiment_decision_make",
                  "experiment_restart",
                  "experiment_restart_as_new",
                  "experiment_rollout",
                  "experiment_schedule_rollout",
                  "experiment_reviews_on",
                  "experiment_start",
                  "schedule_experiment_start",
                  "experiment_follow_toggle",
                  "experiment_allowed_reviewers_update",
                  "experiment_review_info_update",
                  "update_experiment_enabled_non_prod_environments",
                  "archive_experiment",
                  "unarchive_experiment",
                  "experiment_update_owners",
                  "update_echidna_subtype",
                  "setup_stratified_sampling",
                  "experiment_update_target_apps",
                  "experiment_update_subdimension_filter",
                  "experiment_review_update_overrides",
                  "experiment_review_update_owners",
                  "experiment_update_decision_note",
                  "experiment_update_summary_sections",
                  "unattach_experiment_to_power_analysis_report",
                  "attach_experiment_to_power_analysis_report",
                  "pin_chart_to_summary",
                  "set_geotest_design",
                  "delete_geotest_design",
                  "create_geotest_design",
                  "experiment_assigned_to_layer",
                  "holdout_create",
                  "holdout_delete",
                  "holdout_layer_parameter_values_update",
                  "holdout_update",
                  "holdout_update_owners",
                  "metric_edit_definition",
                  "metric_edit_description",
                  "metric_add_tag",
                  "metric_remove_tag",
                  "schedule_delete_metric",
                  "schedule_archive_metric",
                  "update_metric_is_permanent",
                  "update_metric_is_verified",
                  "metric_reviews_on",
                  "metric_disable_reviews_locally",
                  "custom_metric_definition_edit",
                  "custom_metric_definition_create",
                  "custom_metric_definition_delete",
                  "custom_metric_update_owners",
                  "tag_metrics_bulk",
                  "tag_create",
                  "tag_delete",
                  "tag_edit",
                  "segment_create",
                  "segment_update_owners",
                  "layer_update_owners",
                  "layer_review_commit",
                  "layer_review_accept",
                  "layer_parameter_add",
                  "layer_create",
                  "layer_review_create",
                  "layer_review_delete",
                  "layer_delete",
                  "layer_snapshot_delete",
                  "layer_description_edit",
                  "layer_edit",
                  "layer_overrides_edit",
                  "layer_parameters_edit",
                  "layer_review_reject",
                  "layer_allowed_reviewers_update",
                  "layer_review_info_update",
                  "layer_update_target_apps",
                  "delete_layer_parameter",
                  "update_layer_parameter",
                  "config_review_accept",
                  "config_review_commit",
                  "config_review_create",
                  "config_delete",
                  "config_review_delete",
                  "config_reviews_disable",
                  "config_review_reject",
                  "config_resalt",
                  "config_revert",
                  "config_require_reviews",
                  "config_state_toggle",
                  "config_allowed_reviewers_update",
                  "config_conditions_update",
                  "config_default_value_update",
                  "config_description_update",
                  "config_display_name_update",
                  "config_environments_update",
                  "config_review_info_update",
                  "config_review_update",
                  "config_review_required_update",
                  "config_add_tag",
                  "config_edit_tags",
                  "config_remove_tag",
                  "config_monitoring_metrics_update",
                  "config_edit_target_apps",
                  "update_config_analytics_enabled",
                  "set_self_approvals_blocked",
                  "release_pipeline_completed",
                  "release_pipeline_waiting_for_review",
                  "pin_dashboard_for_company",
                  "add_dashboard_widget",
                  "create_dashboard",
                  "delete_dashboard_widget",
                  "edit_dashboard_widget",
                  "delete_dashboard",
                  "edit_dashboard_description",
                  "edit_dashboard_name",
                  "restore_dashboard",
                  "update_dashboard_widgets_from_generated_tags",
                  "dashboard_update_owners",
                  "update_dashboard_settings",
                  "create_topline_alert",
                  "update_topline_alert",
                  "delete_topline_alert",
                  "active_user_definition_update",
                  "company_create",
                  "company_metric_management_update",
                  "metric_allowed_reviewers_update",
                  "metric_review_commit",
                  "metric_review_create",
                  "metric_review_info_update",
                  "set_metric_directionality",
                  "custom_metric_edit",
                  "custom_metric_name_edit",
                  "custom_metric_review_accept",
                  "custom_metric_review_delete",
                  "custom_metric_review_reject",
                  "delete_metric",
                  "archive_metric",
                  "unarchive_metric",
                  "cancel_delete_metric",
                  "cancel_archive_metric",
                  "edit_guardrail_metric_alert",
                  "create_guardrail_metric_alert",
                  "delete_guardrail_metric_alert",
                  "resolve_guardrail_metric_alert",
                  "unsnooze_guardrail_metric_alert",
                  "update_echidna_metric_loading_window",
                  "update_metric_review_required",
                  "layer_reviews_on",
                  "delete_tag",
                  "ID_list_update",
                  "update_gate_is_permanent",
                  "load_echidna_metric",
                  "batch_load_echidna_topline_impact",
                  "update_server_sdk_configuration_rollback",
                  "company_ID_type_add",
                  "update_echidna_source_review_required",
                  "AWS_marketplace_account_delete",
                  "batch_cancel_company_invites",
                  "batch_user_role_update",
                  "company_basic_info_edit",
                  "company_delete",
                  "company_email_domain_config_delete",
                  "company_environments_edit",
                  "add_geo_type",
                  "delete_geo_type",
                  "company_ID_type_delete",
                  "company_ID_type_edit",
                  "company_invite_access_update",
                  "update_entities_require_teams",
                  "update_company_user_store_enabled",
                  "company_member_remove",
                  "company_metric_delete",
                  "company_snapshot_delete",
                  "config_id_type_update",
                  "config_update_owners",
                  "create_customer_app",
                  "edit_target_app",
                  "delete_target_app",
                  "source_allowed_reviewers_update",
                  "create_echidna_assignment_source",
                  "create_echidna_entity_property_source",
                  "create_echidna_metric_source",
                  "create_echidna_data_quality_checks",
                  "create_echidna_source_review",
                  "accept_echidna_source_review",
                  "commit_echidna_source_review",
                  "reject_echidna_source_review",
                  "update_echidna_source_review",
                  "delete_echidna_source_review",
                  "create_power_analysis_gate_query",
                  "create_power_analysis_custom_query",
                  "custom_pulse_query_create",
                  "custom_pulse_query_delete",
                  "custom_pulse_query_name_edit",
                  "custom_query_toggle_favorite",
                  "custom_sankey_delete",
                  "delete_echidna_assignment_source",
                  "delete_echidna_entity_property_source",
                  "delete_echidna_metric_source",
                  "delete_payment_method",
                  "tag_update_owners",
                  "modify_override_config",
                  "modify_overrides",
                  "remove_override_config",
                  "scheduled_custom_pulse_query_create",
                  "integration_delete",
                  "integration_create",
                  "integration_update",
                  "scheduled_pulse_custom_query_delete",
                  "scheduled_pulse_query_name_edit",
                  "user_data_load",
                  "organization_member_remove",
                  "shared_report_link_upsert",
                  "scheduled_pulse_rollups_update",
                  "OIDC_configuration_delete",
                  "project_review_group_delete",
                  "SSO_disable",
                  "project_description_edit",
                  "project_owner_set",
                  "user_role_update",
                  "OIDC_configuration_upsert",
                  "payment_entitlements_upsert",
                  "project_review_group_upsert",
                  "project_review_group_remove",
                  "update_team_settings",
                  "update_team_admins",
                  "update_team_name",
                  "update_team_description",
                  "update_team",
                  "shared_report_link_delete",
                  "experiment_data_report_rename",
                  "experiment_data_report_update_parameters",
                  "event_dimension_update",
                  "integration_set_enabled",
                  "integration_update_disabled_events",
                  "integration_update_outgoing_config",
                  "integration_update_rate_limits",
                  "integration_upsert",
                  "ingestion_source_delete",
                  "tag_configs_bulk",
                  "org_api_key_create",
                  "set_personal_api_key_access",
                  "sdk_key_create",
                  "sdk_key_deactivate",
                  "sdk_key_delete",
                  "secret_key_regenerate",
                  "sdk_key_update_description",
                  "set_api_share_key_access",
                  "set_plan_type",
                  "generate_integration_webhook_secret",
                  "set_default_payment_method",
                  "set_user_sampling_rate",
                  "sdk_key_update_environments",
                  "upsert_trigger_integration",
                  "delete_trigger_integration",
                  "dismiss_runaway_entity",
                  "update_echidna_metric_source",
                  "update_echidna_metric_source_name",
                  "update_echidna_metric_tag_or_description",
                  "update_echidna_assignment_source",
                  "update_echidna_assignment_source_name",
                  "update_echidna_assignment_source_loading_window",
                  "update_echidna_entity_property_source",
                  "update_echidna_entity_property_source_name",
                  "update_echidna_source_owner",
                  "update_precommit_hook",
                  "load_echidna_pulse",
                  "load_echidna_autotune_pulse",
                  "load_echidna_assignment_source",
                  "set_echidna_schedule_hour",
                  "echidna_drop_tables",
                  "upsert_user_role",
                  "delete_user_role",
                  "sdk_key_update_target_app",
                  "set_gate_analytics_enabled_by_default",
                  "set_dynamic_config_analytics_enabled_by_default",
                  "set_gate_analytics_0_100_exposures_enabled",
                  "update_bv3_subscription",
                  "upsert_experiment_settings",
                  "upsert_gate_settings",
                  "sdk_key_update_scopes",
                  "user_login",
                  "param_store_create",
                  "param_store_update",
                  "set_bv3_plan_type",
                  "set_echidna_project_pulse_schedule",
                  "set_echidna_project_metric_schedule",
                  "set_company_default_user_role",
                  "set_company_session_replay_sampling_rate",
                  "set_company_session_replay_settings",
                  "cancel_echidna_dag",
                  "set_require_target_app_for_new_entity",
                  "add_segments_of_interest_property",
                  "delete_segments_of_interest_property",
                  "add_srm_debugger_custom_dimension",
                  "delete_srm_debugger_custom_dimension",
                  "param_store_delete",
                  "setup_external_opt_in",
                  "param_store_update_owners",
                  "create_statsig_proxy",
                  "update_echidna_assignment_source_is_verified",
                  "update_echidna_metric_source_is_verified",
                  "update_echidna_entity_property_source_is_verified",
                  "update_echidna_source_is_verified",
                  "set_automated_bot_removals",
                  "pulse_results_export",
                  "update_company_auto_capture_settings",
                  "update_company_experiment_exclusion_segment",
                  "set_stop_new_assignment_toggle",
                  "set_stop_experiment_enabled",
                  "update_company_remove_default_gates_setting",
                  "set_whn_results_export_setting",
                  "update_experiment_quality_score_settings",
                  "update_experiment_salt",
                  "update_precommit_webhook_key",
                  "set_whn_table_ttls",
                  "set_id_resolution_inferred_id",
                  "set_id_resolution_labeled_id",
                  "add_session_recordings_to_playlist",
                  "delete_session_recordings_from_playlist",
                  "delete_session_replay_playlist",
                  "backfill_metric_results",
                  "cancel_metric_backfills",
                  "archive_org_project",
                  "update_ai_assistance_enabled",
                  "update_ai_business_context",
                  "update_experiment_ai_settings",
                  "upsert_ai_config_eval_groups",
                  "upsert_user_store_client_targeting_properties",
                  "set_ai_config_baseline_version",
                  "verify_dashboard",
                  "set_first_exposure_user_store_default",
                  "update_experiment_quality_score_criteria"
                ]
              }
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Audit logs listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AuditLogDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Audit logs listed successfully.",
                    "data": [
                      {
                        "id": "25KPZcLjTY7AS1uZdBolPZ",
                        "name": "test_gate_1",
                        "changeLog": "Created Gate",
                        "actionType": "gate_create",
                        "date": "Mon Sep 26 2022",
                        "time": "23:46:14 GMT+0000 (Coordinated Universal Time)",
                        "updatedBy": "Jane Doe",
                        "updatedByUserID": "4eoDlYj7svJixZfDsYSn",
                        "changes": {
                          "rules": {
                            "new": [
                              {
                                "groupName": "test",
                                "percentagePass": 100,
                                "conditionJSON": [
                                  {
                                    "conditionType": 1,
                                    "operator": 0,
                                    "value": [
                                      "1"
                                    ],
                                    "extraConfig": {}
                                  }
                                ],
                                "returnValueJSON": "true",
                                "id": "BfGswoMDcsZ4y9Le1d9O",
                                "salt": "8df8n90p-d9bj-1l23-c9bl-1m022n9bzps8",
                                "environment": "production",
                                "rollouts": [],
                                "enabledEnvironments": [
                                  "development",
                                  "staging",
                                  "production"
                                ]
                              }
                            ],
                            "old": [
                              {
                                "groupName": "test",
                                "percentagePass": 100,
                                "conditionJSON": [
                                  {
                                    "conditionType": 1,
                                    "operator": 0,
                                    "value": [
                                      "1"
                                    ],
                                    "extraConfig": {}
                                  }
                                ],
                                "returnValueJSON": "true",
                                "id": "BfGswoMDcsZ4y9Le1d9O",
                                "salt": "8df8n90p-d9bj-1l23-c9bl-1m022n9bzps8",
                                "environment": "production",
                                "rollouts": [],
                                "enabledEnvironments": [
                                  "development",
                                  "staging"
                                ]
                              }
                            ]
                          }
                        }
                      },
                      {
                        "id": "19LZJaPtCM4GT1sUbWlqVC",
                        "name": "check_employee",
                        "changeLog": "Removed Tag from Config",
                        "actionType": "config_remove_tag",
                        "date": "Mon Sep 26 2022",
                        "time": "21:25:22 GMT+0000 (Coordinated Universal Time)",
                        "updatedBy": "John Doe",
                        "updatedByUserID": "fd7dWH15Ddncvl3xhVLH",
                        "changes": {}
                      },
                      {
                        "id": "76LGVrItCR9WE1iDfNmpHT",
                        "name": "check_employee",
                        "changeLog": "Removed Tag from Config",
                        "actionType": "config_remove_tag",
                        "date": "Mon Sep 26 2022",
                        "time": "21:25:18 GMT+0000 (Coordinated Universal Time)",
                        "updatedBy": "John Doe",
                        "updatedByUserID": "fd7dWH15Ddncvl3xhVLH",
                        "changes": {}
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 3,
                      "pageNumber": 2,
                      "totalItems": 829,
                      "nextPage": "statsigapi.net/console/v1/audit_logs?page=3&limit=3",
                      "previousPage": "statsigapi.net/console/v1/audit_logs?page=1&limit=3",
                      "all": "statsigapi.net/console/v1/audit_logs"
                    }
                  }
                },
                "example": {
                  "message": "Audit logs listed successfully.",
                  "data": [
                    {
                      "id": "25KPZcLjTY7AS1uZdBolPZ",
                      "name": "test_gate_1",
                      "changeLog": "Created Gate",
                      "actionType": "gate_create",
                      "date": "Mon Sep 26 2022",
                      "time": "23:46:14 GMT+0000 (Coordinated Universal Time)",
                      "updatedBy": "Jane Doe",
                      "updatedByUserID": "4eoDlYj7svJixZfDsYSn",
                      "changes": {
                        "rules": {
                          "new": [
                            {
                              "groupName": "test",
                              "percentagePass": 100,
                              "conditionJSON": [
                                {
                                  "conditionType": 1,
                                  "operator": 0,
                                  "value": [
                                    "1"
                                  ],
                                  "extraConfig": {}
                                }
                              ],
                              "returnValueJSON": "true",
                              "id": "BfGswoMDcsZ4y9Le1d9O",
                              "salt": "8df8n90p-d9bj-1l23-c9bl-1m022n9bzps8",
                              "environment": "production",
                              "rollouts": [],
                              "enabledEnvironments": [
                                "development",
                                "staging",
                                "production"
                              ]
                            }
                          ],
                          "old": [
                            {
                              "groupName": "test",
                              "percentagePass": 100,
                              "conditionJSON": [
                                {
                                  "conditionType": 1,
                                  "operator": 0,
                                  "value": [
                                    "1"
                                  ],
                                  "extraConfig": {}
                                }
                              ],
                              "returnValueJSON": "true",
                              "id": "BfGswoMDcsZ4y9Le1d9O",
                              "salt": "8df8n90p-d9bj-1l23-c9bl-1m022n9bzps8",
                              "environment": "production",
                              "rollouts": [],
                              "enabledEnvironments": [
                                "development",
                                "staging"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": "19LZJaPtCM4GT1sUbWlqVC",
                      "name": "check_employee",
                      "changeLog": "Removed Tag from Config",
                      "actionType": "config_remove_tag",
                      "date": "Mon Sep 26 2022",
                      "time": "21:25:22 GMT+0000 (Coordinated Universal Time)",
                      "updatedBy": "John Doe",
                      "updatedByUserID": "fd7dWH15Ddncvl3xhVLH",
                      "changes": {}
                    },
                    {
                      "id": "76LGVrItCR9WE1iDfNmpHT",
                      "name": "check_employee",
                      "changeLog": "Removed Tag from Config",
                      "actionType": "config_remove_tag",
                      "date": "Mon Sep 26 2022",
                      "time": "21:25:18 GMT+0000 (Coordinated Universal Time)",
                      "updatedBy": "John Doe",
                      "updatedByUserID": "fd7dWH15Ddncvl3xhVLH",
                      "changes": {}
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 3,
                    "pageNumber": 2,
                    "totalItems": 829,
                    "nextPage": "statsigapi.net/console/v1/audit_logs?page=3&limit=3",
                    "previousPage": "statsigapi.net/console/v1/audit_logs?page=1&limit=3",
                    "all": "statsigapi.net/console/v1/audit_logs"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Audit Logs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/autotunes": {
      "get": {
        "summary": "List Autotune",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autotune Experiments listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AutotuneExperimentDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Autotune Experiments listed successfully.",
                    "data": [
                      {
                        "id": "test_autotune_exp",
                        "name": "test_autotune_exp",
                        "description": "dsdsdsd test",
                        "idType": "userID",
                        "lastModifierID": "24hiIXz1maFaDwtYEetv2i",
                        "lastModifiedTime": 1716324033128,
                        "lastModifierName": "jairo Garciga",
                        "lastModifierEmail": "jairo@statsig.com",
                        "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                        "createdTime": 1688072516890,
                        "creatorName": "Samuel Kitono",
                        "creatorEmail": "samuel@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "team": null,
                        "isStarted": false,
                        "variants": [
                          {
                            "name": "test_12",
                            "id": "7eOW6aXU7F07KxrggOrAdy",
                            "json": {
                              "user": {
                                "id": 12345,
                                "name": "Jane Doe",
                                "email": "jane.doe@example.com",
                                "isActive": true,
                                "roles": [
                                  "admin",
                                  "editor",
                                  "subscriber"
                                ]
                              },
                              "posts": [
                                {
                                  "id": 1,
                                  "title": "Introduction to JSON5",
                                  "content": "JSON5 is a superset of JSON that aims to be easier for humans to write and maintain.",
                                  "tags": [
                                    "json5",
                                    "json",
                                    "javascript"
                                  ],
                                  "comments": [
                                    {
                                      "id": 101,
                                      "author": "John Smith",
                                      "content": "Great post! Very informative.",
                                      "likes": 5
                                    },
                                    {
                                      "id": 102,
                                      "author": "Alice Johnson",
                                      "content": "I found this very helpful. Thanks!",
                                      "likes": 3
                                    }
                                  ]
                                },
                                {
                                  "id": 2,
                                  "title": "Advanced JSON5 Features",
                                  "content": "Explore the advanced features of JSON5, including comments, trailing commas, and more.",
                                  "tags": [
                                    "json5",
                                    "advanced",
                                    "features"
                                  ],
                                  "comments": [
                                    {
                                      "id": 201,
                                      "author": "Bob Brown",
                                      "content": "I didn't know JSON5 could do this. Amazing!",
                                      "likes": 8
                                    }
                                  ]
                                }
                              ],
                              "settings": {
                                "theme": "dark",
                                "notificationsEnabled": true,
                                "language": "en-US",
                                "layout": {
                                  "header": true,
                                  "footer": true,
                                  "sidebar": "collapsed"
                                }
                              },
                              "metadata": {
                                "version": "1.0.0",
                                "author": "Jane Doe",
                                "lastUpdated": "2024-05-21T10:00:00Z"
                              }
                            }
                          },
                          {
                            "name": "var1",
                            "id": "7eOW6cCWzX9C3WZbRWndwA",
                            "json": {}
                          },
                          {
                            "name": "control",
                            "id": "7GVLLJOBETDYXLn00FXFuQ",
                            "json": {}
                          }
                        ],
                        "successEvent": "add_to_cart",
                        "successEventValue": "",
                        "explorationWindow": "24hrs",
                        "attributionWindow": "2hrs",
                        "winnerThreshold": "95%",
                        "winner": null
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 100,
                      "pageNumber": 1,
                      "totalItems": 1,
                      "nextPage": null,
                      "previousPage": null,
                      "all": "/console/v1/autotunes"
                    }
                  }
                },
                "example": {
                  "message": "Autotune Experiments listed successfully.",
                  "data": [
                    {
                      "id": "test_autotune_exp",
                      "name": "test_autotune_exp",
                      "description": "dsdsdsd test",
                      "idType": "userID",
                      "lastModifierID": "24hiIXz1maFaDwtYEetv2i",
                      "lastModifiedTime": 1716324033128,
                      "lastModifierName": "jairo Garciga",
                      "lastModifierEmail": "jairo@statsig.com",
                      "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                      "createdTime": 1688072516890,
                      "creatorName": "Samuel Kitono",
                      "creatorEmail": "samuel@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "team": null,
                      "isStarted": false,
                      "variants": [
                        {
                          "name": "test_12",
                          "id": "7eOW6aXU7F07KxrggOrAdy",
                          "json": {
                            "user": {
                              "id": 12345,
                              "name": "Jane Doe",
                              "email": "jane.doe@example.com",
                              "isActive": true,
                              "roles": [
                                "admin",
                                "editor",
                                "subscriber"
                              ]
                            },
                            "posts": [
                              {
                                "id": 1,
                                "title": "Introduction to JSON5",
                                "content": "JSON5 is a superset of JSON that aims to be easier for humans to write and maintain.",
                                "tags": [
                                  "json5",
                                  "json",
                                  "javascript"
                                ],
                                "comments": [
                                  {
                                    "id": 101,
                                    "author": "John Smith",
                                    "content": "Great post! Very informative.",
                                    "likes": 5
                                  },
                                  {
                                    "id": 102,
                                    "author": "Alice Johnson",
                                    "content": "I found this very helpful. Thanks!",
                                    "likes": 3
                                  }
                                ]
                              },
                              {
                                "id": 2,
                                "title": "Advanced JSON5 Features",
                                "content": "Explore the advanced features of JSON5, including comments, trailing commas, and more.",
                                "tags": [
                                  "json5",
                                  "advanced",
                                  "features"
                                ],
                                "comments": [
                                  {
                                    "id": 201,
                                    "author": "Bob Brown",
                                    "content": "I didn't know JSON5 could do this. Amazing!",
                                    "likes": 8
                                  }
                                ]
                              }
                            ],
                            "settings": {
                              "theme": "dark",
                              "notificationsEnabled": true,
                              "language": "en-US",
                              "layout": {
                                "header": true,
                                "footer": true,
                                "sidebar": "collapsed"
                              }
                            },
                            "metadata": {
                              "version": "1.0.0",
                              "author": "Jane Doe",
                              "lastUpdated": "2024-05-21T10:00:00Z"
                            }
                          }
                        },
                        {
                          "name": "var1",
                          "id": "7eOW6cCWzX9C3WZbRWndwA",
                          "json": {}
                        },
                        {
                          "name": "control",
                          "id": "7GVLLJOBETDYXLn00FXFuQ",
                          "json": {}
                        }
                      ],
                      "successEvent": "add_to_cart",
                      "successEventValue": "",
                      "explorationWindow": "24hrs",
                      "attributionWindow": "2hrs",
                      "winnerThreshold": "95%",
                      "winner": null
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 100,
                    "pageNumber": 1,
                    "totalItems": 1,
                    "nextPage": null,
                    "previousPage": null,
                    "all": "/console/v1/autotunes"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Autotune",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutotuneCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Autotune Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AutotuneExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Autotune Experiments created successfully.",
                    "data": {
                      "id": "button_color_test",
                      "isStarted": false,
                      "description": "Which color button gets the most clicks.",
                      "lastModifierID": "ajv762klv9nx9hca",
                      "lastModifierName": "CONSOLE API",
                      "variants": [
                        {
                          "name": "red",
                          "json": {
                            "color": "red"
                          }
                        },
                        {
                          "name": "blue",
                          "json": {
                            "color": "blue"
                          }
                        }
                      ],
                      "successEvent": "click",
                      "successEventValue": "",
                      "explorationWindow": "1hr",
                      "attributionWindow": "2hrs",
                      "winnerThreshold": "99%"
                    }
                  }
                },
                "example": {
                  "message": "Autotune Experiments created successfully.",
                  "data": {
                    "id": "button_color_test",
                    "isStarted": false,
                    "description": "Which color button gets the most clicks.",
                    "lastModifierID": "ajv762klv9nx9hca",
                    "lastModifierName": "CONSOLE API",
                    "variants": [
                      {
                        "name": "red",
                        "json": {
                          "color": "red"
                        }
                      },
                      {
                        "name": "blue",
                        "json": {
                          "color": "blue"
                        }
                      }
                    ],
                    "successEvent": "click",
                    "successEventValue": "",
                    "explorationWindow": "1hr",
                    "attributionWindow": "2hrs",
                    "winnerThreshold": "99%"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/autotunes/{id}": {
      "get": {
        "summary": "Read Autotune",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Autotune Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AutotuneExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Autotune Experiment read successfully.",
                    "data": {
                      "id": "my_autotunes_are_best",
                      "isStarted": false,
                      "description": "helpful summary of what this Autotune is",
                      "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                      "lastModifierName": "CONSOLE API",
                      "variants": [
                        {
                          "name": "red",
                          "json": {
                            "foo": "boo"
                          }
                        },
                        {
                          "name": "blue",
                          "json": {}
                        }
                      ],
                      "successEvent": "purchase_item",
                      "successEventValue": "",
                      "explorationWindow": "1hr",
                      "attributionWindow": "2hrs",
                      "winnerThreshold": "99%"
                    }
                  }
                },
                "example": {
                  "message": "Autotune Experiment read successfully.",
                  "data": {
                    "id": "my_autotunes_are_best",
                    "isStarted": false,
                    "description": "helpful summary of what this Autotune is",
                    "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                    "lastModifierName": "CONSOLE API",
                    "variants": [
                      {
                        "name": "red",
                        "json": {
                          "foo": "boo"
                        }
                      },
                      {
                        "name": "blue",
                        "json": {}
                      }
                    ],
                    "successEvent": "purchase_item",
                    "successEventValue": "",
                    "explorationWindow": "1hr",
                    "attributionWindow": "2hrs",
                    "winnerThreshold": "99%"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Fully Update Autotune",
        "description": "Update all properties of the experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutotuneFullUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fully Update Autotune Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AutotuneExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Autotune Experiment read successfully.",
                    "data": {
                      "id": "my_autotunes_are_best",
                      "isStarted": false,
                      "description": "helpful summary of what this Autotune is",
                      "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                      "lastModifierName": "CONSOLE API",
                      "variants": [
                        {
                          "name": "red",
                          "json": {
                            "color": "red"
                          }
                        },
                        {
                          "name": "blue",
                          "json": {
                            "color": "blue"
                          }
                        }
                      ],
                      "successEvent": "purchase_item",
                      "successEventValue": "",
                      "explorationWindow": "1hr",
                      "attributionWindow": "2hrs",
                      "winnerThreshold": "99%"
                    }
                  }
                },
                "example": {
                  "message": "Autotune Experiment read successfully.",
                  "data": {
                    "id": "my_autotunes_are_best",
                    "isStarted": false,
                    "description": "helpful summary of what this Autotune is",
                    "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                    "lastModifierName": "CONSOLE API",
                    "variants": [
                      {
                        "name": "red",
                        "json": {
                          "color": "red"
                        }
                      },
                      {
                        "name": "blue",
                        "json": {
                          "color": "blue"
                        }
                      }
                    ],
                    "successEvent": "purchase_item",
                    "successEventValue": "",
                    "explorationWindow": "1hr",
                    "attributionWindow": "2hrs",
                    "winnerThreshold": "99%"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially Update Autotune",
        "description": "Update selected properties of the experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutotunePartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partially Update Autotune Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AutotuneExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Autotune Experiment updated successfully.",
                    "data": {
                      "id": "a_autotune",
                      "isStarted": false,
                      "description": "helpful summary of what this Autotune is",
                      "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                      "lastModifierName": "CONSOLE API",
                      "variants": [
                        {
                          "name": "red",
                          "json": {
                            "color": "red"
                          }
                        },
                        {
                          "name": "blue",
                          "json": {
                            "color": "blue"
                          }
                        }
                      ],
                      "successEvent": "purchase_item",
                      "successEventValue": "",
                      "explorationWindow": "1hr",
                      "attributionWindow": "2hrs",
                      "winnerThreshold": "99%"
                    }
                  }
                },
                "example": {
                  "message": "Autotune Experiment updated successfully.",
                  "data": {
                    "id": "a_autotune",
                    "isStarted": false,
                    "description": "helpful summary of what this Autotune is",
                    "lastModifierID": "jd93DGSnvkauH9FijdGiajh",
                    "lastModifierName": "CONSOLE API",
                    "variants": [
                      {
                        "name": "red",
                        "json": {
                          "color": "red"
                        }
                      },
                      {
                        "name": "blue",
                        "json": {
                          "color": "blue"
                        }
                      }
                    ],
                    "successEvent": "purchase_item",
                    "successEventValue": "",
                    "explorationWindow": "1hr",
                    "attributionWindow": "2hrs",
                    "winnerThreshold": "99%"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Autotune",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Autotune Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Autotune Experiment deleted successfully."
                  }
                },
                "example": {
                  "message": "Autotune Experiment deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Autotune Experiment not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/autotunes/{id}/make_decision": {
      "put": {
        "summary": "Finish Experiment Early",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentStatusUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Finish Experiment Early Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Decision made for Autotune Experiment."
                  }
                },
                "example": {
                  "message": "Decision made for Autotune Experiment."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Autotune experiment has not yet started"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Autotune Experiment not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/autotunes/{id}/reset": {
      "put": {
        "summary": "Reset Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Autotune Experiment successfully restarted."
                  }
                },
                "example": {
                  "message": "Autotune Experiment successfully restarted."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Autotune experiment has not yet started"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Autotune Experiment not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/autotunes/{id}/start": {
      "put": {
        "summary": "Start Autotune Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Start Autotune Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Autotune Experiment successfully started."
                  }
                },
                "example": {
                  "message": "Autotune Experiment successfully started."
                }
              }
            }
          }
        },
        "tags": [
          "Autotunes"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/change_validation": {
      "post": {
        "summary": "Change Validation",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeValidationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Change Validation Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Validation status updated successfully"
                  }
                },
                "example": {
                  "message": "Validation status updated successfully"
                }
              }
            }
          }
        },
        "tags": [
          "Change Validation"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/change_validation/message": {
      "patch": {
        "summary": "Update change validation message",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeValidationUpdateMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Change Validation Message Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Validation message updated successfully"
                  }
                },
                "example": {
                  "message": "Validation message updated successfully"
                }
              }
            }
          }
        },
        "tags": [
          "Change Validation"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/company": {
      "get": {
        "summary": "Get Company Info",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get company info response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CompanyInfoResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Forbidden resource"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden resource"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Company",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs": {
      "get": {
        "summary": "List Dynamic Configs",
        "parameters": [
          {
            "name": "releasePipelineID",
            "required": false,
            "in": "query",
            "description": "The release pipeline ID associated with the dynamic config",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Dynamic Configs Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DynamicConfigDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Configs listed successfully.",
                    "data": [
                      {
                        "id": "example_config",
                        "name": "Example Config",
                        "description": "An example dynamic configuration",
                        "idType": "userID",
                        "lastModifierID": "abc123",
                        "lastModifiedTime": 1600000000000,
                        "lastModifierName": "Jane Doe",
                        "lastModifierEmail": "jane@example.com",
                        "creatorID": "def456",
                        "createdTime": 1500000000000,
                        "creatorName": "John Smith",
                        "creatorEmail": "john@example.com",
                        "targetApps": [
                          "myapp"
                        ],
                        "holdoutIDs": [],
                        "tags": [
                          "example_tag"
                        ],
                        "team": "Product",
                        "isEnabled": true,
                        "rules": [],
                        "defaultValue": {},
                        "defaultValueJson5": "{}",
                        "schema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{}}",
                        "schemaJson5": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"properties\": {}\n}",
                        "version": 1
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Dynamic Configs listed successfully.",
                  "data": [
                    {
                      "id": "example_config",
                      "name": "Example Config",
                      "description": "An example dynamic configuration",
                      "idType": "userID",
                      "lastModifierID": "abc123",
                      "lastModifiedTime": 1600000000000,
                      "lastModifierName": "Jane Doe",
                      "lastModifierEmail": "jane@example.com",
                      "creatorID": "def456",
                      "createdTime": 1500000000000,
                      "creatorName": "John Smith",
                      "creatorEmail": "john@example.com",
                      "targetApps": [
                        "myapp"
                      ],
                      "holdoutIDs": [],
                      "tags": [
                        "example_tag"
                      ],
                      "team": "Product",
                      "isEnabled": true,
                      "rules": [],
                      "defaultValue": {},
                      "defaultValueJson5": "{}",
                      "schema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{}}",
                      "schemaJson5": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"properties\": {}\n}",
                      "version": 1
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Dynamic Config",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicConfigCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Dynamic Config",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Config created successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "name": "a dynamic config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1707344887764,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "rules": [],
                      "defaultValue": {}
                    }
                  }
                },
                "example": {
                  "message": "Dynamic Config created successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "name": "a dynamic config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1707344887764,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": true,
                    "rules": [],
                    "defaultValue": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}": {
      "get": {
        "summary": "Get Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic config read successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "creatorEmail": "johnsmith@mydomain.com",
                      "creatorName": "John Smith",
                      "createdTime": 1674769467002,
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifierName": "CONSOLE API",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierEmail": null,
                      "holdoutIDs": [],
                      "isEnabled": true,
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          },
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ],
                      "defaultValue": {
                        "key": "the default value"
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Dynamic config read successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "creatorEmail": "johnsmith@mydomain.com",
                    "creatorName": "John Smith",
                    "createdTime": 1674769467002,
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifierName": "CONSOLE API",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierEmail": null,
                    "holdoutIDs": [],
                    "isEnabled": true,
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        },
                        "completedAutomatedRollouts": [],
                        "pendingAutomatedRollouts": []
                      }
                    ],
                    "defaultValue": {
                      "key": "the default value"
                    },
                    "tags": [
                      "a tag"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Fully Update Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicConfigFullUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fully Update Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic config updated successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "creatorEmail": "johnsmith@mydomain.com",
                      "creatorName": "John Smith",
                      "createdTime": 1674769467002,
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifierName": "CONSOLE API",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierEmail": null,
                      "holdoutIDs": [],
                      "isEnabled": true,
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          },
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ],
                      "defaultValue": {
                        "key": "the default value"
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Dynamic config updated successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "creatorEmail": "johnsmith@mydomain.com",
                    "creatorName": "John Smith",
                    "createdTime": 1674769467002,
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifierName": "CONSOLE API",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierEmail": null,
                    "holdoutIDs": [],
                    "isEnabled": true,
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        },
                        "completedAutomatedRollouts": [],
                        "pendingAutomatedRollouts": []
                      }
                    ],
                    "defaultValue": {
                      "key": "the default value"
                    },
                    "tags": [
                      "a tag"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially Update Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicConfigPartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partially Update Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic config updated successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "creatorEmail": "johnsmith@mydomain.com",
                      "creatorName": "John Smith",
                      "createdTime": 1674769467002,
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifierName": "CONSOLE API",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierEmail": null,
                      "holdoutIDs": [],
                      "isEnabled": true,
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          },
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ],
                      "defaultValue": {
                        "key": "the default value"
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Dynamic config updated successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "creatorEmail": "johnsmith@mydomain.com",
                    "creatorName": "John Smith",
                    "createdTime": 1674769467002,
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifierName": "CONSOLE API",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierEmail": null,
                    "holdoutIDs": [],
                    "isEnabled": true,
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        },
                        "completedAutomatedRollouts": [],
                        "pendingAutomatedRollouts": []
                      }
                    ],
                    "defaultValue": {
                      "key": "the default value"
                    },
                    "tags": [
                      "a tag"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Dynamic Config deleted successfully."
                  }
                },
                "example": {
                  "message": "Dynamic Config deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/archive": {
      "put": {
        "summary": "Archive Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveSchemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/disable": {
      "put": {
        "summary": "Disable Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disable Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/enable": {
      "put": {
        "summary": "Enable Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enable Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/rule/{ruleId}": {
      "get": {
        "summary": "Get Specific Dynamic Config Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dynamic Config ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Specific Dynamic Config Rule Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigRuleDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Config rules read successfully.",
                    "data": {
                      "id": "6jQEnu1fCnXqjXhm1qGEnt",
                      "baseID": "6jQEnu1fCnXqjXhm1qGEnt",
                      "name": "Other2",
                      "passPercentage": 80,
                      "conditions": [],
                      "environments": null,
                      "completedAutomatedRollouts": [],
                      "pendingAutomatedRollouts": []
                    }
                  }
                },
                "example": {
                  "message": "Dynamic Config rules read successfully.",
                  "data": {
                    "id": "6jQEnu1fCnXqjXhm1qGEnt",
                    "baseID": "6jQEnu1fCnXqjXhm1qGEnt",
                    "name": "Other2",
                    "passPercentage": 80,
                    "conditions": [],
                    "environments": null,
                    "completedAutomatedRollouts": [],
                    "pendingAutomatedRollouts": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Dynamic Config Rule By Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dynamic Config ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DynamicConfigRulePartialDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Dynamic Config Rule Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Config rules updated successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "creatorEmail": "johnsmith@mydomain.com",
                      "creatorName": "John Smith",
                      "createdTime": 1674769467002,
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifierName": "CONSOLE API",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierEmail": null,
                      "holdoutIDs": [],
                      "isEnabled": true,
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          },
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ],
                      "defaultValue": {
                        "key": "the default value"
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Dynamic Config rules updated successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "creatorEmail": "johnsmith@mydomain.com",
                    "creatorName": "John Smith",
                    "createdTime": 1674769467002,
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifierName": "CONSOLE API",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierEmail": null,
                    "holdoutIDs": [],
                    "isEnabled": true,
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        },
                        "completedAutomatedRollouts": [],
                        "pendingAutomatedRollouts": []
                      }
                    ],
                    "defaultValue": {
                      "key": "the default value"
                    },
                    "tags": [
                      "a tag"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Dynamic Config Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Dynamic Config ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleId",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Dynamic Config Rule Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Config rule deleted successfully.",
                    "data": {
                      "id": "a_dynamic_config",
                      "description": "helpful summary of what this dynamic config does",
                      "idType": "userID",
                      "creatorEmail": "johnsmith@mydomain.com",
                      "creatorName": "John Smith",
                      "createdTime": 1674769467002,
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifierName": "CONSOLE API",
                      "lastModifiedTime": 1707344887865,
                      "lastModifierEmail": null,
                      "holdoutIDs": [],
                      "isEnabled": true,
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          },
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ],
                      "defaultValue": {
                        "key": "the default value"
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Dynamic Config rule deleted successfully.",
                  "data": {
                    "id": "a_dynamic_config",
                    "description": "helpful summary of what this dynamic config does",
                    "idType": "userID",
                    "creatorEmail": "johnsmith@mydomain.com",
                    "creatorName": "John Smith",
                    "createdTime": 1674769467002,
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifierName": "CONSOLE API",
                    "lastModifiedTime": 1707344887865,
                    "lastModifierEmail": null,
                    "holdoutIDs": [],
                    "isEnabled": true,
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        },
                        "completedAutomatedRollouts": [],
                        "pendingAutomatedRollouts": []
                      }
                    ],
                    "defaultValue": {
                      "key": "the default value"
                    },
                    "tags": [
                      "a tag"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/rules": {
      "get": {
        "summary": "Get Dynamic Config Rules",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Dynamic Config Rules Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DynamicConfigRulesDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Config rules read successfully.",
                    "data": [
                      {
                        "rules": [
                          {
                            "id": "5pjzfmF8KLFsh81kBPyxvR",
                            "baseID": "5pjzfmF8KLFsh81kBPyxvR",
                            "name": "rule name",
                            "passPercentage": 1,
                            "conditions": [
                              {
                                "type": "browser_name",
                                "targetValue": [],
                                "operator": "any"
                              }
                            ],
                            "environments": null,
                            "completedAutomatedRollouts": [],
                            "pendingAutomatedRollouts": []
                          },
                          {
                            "id": "6jQEnu1fCnXqjXhm1qGEnt",
                            "baseID": "6jQEnu1fCnXqjXhm1qGEnt",
                            "name": "Other2",
                            "passPercentage": 80,
                            "conditions": [],
                            "environments": null,
                            "completedAutomatedRollouts": [],
                            "pendingAutomatedRollouts": []
                          },
                          {
                            "id": "4DonExIcOjSV8kG3WSQ5Zm",
                            "baseID": "4DonExIcOjSV8kG3WSQ5Zm",
                            "name": "Austin's fav rule",
                            "passPercentage": 8,
                            "conditions": [],
                            "environments": null,
                            "completedAutomatedRollouts": [],
                            "pendingAutomatedRollouts": []
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 20000,
                      "pageNumber": 1,
                      "totalItems": 1,
                      "nextPage": null,
                      "previousPage": null,
                      "all": ""
                    }
                  }
                },
                "example": {
                  "message": "Dynamic Config rules read successfully.",
                  "data": [
                    {
                      "rules": [
                        {
                          "id": "5pjzfmF8KLFsh81kBPyxvR",
                          "baseID": "5pjzfmF8KLFsh81kBPyxvR",
                          "name": "rule name",
                          "passPercentage": 1,
                          "conditions": [
                            {
                              "type": "browser_name",
                              "targetValue": [],
                              "operator": "any"
                            }
                          ],
                          "environments": null,
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        },
                        {
                          "id": "6jQEnu1fCnXqjXhm1qGEnt",
                          "baseID": "6jQEnu1fCnXqjXhm1qGEnt",
                          "name": "Other2",
                          "passPercentage": 80,
                          "conditions": [],
                          "environments": null,
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        },
                        {
                          "id": "4DonExIcOjSV8kG3WSQ5Zm",
                          "baseID": "4DonExIcOjSV8kG3WSQ5Zm",
                          "name": "Austin's fav rule",
                          "passPercentage": 8,
                          "conditions": [],
                          "environments": null,
                          "completedAutomatedRollouts": [],
                          "pendingAutomatedRollouts": []
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 20000,
                    "pageNumber": 1,
                    "totalItems": 1,
                    "nextPage": null,
                    "previousPage": null,
                    "all": ""
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/unarchive": {
      "put": {
        "summary": "Unarchive Dynamic Config",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnarchiveSchemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unarchive Dynamic Config Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DynamicConfigDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/dynamic_configs/{id}/versions": {
      "get": {
        "summary": "List Dynamic Config Versions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Dynamic Config Versions Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DynamicConfigDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Dynamic Configs",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/environments": {
      "get": {
        "summary": "Get Environments",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Environments Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EnvironmentsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Environments read successfully.",
                    "data": {
                      "environments": [
                        {
                          "name": "development",
                          "id": "0.35629335902367476",
                          "isProduction": false,
                          "requiresReview": false,
                          "requiresReleasePipeline": true
                        },
                        {
                          "name": "staging",
                          "id": "0.015089163460661137",
                          "isProduction": false,
                          "requiresReview": false,
                          "requiresReleasePipeline": true
                        },
                        {
                          "name": "production",
                          "id": "0.4067426155658289",
                          "isProduction": true,
                          "requiresReview": true,
                          "requiresReleasePipeline": true
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Environments read successfully.",
                  "data": {
                    "environments": [
                      {
                        "name": "development",
                        "id": "0.35629335902367476",
                        "isProduction": false,
                        "requiresReview": false,
                        "requiresReleasePipeline": true
                      },
                      {
                        "name": "staging",
                        "id": "0.015089163460661137",
                        "isProduction": false,
                        "requiresReview": false,
                        "requiresReleasePipeline": true
                      },
                      {
                        "name": "production",
                        "id": "0.4067426155658289",
                        "isProduction": true,
                        "requiresReview": true,
                        "requiresReleasePipeline": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Environments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Environments",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentsUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Environments Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EnvironmentsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Environments updated successfully.",
                    "data": {
                      "environments": [
                        {
                          "name": "development",
                          "id": "0.35629335902367476",
                          "isProduction": false,
                          "requiresReview": false,
                          "requiresReleasePipeline": true
                        },
                        {
                          "name": "latest",
                          "id": "0.08933465966698129",
                          "isProduction": false,
                          "requiresReview": false,
                          "requiresReleasePipeline": true
                        },
                        {
                          "name": "staging",
                          "id": "0.015089163460661137",
                          "isProduction": false,
                          "requiresReview": false,
                          "requiresReleasePipeline": true
                        },
                        {
                          "name": "production",
                          "id": "0.4067426155658289",
                          "isProduction": true,
                          "requiresReview": true,
                          "requiresReleasePipeline": true
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Environments updated successfully.",
                  "data": {
                    "environments": [
                      {
                        "name": "development",
                        "id": "0.35629335902367476",
                        "isProduction": false,
                        "requiresReview": false,
                        "requiresReleasePipeline": true
                      },
                      {
                        "name": "latest",
                        "id": "0.08933465966698129",
                        "isProduction": false,
                        "requiresReview": false,
                        "requiresReleasePipeline": true
                      },
                      {
                        "name": "staging",
                        "id": "0.015089163460661137",
                        "isProduction": false,
                        "requiresReview": false,
                        "requiresReleasePipeline": true
                      },
                      {
                        "name": "production",
                        "id": "0.4067426155658289",
                        "isProduction": true,
                        "requiresReview": true,
                        "requiresReleasePipeline": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Environments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/events": {
      "get": {
        "summary": "List Events",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Events response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoggedEventDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Event values listed successfully.",
                    "data": [
                      {
                        "timestamp": "1720567284328",
                        "name": "time_spent_on_page",
                        "source": "statsig-node",
                        "value": "463",
                        "userID": "1922",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567284328",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "appliances",
                        "userID": "1922",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567284321",
                        "name": "time_spent_on_page",
                        "source": "statsig-node",
                        "value": "421",
                        "userID": "1026",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567284321",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "electronics",
                        "userID": "1026",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567284485",
                        "name": "time_spent_on_page",
                        "source": "statsig-node",
                        "value": "273",
                        "userID": "8455",
                        "metadata": {}
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 5,
                      "pageNumber": 1,
                      "totalItems": 1000,
                      "nextPage": "/console/v1/events?page=2&limit=5",
                      "previousPage": null,
                      "all": "/console/v1/events"
                    }
                  }
                },
                "example": {
                  "message": "Event values listed successfully.",
                  "data": [
                    {
                      "timestamp": "1720567284328",
                      "name": "time_spent_on_page",
                      "source": "statsig-node",
                      "value": "463",
                      "userID": "1922",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567284328",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "appliances",
                      "userID": "1922",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567284321",
                      "name": "time_spent_on_page",
                      "source": "statsig-node",
                      "value": "421",
                      "userID": "1026",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567284321",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "electronics",
                      "userID": "1026",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567284485",
                      "name": "time_spent_on_page",
                      "source": "statsig-node",
                      "value": "273",
                      "userID": "8455",
                      "metadata": {}
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 5,
                    "pageNumber": 1,
                    "totalItems": 1000,
                    "nextPage": "/console/v1/events?page=2&limit=5",
                    "previousPage": null,
                    "all": "/console/v1/events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Events",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/events/{eventName}": {
      "get": {
        "summary": "Get specific events",
        "parameters": [
          {
            "name": "eventName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get specific events response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LoggedEventDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Event values listed successfully.",
                    "data": [
                      {
                        "timestamp": "1720567904601",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "appliances",
                        "userID": "3411",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904594",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "sports",
                        "userID": "1037",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904307",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "",
                        "userID": "5056",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904299",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "books",
                        "userID": "7326",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904288",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "books",
                        "userID": "166",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904310",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "office products",
                        "userID": "3255",
                        "metadata": {}
                      },
                      {
                        "timestamp": "1720567904299",
                        "name": "add_to_cart",
                        "source": "statsig-node",
                        "value": "sports",
                        "userID": "8598",
                        "metadata": {}
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 7,
                      "pageNumber": 1,
                      "totalItems": 100,
                      "nextPage": "/console/v1/events/add_to_cart?page=2&limit=7",
                      "previousPage": null,
                      "all": "/console/v1/events/add_to_cart"
                    }
                  }
                },
                "example": {
                  "message": "Event values listed successfully.",
                  "data": [
                    {
                      "timestamp": "1720567904601",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "appliances",
                      "userID": "3411",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904594",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "sports",
                      "userID": "1037",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904307",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "",
                      "userID": "5056",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904299",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "books",
                      "userID": "7326",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904288",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "books",
                      "userID": "166",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904310",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "office products",
                      "userID": "3255",
                      "metadata": {}
                    },
                    {
                      "timestamp": "1720567904299",
                      "name": "add_to_cart",
                      "source": "statsig-node",
                      "value": "sports",
                      "userID": "8598",
                      "metadata": {}
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 7,
                    "pageNumber": 1,
                    "totalItems": 100,
                    "nextPage": "/console/v1/events/add_to_cart?page=2&limit=7",
                    "previousPage": null,
                    "all": "/console/v1/events/add_to_cart"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Events",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/events/{eventName}/metrics": {
      "get": {
        "summary": "Get metrics using event name",
        "parameters": [
          {
            "name": "eventName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get metrics from events response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metrics listed successfully.",
                    "data": [
                      {
                        "id": "add_to_cart::event_count",
                        "name": "add_to_cart",
                        "directionality": "increase",
                        "type": "event_count",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "dashboard_test"
                        ],
                        "createdTime": 1678165878415,
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": null
                      },
                      {
                        "id": "add_to_cart::event_dau",
                        "name": "add_to_cart",
                        "directionality": "increase",
                        "type": "event_dau",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "asdf",
                          "dashboard_test"
                        ],
                        "createdTime": 1680128775716,
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": null
                      },
                      {
                        "id": "test funnel 1::funnel",
                        "name": "test funnel 1",
                        "directionality": "increase",
                        "type": "funnel",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1695253296002,
                        "owner": {
                          "name": "Test User"
                        },
                        "lineage": {
                          "events": [],
                          "metrics": [
                            "add_to_cart::event_count",
                            "add_to_cart_games::event_count_custom"
                          ]
                        },
                        "team": null,
                        "funnelCountDistinct": "events",
                        "funnelEventList": [
                          {
                            "name": "add_to_cart",
                            "type": "event_count"
                          },
                          {
                            "name": "add_to_cart_games",
                            "type": "event_count_custom"
                          }
                        ]
                      },
                      {
                        "id": "super_long_metric_nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_thing::funnel",
                        "name": "super_long_metric_nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_thing",
                        "directionality": "increase",
                        "type": "funnel",
                        "description": "test",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "Funnels"
                        ],
                        "creatorName": "Test User ",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1698427486777,
                        "owner": {
                          "name": "Test User"
                        },
                        "lineage": {
                          "events": [],
                          "metrics": [
                            "add_to_cart::event_dau",
                            "new_custom_metric::event_user"
                          ]
                        },
                        "team": null,
                        "funnelCountDistinct": "users",
                        "funnelEventList": [
                          {
                            "name": "add_to_cart",
                            "type": "event_dau"
                          },
                          {
                            "name": "new_custom_metric",
                            "type": "event_user"
                          }
                        ]
                      },
                      {
                        "id": "test_funnel_metric::funnel",
                        "name": "test_funnel_metric",
                        "directionality": "decrease",
                        "type": "funnel",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "Funnels"
                        ],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1701984009755,
                        "owner": {
                          "name": "Test User"
                        },
                        "lineage": {
                          "events": [],
                          "metrics": [
                            "add_to_cart::event_dau"
                          ]
                        },
                        "team": null,
                        "funnelCountDistinct": "users",
                        "funnelEventList": [
                          {
                            "name": "add_to_cart",
                            "type": "event_dau"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 5,
                      "pageNumber": 1,
                      "totalItems": 1254,
                      "nextPage": "?page=2&limit=5",
                      "previousPage": null,
                      "all": ""
                    }
                  }
                },
                "example": {
                  "message": "Metrics listed successfully.",
                  "data": [
                    {
                      "id": "add_to_cart::event_count",
                      "name": "add_to_cart",
                      "directionality": "increase",
                      "type": "event_count",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "dashboard_test"
                      ],
                      "createdTime": 1678165878415,
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": null
                    },
                    {
                      "id": "add_to_cart::event_dau",
                      "name": "add_to_cart",
                      "directionality": "increase",
                      "type": "event_dau",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "asdf",
                        "dashboard_test"
                      ],
                      "createdTime": 1680128775716,
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": null
                    },
                    {
                      "id": "test funnel 1::funnel",
                      "name": "test funnel 1",
                      "directionality": "increase",
                      "type": "funnel",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1695253296002,
                      "owner": {
                        "name": "Test User"
                      },
                      "lineage": {
                        "events": [],
                        "metrics": [
                          "add_to_cart::event_count",
                          "add_to_cart_games::event_count_custom"
                        ]
                      },
                      "team": null,
                      "funnelCountDistinct": "events",
                      "funnelEventList": [
                        {
                          "name": "add_to_cart",
                          "type": "event_count"
                        },
                        {
                          "name": "add_to_cart_games",
                          "type": "event_count_custom"
                        }
                      ]
                    },
                    {
                      "id": "super_long_metric_nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_thing::funnel",
                      "name": "super_long_metric_nameeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee_thing",
                      "directionality": "increase",
                      "type": "funnel",
                      "description": "test",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "Funnels"
                      ],
                      "creatorName": "Test User ",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1698427486777,
                      "owner": {
                        "name": "Test User"
                      },
                      "lineage": {
                        "events": [],
                        "metrics": [
                          "add_to_cart::event_dau",
                          "new_custom_metric::event_user"
                        ]
                      },
                      "team": null,
                      "funnelCountDistinct": "users",
                      "funnelEventList": [
                        {
                          "name": "add_to_cart",
                          "type": "event_dau"
                        },
                        {
                          "name": "new_custom_metric",
                          "type": "event_user"
                        }
                      ]
                    },
                    {
                      "id": "test_funnel_metric::funnel",
                      "name": "test_funnel_metric",
                      "directionality": "decrease",
                      "type": "funnel",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "Funnels"
                      ],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1701984009755,
                      "owner": {
                        "name": "Test User"
                      },
                      "lineage": {
                        "events": [],
                        "metrics": [
                          "add_to_cart::event_dau"
                        ]
                      },
                      "team": null,
                      "funnelCountDistinct": "users",
                      "funnelEventList": [
                        {
                          "name": "add_to_cart",
                          "type": "event_dau"
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 5,
                    "pageNumber": 1,
                    "totalItems": 1254,
                    "nextPage": "?page=2&limit=5",
                    "previousPage": null,
                    "all": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Events",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments": {
      "get": {
        "summary": "List Experiments",
        "parameters": [
          {
            "name": "layerID",
            "required": false,
            "in": "query",
            "description": "Which layer to place the experiment into.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idType",
            "required": false,
            "in": "query",
            "description": "The idType the experiment will be performed on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamID",
            "required": false,
            "in": "query",
            "description": "The team ID associated with the experiment, Enterprise only.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "The current status of the experiment",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "active",
                    "setup",
                    "decision_made",
                    "abandoned",
                    "archived",
                    "experiment_stopped",
                    "assignment_stopped"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "active",
                      "setup",
                      "decision_made",
                      "abandoned",
                      "archived",
                      "experiment_stopped",
                      "assignment_stopped"
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "targetAppID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdStartDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "createdEndDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Experiments Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalExperimentDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiments listed successfully.",
                    "data": [
                      {
                        "id": "a_experiment",
                        "name": "a_experiment",
                        "description": "description",
                        "idType": "userID",
                        "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                        "lastModifiedTime": 1707427635442,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                        "createdTime": 1707427634717,
                        "creatorName": "CONSOLE API",
                        "creatorEmail": null,
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "status": "setup",
                        "launchedGroupID": null,
                        "startTime": null,
                        "endTime": null,
                        "layerID": null,
                        "hypothesis": "This will be a good feature :)",
                        "primaryMetrics": [
                          {
                            "name": "d1_retention_rate",
                            "type": "user"
                          }
                        ],
                        "primaryMetricTags": [],
                        "secondaryMetrics": [],
                        "secondaryMetricTags": [],
                        "groups": [
                          {
                            "name": "Control",
                            "id": "6sEQvUd4c6E55V6ljBYMeJ",
                            "size": 50,
                            "parameterValues": {
                              "assigned_group": "control"
                            },
                            "description": ""
                          },
                          {
                            "name": "Test",
                            "id": "6sEQvVS6EoNzpkEgUJUpxL",
                            "size": 50,
                            "parameterValues": {
                              "assigned_group": "test"
                            },
                            "description": ""
                          }
                        ],
                        "allocation": 100,
                        "duration": 14,
                        "targetingGateID": "",
                        "defaultConfidenceInterval": "95",
                        "bonferroniCorrection": false,
                        "decisionReason": null,
                        "decisionTime": null,
                        "healthChecks": [],
                        "owner": {
                          "ownerType": "USER",
                          "ownerName": "Test User"
                        },
                        "inlineTargetingRulesJSON": "{}",
                        "healthCheckStatus": "PASSED"
                      },
                      {
                        "id": "b_experiment",
                        "name": "b experiment",
                        "description": "",
                        "idType": "userID",
                        "inlineTargetingRulesJSON": "{}",
                        "lastModifierID": "68ztZp2v2nFc81RAsvuvj4",
                        "lastModifiedTime": 1706744900374,
                        "lastModifierName": "jacob O'Quinn",
                        "lastModifierEmail": "jacob@statsig.com",
                        "creatorID": "68ztZp2v2nFc81RAsvuvj4",
                        "createdTime": 1678394676162,
                        "creatorName": "jacob O'Quinn",
                        "creatorEmail": "jacob@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [
                          "customTag",
                          "asdf"
                        ],
                        "status": "archived",
                        "launchedGroupID": null,
                        "startTime": null,
                        "endTime": null,
                        "layerID": null,
                        "hypothesis": "",
                        "primaryMetrics": [],
                        "primaryMetricTags": [],
                        "secondaryMetrics": [],
                        "secondaryMetricTags": [
                          "★ Core"
                        ],
                        "groups": [
                          {
                            "name": "Control",
                            "id": "7dCnwm0by2laSOcBNKIL8r",
                            "size": 50,
                            "parameterValues": {
                              "control": "control value"
                            },
                            "description": ""
                          },
                          {
                            "name": "Test",
                            "id": "7dCnwnFe0kuFcdKxoSEort",
                            "size": 50,
                            "parameterValues": {
                              "control": "test value"
                            },
                            "description": ""
                          }
                        ],
                        "allocation": 100,
                        "duration": 14,
                        "targetingGateID": "targeting_gate_to_select_users",
                        "defaultConfidenceInterval": "95",
                        "bonferroniCorrection": false,
                        "decisionReason": null,
                        "decisionTime": null,
                        "healthCheckStatus": "WAITING",
                        "healthChecks": [
                          {
                            "name": "Checks not yet detected",
                            "status": "WAITING",
                            "description": "This experiment has not recorded any exposure checks in production yet."
                          },
                          {
                            "name": "Valid unit type not yet verified",
                            "status": "WAITING",
                            "description": "Exposure checks for this experiment are pending evaluation. This experiment requires exposure checks with unit IDs of type userID"
                          },
                          {
                            "name": "Event metric data not yet verified",
                            "status": "WAITING",
                            "description": "This experiment has recorded no event metric with a valid unit ID yet, or these event metrics are pending evaluation. If you are importing events, this may take up to a day to reflect. This experiment requires metrics with unit IDs of type userID"
                          },
                          {
                            "name": "Pulse metrics not yet available",
                            "status": "WAITING",
                            "description": "Expect to see your Pulse Results within 24 hours. Statsig computes Pulse results on a daily basis."
                          },
                          {
                            "name": "Exposure balance not yet verified",
                            "status": "WAITING",
                            "description": "Exposure balance for this experiment is pending evaluation. As the experiment records more exposures, Statsig will continue to evaluate experiment exposure balance."
                          }
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Experiments listed successfully.",
                  "data": [
                    {
                      "id": "a_experiment",
                      "name": "a_experiment",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1707427635442,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1707427634717,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "status": "setup",
                      "launchedGroupID": null,
                      "startTime": null,
                      "endTime": null,
                      "layerID": null,
                      "hypothesis": "This will be a good feature :)",
                      "primaryMetrics": [
                        {
                          "name": "d1_retention_rate",
                          "type": "user"
                        }
                      ],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [],
                      "groups": [
                        {
                          "name": "Control",
                          "id": "6sEQvUd4c6E55V6ljBYMeJ",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "control"
                          },
                          "description": ""
                        },
                        {
                          "name": "Test",
                          "id": "6sEQvVS6EoNzpkEgUJUpxL",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "test"
                          },
                          "description": ""
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "decisionReason": null,
                      "decisionTime": null,
                      "healthChecks": [],
                      "owner": {
                        "ownerType": "USER",
                        "ownerName": "Test User"
                      },
                      "inlineTargetingRulesJSON": "{}",
                      "healthCheckStatus": "PASSED"
                    },
                    {
                      "id": "b_experiment",
                      "name": "b experiment",
                      "description": "",
                      "idType": "userID",
                      "inlineTargetingRulesJSON": "{}",
                      "lastModifierID": "68ztZp2v2nFc81RAsvuvj4",
                      "lastModifiedTime": 1706744900374,
                      "lastModifierName": "jacob O'Quinn",
                      "lastModifierEmail": "jacob@statsig.com",
                      "creatorID": "68ztZp2v2nFc81RAsvuvj4",
                      "createdTime": 1678394676162,
                      "creatorName": "jacob O'Quinn",
                      "creatorEmail": "jacob@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [
                        "customTag",
                        "asdf"
                      ],
                      "status": "archived",
                      "launchedGroupID": null,
                      "startTime": null,
                      "endTime": null,
                      "layerID": null,
                      "hypothesis": "",
                      "primaryMetrics": [],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [
                        "★ Core"
                      ],
                      "groups": [
                        {
                          "name": "Control",
                          "id": "7dCnwm0by2laSOcBNKIL8r",
                          "size": 50,
                          "parameterValues": {
                            "control": "control value"
                          },
                          "description": ""
                        },
                        {
                          "name": "Test",
                          "id": "7dCnwnFe0kuFcdKxoSEort",
                          "size": 50,
                          "parameterValues": {
                            "control": "test value"
                          },
                          "description": ""
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "targeting_gate_to_select_users",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "decisionReason": null,
                      "decisionTime": null,
                      "healthCheckStatus": "WAITING",
                      "healthChecks": [
                        {
                          "name": "Checks not yet detected",
                          "status": "WAITING",
                          "description": "This experiment has not recorded any exposure checks in production yet."
                        },
                        {
                          "name": "Valid unit type not yet verified",
                          "status": "WAITING",
                          "description": "Exposure checks for this experiment are pending evaluation. This experiment requires exposure checks with unit IDs of type userID"
                        },
                        {
                          "name": "Event metric data not yet verified",
                          "status": "WAITING",
                          "description": "This experiment has recorded no event metric with a valid unit ID yet, or these event metrics are pending evaluation. If you are importing events, this may take up to a day to reflect. This experiment requires metrics with unit IDs of type userID"
                        },
                        {
                          "name": "Pulse metrics not yet available",
                          "status": "WAITING",
                          "description": "Expect to see your Pulse Results within 24 hours. Statsig computes Pulse results on a daily basis."
                        },
                        {
                          "name": "Exposure balance not yet verified",
                          "status": "WAITING",
                          "description": "Exposure balance for this experiment is pending evaluation. As the experiment records more exposures, Statsig will continue to evaluate experiment exposure balance."
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Experiment",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiment created successfully.",
                    "data": {
                      "id": "a_experiment",
                      "name": "a_experiment",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1707427635442,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1707427634717,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "status": "setup",
                      "launchedGroupID": null,
                      "startTime": null,
                      "endTime": null,
                      "layerID": null,
                      "hypothesis": "This will be a good feature :)",
                      "primaryMetrics": [
                        {
                          "name": "d1_retention_rate",
                          "type": "user"
                        }
                      ],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [],
                      "groups": [
                        {
                          "name": "Control",
                          "id": "6sEQvUd4c6E55V6ljBYMeJ",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "control"
                          },
                          "description": ""
                        },
                        {
                          "name": "Test",
                          "id": "6sEQvVS6EoNzpkEgUJUpxL",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "test"
                          },
                          "description": ""
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "decisionReason": null,
                      "decisionTime": null,
                      "healthChecks": [],
                      "healthCheckStatus": "PASSED",
                      "inlineTargetingRulesJSON": "{}"
                    }
                  }
                },
                "example": {
                  "message": "Experiment created successfully.",
                  "data": {
                    "id": "a_experiment",
                    "name": "a_experiment",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1707427635442,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1707427634717,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "status": "setup",
                    "launchedGroupID": null,
                    "startTime": null,
                    "endTime": null,
                    "layerID": null,
                    "hypothesis": "This will be a good feature :)",
                    "primaryMetrics": [
                      {
                        "name": "d1_retention_rate",
                        "type": "user"
                      }
                    ],
                    "primaryMetricTags": [],
                    "secondaryMetrics": [],
                    "secondaryMetricTags": [],
                    "groups": [
                      {
                        "name": "Control",
                        "id": "6sEQvUd4c6E55V6ljBYMeJ",
                        "size": 50,
                        "parameterValues": {
                          "assigned_group": "control"
                        },
                        "description": ""
                      },
                      {
                        "name": "Test",
                        "id": "6sEQvVS6EoNzpkEgUJUpxL",
                        "size": 50,
                        "parameterValues": {
                          "assigned_group": "test"
                        },
                        "description": ""
                      }
                    ],
                    "allocation": 100,
                    "duration": 14,
                    "targetingGateID": "",
                    "defaultConfidenceInterval": "95",
                    "bonferroniCorrection": false,
                    "decisionReason": null,
                    "decisionTime": null,
                    "healthChecks": [],
                    "healthCheckStatus": "PASSED",
                    "inlineTargetingRulesJSON": "{}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}": {
      "get": {
        "summary": "Get Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiments listed successfully.",
                    "data": {
                      "id": "a_experiment",
                      "description": "",
                      "lastModifiedTime": 1707427635442,
                      "lastModifierEmail": null,
                      "createdTime": 1707427634717,
                      "creatorName": "CONSOLE API",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "4FKF0sUbi1D7xZFW5vcHWB",
                      "idType": "userID",
                      "status": "setup",
                      "launchedGroupID": null,
                      "layerID": "statsig::a_experiment_layer",
                      "hypothesis": "",
                      "primaryMetrics": [],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [],
                      "startTime": null,
                      "endTime": null,
                      "decisionTime": null,
                      "groups": [
                        {
                          "name": "Control",
                          "id": "4HbgLdfqlIeN3sHkyMG1qC",
                          "size": 50,
                          "parameterValues": {}
                        },
                        {
                          "name": "Test",
                          "size": 50,
                          "parameterValues": {}
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "tags": [
                        "* Core"
                      ],
                      "decisionReason": "",
                      "owner": {
                        "ownerType": "USER",
                        "ownerName": "Test User"
                      },
                      "healthCheckStatus": "PASSED",
                      "inlineTargetingRulesJSON": "{}"
                    }
                  }
                },
                "example": {
                  "message": "Experiments listed successfully.",
                  "data": {
                    "id": "a_experiment",
                    "description": "",
                    "lastModifiedTime": 1707427635442,
                    "lastModifierEmail": null,
                    "createdTime": 1707427634717,
                    "creatorName": "CONSOLE API",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "4FKF0sUbi1D7xZFW5vcHWB",
                    "idType": "userID",
                    "status": "setup",
                    "launchedGroupID": null,
                    "layerID": "statsig::a_experiment_layer",
                    "hypothesis": "",
                    "primaryMetrics": [],
                    "primaryMetricTags": [],
                    "secondaryMetrics": [],
                    "secondaryMetricTags": [],
                    "startTime": null,
                    "endTime": null,
                    "decisionTime": null,
                    "groups": [
                      {
                        "name": "Control",
                        "id": "4HbgLdfqlIeN3sHkyMG1qC",
                        "size": 50,
                        "parameterValues": {}
                      },
                      {
                        "name": "Test",
                        "size": 50,
                        "parameterValues": {}
                      }
                    ],
                    "allocation": 100,
                    "duration": 14,
                    "targetingGateID": "",
                    "defaultConfidenceInterval": "95",
                    "bonferroniCorrection": false,
                    "tags": [
                      "* Core"
                    ],
                    "decisionReason": "",
                    "owner": {
                      "ownerType": "USER",
                      "ownerName": "Test User"
                    },
                    "healthCheckStatus": "PASSED",
                    "inlineTargetingRulesJSON": "{}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Fully Update Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentFullUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Fully Update Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "string",
                    "data": {
                      "id": "a_experiment",
                      "description": "a helpful summary of what this experiment does",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "f0JAV9dd7KF0sUbi1DHWB",
                      "idType": "userID",
                      "status": "setup",
                      "layerID": "layer1",
                      "hypothesis": "Does 1 or 0 work better?",
                      "primaryMetrics": [
                        {
                          "name": "l14",
                          "type": "user"
                        }
                      ],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [
                        {
                          "name": "mau_28d",
                          "type": "user"
                        }
                      ],
                      "secondaryMetricTags": [],
                      "groups": [
                        {
                          "name": "group1",
                          "size": 50,
                          "parameterValues": {
                            "key": 1
                          }
                        },
                        {
                          "name": "gruop2",
                          "size": 50,
                          "parameterValues": {
                            "key": 0
                          }
                        }
                      ],
                      "allocation": 50.46,
                      "duration": 14,
                      "targetingGateID": "a_gate",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "tags": []
                    }
                  }
                },
                "example": {
                  "message": "string",
                  "data": {
                    "id": "a_experiment",
                    "description": "a helpful summary of what this experiment does",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "f0JAV9dd7KF0sUbi1DHWB",
                    "idType": "userID",
                    "status": "setup",
                    "layerID": "layer1",
                    "hypothesis": "Does 1 or 0 work better?",
                    "primaryMetrics": [
                      {
                        "name": "l14",
                        "type": "user"
                      }
                    ],
                    "primaryMetricTags": [],
                    "secondaryMetrics": [
                      {
                        "name": "mau_28d",
                        "type": "user"
                      }
                    ],
                    "secondaryMetricTags": [],
                    "groups": [
                      {
                        "name": "group1",
                        "size": 50,
                        "parameterValues": {
                          "key": 1
                        }
                      },
                      {
                        "name": "gruop2",
                        "size": 50,
                        "parameterValues": {
                          "key": 0
                        }
                      }
                    ],
                    "allocation": 50.46,
                    "duration": 14,
                    "targetingGateID": "a_gate",
                    "defaultConfidenceInterval": "95",
                    "bonferroniCorrection": false,
                    "tags": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially Update Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentPartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partially Update Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "string",
                    "data": {
                      "id": "a_experiment",
                      "description": "a helpful summary of what this experiment does",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "f0JAV9dd7KF0sUbi1DHWB",
                      "idType": "userID",
                      "status": "setup",
                      "layerID": "layer1",
                      "hypothesis": "Does 1 or 0 work better?",
                      "primaryMetrics": [
                        {
                          "name": "l14",
                          "type": "user"
                        }
                      ],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [
                        {
                          "name": "mau_28d",
                          "type": "user"
                        }
                      ],
                      "secondaryMetricTags": [],
                      "groups": [
                        {
                          "name": "group1",
                          "size": 50,
                          "parameterValues": {
                            "key": 1
                          }
                        },
                        {
                          "name": "gruop2",
                          "size": 50,
                          "parameterValues": {
                            "key": 0
                          }
                        }
                      ],
                      "allocation": 50.46,
                      "duration": 14,
                      "targetingGateID": "a_gate",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "tags": []
                    }
                  }
                },
                "example": {
                  "message": "string",
                  "data": {
                    "id": "a_experiment",
                    "description": "a helpful summary of what this experiment does",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "f0JAV9dd7KF0sUbi1DHWB",
                    "idType": "userID",
                    "status": "setup",
                    "layerID": "layer1",
                    "hypothesis": "Does 1 or 0 work better?",
                    "primaryMetrics": [
                      {
                        "name": "l14",
                        "type": "user"
                      }
                    ],
                    "primaryMetricTags": [],
                    "secondaryMetrics": [
                      {
                        "name": "mau_28d",
                        "type": "user"
                      }
                    ],
                    "secondaryMetricTags": [],
                    "groups": [
                      {
                        "name": "group1",
                        "size": 50,
                        "parameterValues": {
                          "key": 1
                        }
                      },
                      {
                        "name": "gruop2",
                        "size": 50,
                        "parameterValues": {
                          "key": 0
                        }
                      }
                    ],
                    "allocation": 50.46,
                    "duration": 14,
                    "targetingGateID": "a_gate",
                    "defaultConfidenceInterval": "95",
                    "bonferroniCorrection": false,
                    "tags": []
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Deleted Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiment deleted successfully."
                  }
                },
                "example": {
                  "message": "Experiment deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/abandon": {
      "put": {
        "summary": "Abandon Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentAbandonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Abandon Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment successfully abandoned."
                  }
                },
                "example": {
                  "message": "Experiment successfully abandoned."
                }
              }
            }
          },
          "400": {
            "description": "Experiment has not yet started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/alerts/{metricId}/resolve": {
      "post": {
        "summary": "Resolve Metric Rollout Alert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricId",
            "required": true,
            "in": "path",
            "description": "metric id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveGuardrailAlertRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Metric rollout alert resolved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ResolveGuardrailAlertResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/archive": {
      "put": {
        "summary": "Archive Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentArchiveDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment successfully archived."
                  }
                },
                "example": {
                  "message": "Experiment successfully archived."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/cumulative_exposures": {
      "get": {
        "summary": "Retrieve cumulative exposures",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get cumulative exposures success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CumulativeExposureResponseDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Successfully loaded Cumulative Exposures",
                    "data": [
                      {
                        "groupID": "6pY4WNHgJu1sqAyApUZuaa",
                        "groupName": "Daily Deals",
                        "results": [
                          {
                            "date": "2024-12-23",
                            "exposures": 0
                          },
                          {
                            "date": "2024-12-24",
                            "exposures": 7407
                          },
                          {
                            "date": "2024-12-25",
                            "exposures": 10237
                          },
                          {
                            "date": "2024-12-26",
                            "exposures": 10725
                          },
                          {
                            "date": "2024-12-27",
                            "exposures": 10906
                          },
                          {
                            "date": "2024-12-28",
                            "exposures": 11061
                          },
                          {
                            "date": "2024-12-29",
                            "exposures": 11251
                          },
                          {
                            "date": "2024-12-30",
                            "exposures": 11412
                          }
                        ]
                      },
                      {
                        "groupID": "6pY4WPmjbMaWK06w12V7tc",
                        "groupName": "Items You May Like",
                        "results": [
                          {
                            "date": "2024-12-23",
                            "exposures": 0
                          },
                          {
                            "date": "2024-12-24",
                            "exposures": 7392
                          },
                          {
                            "date": "2024-12-25",
                            "exposures": 10239
                          },
                          {
                            "date": "2024-12-26",
                            "exposures": 10732
                          },
                          {
                            "date": "2024-12-27",
                            "exposures": 10934
                          },
                          {
                            "date": "2024-12-28",
                            "exposures": 11108
                          },
                          {
                            "date": "2024-12-29",
                            "exposures": 11287
                          },
                          {
                            "date": "2024-12-30",
                            "exposures": 11455
                          }
                        ]
                      },
                      {
                        "groupID": "6pY4WR1lE4kr3pErCaQKMe",
                        "groupName": "Buy Again",
                        "results": [
                          {
                            "date": "2024-12-23",
                            "exposures": 0
                          },
                          {
                            "date": "2024-12-24",
                            "exposures": 7475
                          },
                          {
                            "date": "2024-12-25",
                            "exposures": 10289
                          },
                          {
                            "date": "2024-12-26",
                            "exposures": 10774
                          },
                          {
                            "date": "2024-12-27",
                            "exposures": 10975
                          },
                          {
                            "date": "2024-12-28",
                            "exposures": 11168
                          },
                          {
                            "date": "2024-12-29",
                            "exposures": 11321
                          },
                          {
                            "date": "2024-12-30",
                            "exposures": 11483
                          }
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Successfully loaded Cumulative Exposures",
                  "data": [
                    {
                      "groupID": "6pY4WNHgJu1sqAyApUZuaa",
                      "groupName": "Daily Deals",
                      "results": [
                        {
                          "date": "2024-12-23",
                          "exposures": 0
                        },
                        {
                          "date": "2024-12-24",
                          "exposures": 7407
                        },
                        {
                          "date": "2024-12-25",
                          "exposures": 10237
                        },
                        {
                          "date": "2024-12-26",
                          "exposures": 10725
                        },
                        {
                          "date": "2024-12-27",
                          "exposures": 10906
                        },
                        {
                          "date": "2024-12-28",
                          "exposures": 11061
                        },
                        {
                          "date": "2024-12-29",
                          "exposures": 11251
                        },
                        {
                          "date": "2024-12-30",
                          "exposures": 11412
                        }
                      ]
                    },
                    {
                      "groupID": "6pY4WPmjbMaWK06w12V7tc",
                      "groupName": "Items You May Like",
                      "results": [
                        {
                          "date": "2024-12-23",
                          "exposures": 0
                        },
                        {
                          "date": "2024-12-24",
                          "exposures": 7392
                        },
                        {
                          "date": "2024-12-25",
                          "exposures": 10239
                        },
                        {
                          "date": "2024-12-26",
                          "exposures": 10732
                        },
                        {
                          "date": "2024-12-27",
                          "exposures": 10934
                        },
                        {
                          "date": "2024-12-28",
                          "exposures": 11108
                        },
                        {
                          "date": "2024-12-29",
                          "exposures": 11287
                        },
                        {
                          "date": "2024-12-30",
                          "exposures": 11455
                        }
                      ]
                    },
                    {
                      "groupID": "6pY4WR1lE4kr3pErCaQKMe",
                      "groupName": "Buy Again",
                      "results": [
                        {
                          "date": "2024-12-23",
                          "exposures": 0
                        },
                        {
                          "date": "2024-12-24",
                          "exposures": 7475
                        },
                        {
                          "date": "2024-12-25",
                          "exposures": 10289
                        },
                        {
                          "date": "2024-12-26",
                          "exposures": 10774
                        },
                        {
                          "date": "2024-12-27",
                          "exposures": 10975
                        },
                        {
                          "date": "2024-12-28",
                          "exposures": 11168
                        },
                        {
                          "date": "2024-12-29",
                          "exposures": 11321
                        },
                        {
                          "date": "2024-12-30",
                          "exposures": 11483
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/disable_groups": {
      "post": {
        "summary": "Disable Experiment Groups",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableDisableGroupsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Disable experiment groups",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/enable_groups": {
      "post": {
        "summary": "Enable Experiment Groups",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnableDisableGroupsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enable experiment groups",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/load_pulse": {
      "post": {
        "summary": "Load Pulse (Warehouse Native)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refresh",
            "required": false,
            "in": "query",
            "schema": {
              "default": "full",
              "type": "string",
              "enum": [
                "full",
                "incremental",
                "metric"
              ]
            }
          },
          {
            "name": "metricIDs",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ruleId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "turboMode",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchidnaLoadPulseQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Load Pulse Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment is loading."
                  }
                },
                "example": {
                  "message": "Experiment is loading."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/make_decision": {
      "put": {
        "summary": "Finish Experiment Early",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentStatusUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Make Experiment Decision Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Decision made for Experiment."
                  }
                },
                "example": {
                  "message": "Decision made for Experiment."
                }
              }
            }
          },
          "400": {
            "description": "Experiment has not yet started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/overrides": {
      "get": {
        "summary": "Get Experiment Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Experiment Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExperimentOverridesDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiment Overrides read successfully.",
                    "data": {
                      "overrides": [
                        {
                          "groupID": "Control",
                          "name": "a_gate",
                          "type": "gate"
                        },
                        {
                          "groupID": "test",
                          "name": "a_segment",
                          "type": "segment"
                        }
                      ],
                      "userIDOverrides": [
                        {
                          "ids": [
                            "updated_id_list"
                          ],
                          "groupID": "Control"
                        },
                        {
                          "ids": [
                            "updated_id_lists"
                          ],
                          "groupID": "Test"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Experiment Overrides read successfully.",
                  "data": {
                    "overrides": [
                      {
                        "groupID": "Control",
                        "name": "a_gate",
                        "type": "gate"
                      },
                      {
                        "groupID": "test",
                        "name": "a_segment",
                        "type": "segment"
                      }
                    ],
                    "userIDOverrides": [
                      {
                        "ids": [
                          "updated_id_list"
                        ],
                        "groupID": "Control"
                      },
                      {
                        "ids": [
                          "updated_id_lists"
                        ],
                        "groupID": "Test"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Experiment Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentOverridesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Experiment Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExperimentOverridesDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "overrides": [
                      {
                        "type": "segment",
                        "id": "a_segment",
                        "groupID": "Control"
                      },
                      {
                        "type": "gate",
                        "id": "a_gate",
                        "groupID": "Test"
                      }
                    ],
                    "userIDOverrides": [
                      {
                        "groupID": "Control",
                        "ids": [
                          "updated_control_id_list"
                        ]
                      },
                      {
                        "groupID": "Test",
                        "ids": [
                          "updated_test_id_list"
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "overrides": [
                    {
                      "type": "segment",
                      "id": "a_segment",
                      "groupID": "Control"
                    },
                    {
                      "type": "gate",
                      "id": "a_gate",
                      "groupID": "Test"
                    }
                  ],
                  "userIDOverrides": [
                    {
                      "groupID": "Control",
                      "ids": [
                        "updated_control_id_list"
                      ]
                    },
                    {
                      "groupID": "Test",
                      "ids": [
                        "updated_test_id_list"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially Update Experiment Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentOverridesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partially Update Experiment Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExperimentOverridesDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "overrides": [
                      {
                        "type": "gate",
                        "id": "a_gate",
                        "groupID": "Test"
                      }
                    ],
                    "userIDOverrides": [
                      {
                        "groupID": "Control",
                        "ids": [
                          "newly_added_id"
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "overrides": [
                    {
                      "type": "gate",
                      "id": "a_gate",
                      "groupID": "Test"
                    }
                  ],
                  "userIDOverrides": [
                    {
                      "groupID": "Control",
                      "ids": [
                        "newly_added_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Experiment Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Update Experiment Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExperimentOverridesDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "overrides": [
                      {
                        "type": "gate",
                        "id": "a_gate",
                        "groupID": "Test"
                      }
                    ],
                    "userIDOverrides": [
                      {
                        "groupID": "Control",
                        "ids": [
                          "remove_just_this_id"
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "overrides": [
                    {
                      "type": "gate",
                      "id": "a_gate",
                      "groupID": "Test"
                    }
                  ],
                  "userIDOverrides": [
                    {
                      "groupID": "Control",
                      "ids": [
                        "remove_just_this_id"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/pulse_load_history": {
      "get": {
        "summary": "Pulse Load History (Warehouse Native)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Pulse Load History",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PulseLoadHistoryDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/pulse_results": {
      "get": {
        "summary": "Retrieve Pulse Results (Beta)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "control",
            "required": true,
            "in": "query",
            "description": "Control Group ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test",
            "required": true,
            "in": "query",
            "description": "Test Group ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cuped",
            "required": false,
            "in": "query",
            "description": "Whether to apply CUPED. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidence",
            "required": false,
            "in": "query",
            "description": "Confidence interval (0-100)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyBonferroniPerVariant",
            "required": false,
            "in": "query",
            "description": "Whether to apply Bonferroni Per Variant. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyBonferroniPerMetric",
            "required": false,
            "in": "query",
            "description": "Whether to apply Bonferroni Per Metric. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bonferroniPrimaryMetricWeight",
            "required": false,
            "in": "query",
            "description": "α allocated to primary metrics",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyBenjaminiHochbergPerMetric",
            "required": false,
            "in": "query",
            "description": "Whether to apply Benjamini-Hochberg Correction Per Metric. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyBenjaminiHochbergPerVariant",
            "required": false,
            "in": "query",
            "description": "Whether to apply Benjamini-Hochberg Correction Per Variant. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": false,
            "in": "query",
            "description": "Date for pulse results. format must be YYYY-MM-DD",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Pulse Results Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExperimentPulseResultsDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Successfully loaded Pulse Results",
                    "data": {
                      "primaryMetrics": [
                        {
                          "metricID": "Purchase::user_warehouse",
                          "value": -0.5656598720428505,
                          "confidence_interval_delta": 1.3331521511820725,
                          "percent_change": -0.9104559464139017,
                          "percent_confidence_interval_delta": 2.145770565507353,
                          "percent_sequential_testing_confidence_interval_delta": -1.6095466399726037,
                          "test_mean": 61.56363636363636,
                          "control_mean": 62.12929623567921,
                          "test_std": 0.7461734327711735,
                          "control_std": 0.7248273669644147,
                          "test_units": 1669,
                          "control_units": 1589,
                          "p_value": 0.7066986120589813
                        }
                      ],
                      "secondaryMetrics": [
                        {
                          "metricID": "Support Success Rate::user_warehouse",
                          "value": 0.0032568848232868985,
                          "confidence_interval_delta": 0.009120368109978388,
                          "percent_change": 0.4569873400680713,
                          "percent_confidence_interval_delta": 1.2797175795779019,
                          "percent_sequential_testing_confidence_interval_delta": -140.31424654645156,
                          "test_mean": 0.7159428911362284,
                          "control_mean": 0.7126860063129415,
                          "test_std": 0.0038882253564431193,
                          "control_std": 0.003953024266669566,
                          "test_units": 4696,
                          "control_units": 4690,
                          "p_value": 0.5569502167465609
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Successfully loaded Pulse Results",
                  "data": {
                    "primaryMetrics": [
                      {
                        "metricID": "Purchase::user_warehouse",
                        "value": -0.5656598720428505,
                        "confidence_interval_delta": 1.3331521511820725,
                        "percent_change": -0.9104559464139017,
                        "percent_confidence_interval_delta": 2.145770565507353,
                        "percent_sequential_testing_confidence_interval_delta": -1.6095466399726037,
                        "test_mean": 61.56363636363636,
                        "control_mean": 62.12929623567921,
                        "test_std": 0.7461734327711735,
                        "control_std": 0.7248273669644147,
                        "test_units": 1669,
                        "control_units": 1589,
                        "p_value": 0.7066986120589813
                      }
                    ],
                    "secondaryMetrics": [
                      {
                        "metricID": "Support Success Rate::user_warehouse",
                        "value": 0.0032568848232868985,
                        "confidence_interval_delta": 0.009120368109978388,
                        "percent_change": 0.4569873400680713,
                        "percent_confidence_interval_delta": 1.2797175795779019,
                        "percent_sequential_testing_confidence_interval_delta": -140.31424654645156,
                        "test_mean": 0.7159428911362284,
                        "control_mean": 0.7126860063129415,
                        "test_std": 0.0038882253564431193,
                        "control_std": 0.003953024266669566,
                        "test_units": 4696,
                        "control_units": 4690,
                        "p_value": 0.5569502167465609
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/reset": {
      "put": {
        "summary": "Reset Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment successfully restarted."
                  }
                },
                "example": {
                  "message": "Experiment successfully restarted."
                }
              }
            }
          },
          "400": {
            "description": "Experiment has not yet started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/restart_as_new": {
      "post": {
        "summary": "Restart As New Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentNameContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Restart As New Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalExperimentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Restart As New Experiment Success",
                    "data": {
                      "id": "a_experiment",
                      "description": "",
                      "lastModifiedTime": 1707427635442,
                      "lastModifierEmail": null,
                      "createdTime": 1707427634717,
                      "creatorName": "CONSOLE API",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "4FKF0sUbi1D7xZFW5vcHWB",
                      "idType": "userID",
                      "status": "setup",
                      "launchedGroupID": null,
                      "layerID": "statsig::a_experiment_layer",
                      "hypothesis": "",
                      "primaryMetrics": [],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [],
                      "startTime": null,
                      "endTime": null,
                      "decisionTime": null,
                      "groups": [
                        {
                          "name": "Control",
                          "id": "4HbgLdfqlIeN3sHkyMG1qC",
                          "size": 50,
                          "parameterValues": {}
                        },
                        {
                          "name": "Test",
                          "size": 50,
                          "parameterValues": {}
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "tags": [
                        "* Core"
                      ],
                      "decisionReason": "",
                      "owner": {
                        "ownerType": "USER",
                        "ownerName": "Test User"
                      },
                      "healthCheckStatus": "PASSED",
                      "inlineTargetingRulesJSON": "{}"
                    }
                  }
                },
                "example": {
                  "message": "Restart As New Experiment Success",
                  "data": {
                    "id": "a_experiment",
                    "description": "",
                    "lastModifiedTime": 1707427635442,
                    "lastModifierEmail": null,
                    "createdTime": 1707427634717,
                    "creatorName": "CONSOLE API",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "4FKF0sUbi1D7xZFW5vcHWB",
                    "idType": "userID",
                    "status": "setup",
                    "launchedGroupID": null,
                    "layerID": "statsig::a_experiment_layer",
                    "hypothesis": "",
                    "primaryMetrics": [],
                    "primaryMetricTags": [],
                    "secondaryMetrics": [],
                    "secondaryMetricTags": [],
                    "startTime": null,
                    "endTime": null,
                    "decisionTime": null,
                    "groups": [
                      {
                        "name": "Control",
                        "id": "4HbgLdfqlIeN3sHkyMG1qC",
                        "size": 50,
                        "parameterValues": {}
                      },
                      {
                        "name": "Test",
                        "size": 50,
                        "parameterValues": {}
                      }
                    ],
                    "allocation": 100,
                    "duration": 14,
                    "targetingGateID": "",
                    "defaultConfidenceInterval": "95",
                    "bonferroniCorrection": false,
                    "tags": [
                      "* Core"
                    ],
                    "decisionReason": "",
                    "owner": {
                      "ownerType": "USER",
                      "ownerName": "Test User"
                    },
                    "healthCheckStatus": "PASSED",
                    "inlineTargetingRulesJSON": "{}"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Experiment has not yet started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/schedule_start": {
      "post": {
        "summary": "Schedule Experiment Start",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleExperimentStartParamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schedule Experiment Start Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Successfully scheduled experiment start"
                  }
                },
                "example": {
                  "message": "Successfully scheduled experiment start"
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/start": {
      "put": {
        "summary": "Start Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentStartDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Start Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment successfully started."
                  }
                },
                "example": {
                  "message": "Experiment successfully started."
                }
              }
            }
          },
          "400": {
            "description": "Experiment has not yet started",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/{id}/unarchive": {
      "put": {
        "summary": "Unarchive Experiment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unarchive Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Experiment successfully unarchived."
                  }
                },
                "example": {
                  "message": "Experiment successfully unarchived."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Experiment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/assignment_source/{name}": {
      "post": {
        "summary": "Post Assignment Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Name of the assignment source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentSourceQueryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post Assignment Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AssignmentSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Assignment Source updated successfully",
                    "data": {
                      "name": "exposures3",
                      "description": "qweqwe",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                      "timestampColumn": "ts",
                      "groupIDColumn": "group_id",
                      "experimentIDColumn": "experiment_name",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Assignment Source updated successfully",
                  "data": {
                    "name": "exposures3",
                    "description": "qweqwe",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                    "timestampColumn": "ts",
                    "groupIDColumn": "group_id",
                    "experimentIDColumn": "experiment_name",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Patch Assignment Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Name of the assignment source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentSourcePartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch Assignment Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AssignmentSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Assignment Source updated successfully",
                    "data": {
                      "name": "exposures3",
                      "description": "qweqwe",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                      "timestampColumn": "ts",
                      "groupIDColumn": "group_id",
                      "experimentIDColumn": "experiment_name",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Assignment Source updated successfully",
                  "data": {
                    "name": "exposures3",
                    "description": "qweqwe",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                    "timestampColumn": "ts",
                    "groupIDColumn": "group_id",
                    "experimentIDColumn": "experiment_name",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Assignment Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Name of the assignment source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Assignment Source response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Assignment source deleted successfully."
                  }
                },
                "example": {
                  "message": "Assignment source deleted successfully."
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/assignment_sources": {
      "get": {
        "summary": "List Assignment Sources",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Assignment Sources response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/AssignmentSourceContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Sources listed successfully.",
                    "data": [
                      {
                        "name": "Exposures",
                        "description": "",
                        "tags": [],
                        "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                        "timestampColumn": "ts",
                        "groupIDColumn": "group_id",
                        "experimentIDColumn": "experiment_name",
                        "idTypeMapping": [
                          {
                            "statsigUnitID": "userID",
                            "column": "user_id"
                          },
                          {
                            "statsigUnitID": "deviceID",
                            "column": "device_id"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 1,
                      "pageNumber": 1,
                      "totalItems": 13,
                      "nextPage": "/console/v1/experiments/assignment_sources?page=2&limit=1",
                      "previousPage": null,
                      "all": "/console/v1/experiments/assignment_sources"
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Sources listed successfully.",
                  "data": [
                    {
                      "name": "Exposures",
                      "description": "",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                      "timestampColumn": "ts",
                      "groupIDColumn": "group_id",
                      "experimentIDColumn": "experiment_name",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        },
                        {
                          "statsigUnitID": "deviceID",
                          "column": "device_id"
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 1,
                    "pageNumber": 1,
                    "totalItems": 13,
                    "nextPage": "/console/v1/experiments/assignment_sources?page=2&limit=1",
                    "previousPage": null,
                    "all": "/console/v1/experiments/assignment_sources"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Assignment Source",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignmentSourceCreationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Assignment Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AssignmentSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Assignment Source created successfully",
                    "data": {
                      "name": "exposures4",
                      "description": "",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                      "timestampColumn": "ts",
                      "groupIDColumn": "group_id",
                      "experimentIDColumn": "experiment_name",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Assignment Source created successfully",
                  "data": {
                    "name": "exposures4",
                    "description": "",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.experiment_data.exposures",
                    "timestampColumn": "ts",
                    "groupIDColumn": "group_id",
                    "experimentIDColumn": "experiment_name",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/entity_properties": {
      "get": {
        "summary": "List Entity Property Sources",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Entity Property Sources response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/EntityPropertySourceDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Sourcess listed successfully.",
                    "data": [
                      {
                        "name": "Segmentation Models",
                        "description": "",
                        "tags": [
                          "★ Core",
                          "Growth"
                        ],
                        "sql": "SELECT\n  user_id, ds, spend_segment\nFROM shoppy-sales.setup.segments",
                        "timestampColumn": "ds",
                        "timestampAsDay": true,
                        "idTypeMapping": [
                          {
                            "statsigUnitID": "userID",
                            "column": "user_id"
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 1,
                      "pageNumber": 1,
                      "totalItems": 5,
                      "nextPage": "/console/v1/experiments/entity_properties?page=2&limit=1",
                      "previousPage": null,
                      "all": "/console/v1/experiments/entity_properties"
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Sourcess listed successfully.",
                  "data": [
                    {
                      "name": "Segmentation Models",
                      "description": "",
                      "tags": [
                        "★ Core",
                        "Growth"
                      ],
                      "sql": "SELECT\n  user_id, ds, spend_segment\nFROM shoppy-sales.setup.segments",
                      "timestampColumn": "ds",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 1,
                    "pageNumber": 1,
                    "totalItems": 5,
                    "nextPage": "/console/v1/experiments/entity_properties?page=2&limit=1",
                    "previousPage": null,
                    "all": "/console/v1/experiments/entity_properties"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Entity Property Source",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertySourceCreationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Entity Property Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EntityPropertySourceDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Source created successfully",
                    "data": {
                      "name": "Location",
                      "description": "",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                      "timestampColumn": "timestamp",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ],
                      "timestampAsDay": true
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Source created successfully",
                  "data": {
                    "name": "Location",
                    "description": "",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                    "timestampColumn": "timestamp",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ],
                    "timestampAsDay": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/entity_property/{name}": {
      "get": {
        "summary": "Get Entity Property Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Name of entity property source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Entity Property Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EntityPropertySourceDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Source read successfully.",
                    "data": {
                      "name": "Location",
                      "description": "This is the the location description",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                      "timestampColumn": "timestamp",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ],
                      "timestampAsDay": true
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Source read successfully.",
                  "data": {
                    "name": "Location",
                    "description": "This is the the location description",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                    "timestampColumn": "timestamp",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ],
                    "timestampAsDay": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Post Entity Property Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertySourceQueryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post Entity Property Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EntityPropertySourceDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Sources updated successfully.",
                    "data": {
                      "name": "Location",
                      "description": "This is the the location description",
                      "tags": [],
                      "sql": "SELECT * FROM  shoppy-sales.setup.user_properties",
                      "timestampColumn": "",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ],
                      "timestampAsDay": true
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Sources updated successfully.",
                  "data": {
                    "name": "Location",
                    "description": "This is the the location description",
                    "tags": [],
                    "sql": "SELECT * FROM  shoppy-sales.setup.user_properties",
                    "timestampColumn": "",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ],
                    "timestampAsDay": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Patch Entity Property Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "Name of entity property source",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityPropertySourcePartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch Entity Property Source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EntityPropertySourceDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Entity Property Source updated successfully",
                    "data": {
                      "name": "Location",
                      "description": "This is the the location description",
                      "tags": [],
                      "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                      "timestampColumn": "timestamp",
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "stableID",
                          "column": "user_id"
                        }
                      ],
                      "timestampAsDay": true
                    }
                  }
                },
                "example": {
                  "message": "Entity Property Source updated successfully",
                  "data": {
                    "name": "Location",
                    "description": "This is the the location description",
                    "tags": [],
                    "sql": "SELECT * FROM shoppy-sales.setup.user_properties",
                    "timestampColumn": "timestamp",
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "stableID",
                        "column": "user_id"
                      }
                    ],
                    "timestampAsDay": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Entity Property Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Entity Property Source response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Entity property source deleted successfully."
                  }
                },
                "example": {
                  "message": "Entity property source deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/qualifying_events": {
      "get": {
        "summary": "List qualifying event",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MetricSourceContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Qualifying events listed successfully.",
                    "data": [
                      {
                        "name": "Log Events",
                        "description": "all app events including add to cart, purchase, page view, checkout",
                        "tags": [],
                        "sql": "SELECT *\nFROM shoppy-sales.logging.events\nwhere DATE(ts) between {statsig_start_date} and {statsig_end_date}\n",
                        "timestampColumn": "ts",
                        "timestampAsDay": false,
                        "idTypeMapping": [
                          {
                            "statsigUnitID": "userID",
                            "column": "user_id"
                          },
                          {
                            "statsigUnitID": "deviceID",
                            "column": "device_id"
                          }
                        ],
                        "tableName": "",
                        "customFieldMapping": [
                          {
                            "key": "",
                            "formula": ""
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 1,
                      "pageNumber": 1,
                      "totalItems": 14,
                      "nextPage": "/console/v1/metrics/qualifying_event/list?page=2&limit=1",
                      "previousPage": null,
                      "all": "/console/v1/metrics/qualifying_event/list"
                    }
                  }
                },
                "example": {
                  "message": "Qualifying events listed successfully.",
                  "data": [
                    {
                      "name": "Log Events",
                      "description": "all app events including add to cart, purchase, page view, checkout",
                      "tags": [],
                      "sql": "SELECT *\nFROM shoppy-sales.logging.events\nwhere DATE(ts) between {statsig_start_date} and {statsig_end_date}\n",
                      "timestampColumn": "ts",
                      "timestampAsDay": false,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        },
                        {
                          "statsigUnitID": "deviceID",
                          "column": "device_id"
                        }
                      ],
                      "tableName": "",
                      "customFieldMapping": [
                        {
                          "key": "",
                          "formula": ""
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 1,
                    "pageNumber": 1,
                    "totalItems": 14,
                    "nextPage": "/console/v1/metrics/qualifying_event/list?page=2&limit=1",
                    "previousPage": null,
                    "all": "/console/v1/metrics/qualifying_event/list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments (Warehouse Native)",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Qualifying Event",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricSourceCreationContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create qualifying event response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Qualifying event created successfully.",
                    "data": {
                      "name": "test_qualifying_event",
                      "description": "Test description for qualifying event",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Qualifying event created successfully.",
                  "data": {
                    "name": "test_qualifying_event",
                    "description": "Test description for qualifying event",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments (Warehouse Native)",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/experiments/qualifying_events/{name}": {
      "get": {
        "summary": "Read Qualifying Event",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Qualifying Event response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Qualifying event read successfully.",
                    "data": {
                      "name": "test_qualifying_event",
                      "description": "Test description for qualifying event",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Qualifying event read successfully.",
                  "data": {
                    "name": "test_qualifying_event",
                    "description": "Test description for qualifying event",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments (Warehouse Native)",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Qualifying Event",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricSourceUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Qualifying Event response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Qualifying event updated successfully.",
                    "data": {
                      "name": "test_qualifying_event",
                      "description": "Test description for qualifying event",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Qualifying event updated successfully.",
                  "data": {
                    "name": "test_qualifying_event",
                    "description": "Test description for qualifying event",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments (Warehouse Native)",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Qualifying Event",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Qualifying Event response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Qualifying event deleted successfully."
                  }
                },
                "example": {
                  "message": "Qualifying event deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Experiments (Warehouse Native)",
          "Experiments (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/exposure_count": {
      "get": {
        "summary": "Read Exposure Event Count",
        "description": "Get the count of exposure events recently received by Statsig.",
        "parameters": [
          {
            "name": "experiments",
            "required": false,
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 25
                }
              ]
            }
          },
          {
            "name": "gates",
            "required": false,
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 25
                }
              ]
            }
          },
          {
            "name": "dynamicConfigs",
            "required": false,
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 25
                }
              ]
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Experiment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExposureCountDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Exposure count fetched successfully.",
                    "data": {
                      "gates": [
                        {
                          "id": "a_gate",
                          "pastDay": 0,
                          "past7Days": 98
                        }
                      ],
                      "experiments": [
                        {
                          "id": "my_experiment",
                          "pastDay": 102,
                          "past7Days": 558
                        },
                        {
                          "id": "another_experiment",
                          "pastDay": 5904,
                          "past7Days": 2078
                        }
                      ],
                      "dynamicConfigs": [
                        {
                          "id": "dc_limit",
                          "pastDay": 240830,
                          "past7Days": 1329945
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Exposure count fetched successfully.",
                  "data": {
                    "gates": [
                      {
                        "id": "a_gate",
                        "pastDay": 0,
                        "past7Days": 98
                      }
                    ],
                    "experiments": [
                      {
                        "id": "my_experiment",
                        "pastDay": 102,
                        "past7Days": 558
                      },
                      {
                        "id": "another_experiment",
                        "pastDay": 5904,
                        "past7Days": 2078
                      }
                    ],
                    "dynamicConfigs": [
                      {
                        "id": "dc_limit",
                        "pastDay": 240830,
                        "past7Days": 1329945
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Data is not available"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Configs"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates": {
      "get": {
        "summary": "List Gates",
        "parameters": [
          {
            "name": "idType",
            "required": false,
            "in": "query",
            "description": "Filter by idType",
            "examples": {
              "single id type": {
                "value": "userID"
              },
              "multiple id types": {
                "value": [
                  "userID",
                  "stableID"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by type",
            "schema": {
              "type": "string",
              "enum": [
                "TEMPORARY",
                "PERMANENT",
                "STALE",
                "TEMPLATE"
              ]
            }
          },
          {
            "name": "typeReason",
            "required": false,
            "in": "query",
            "description": "Filter by typeReason",
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "STALE_PROBABLY_LAUNCHED",
                "STALE_PROBABLY_UNLAUNCHED",
                "STALE_PROBABLY_FORGOTTEN",
                "STALE_NO_RULES",
                "STALE_PROBABLY_DEAD_CHECK",
                "STALE_EMPTY_CHECKS",
                "STALE_ALL_TRUE",
                "STALE_ALL_FALSE"
              ]
            }
          },
          {
            "name": "passRate",
            "required": false,
            "in": "query",
            "description": "Filter by pass rate of the gates, as determined by a sampling of overall true/false values returned: 0, 100, or INBETWEEN (pass rate greater than zero but less than 100)",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "0",
                    "100",
                    "INBETWEEN"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "0",
                      "100",
                      "INBETWEEN"
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "rolloutRate",
            "required": false,
            "in": "query",
            "description": "Filter by rollout rate of the gates: 0 (all rules are set to pass 0%), 100 (all rules pass 100% including an \"everyone\" catch all rule), or INBETWEEN (at least one rule has a pass rate greater than 0 but less than 100)",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "0",
                    "100",
                    "INBETWEEN"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "0",
                      "100",
                      "INBETWEEN"
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "releasePipelineID",
            "required": false,
            "in": "query",
            "description": "Filter by release pipeline ID",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List gates success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalGateDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gates listed successfully.",
                    "data": [
                      {
                        "id": "a_gate",
                        "name": "A Gate",
                        "description": "description",
                        "idType": "userID",
                        "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                        "lastModifiedTime": 1705439406750,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                        "createdTime": 1705439406615,
                        "creatorName": "CONSOLE API",
                        "creatorEmail": null,
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "isEnabled": true,
                        "status": "In Progress",
                        "rules": [],
                        "checksPerHour": 0,
                        "type": "PERMANENT",
                        "typeReason": "NONE",
                        "team": null,
                        "reviewSettings": {
                          "requiredReview": false,
                          "allowedReviewers": []
                        },
                        "measureMetricLifts": true,
                        "owner": {
                          "ownerID": "user123",
                          "ownerName": "CONSOLE API",
                          "ownerType": "SDK_KEY",
                          "ownerEmail": ""
                        },
                        "monitoringMetrics": [],
                        "version": 1
                      }
                    ],
                    "pagination": {
                      "all": "",
                      "itemsPerPage": 100,
                      "nextPage": null,
                      "pageNumber": 1,
                      "previousPage": null,
                      "totalItems": 1
                    }
                  }
                },
                "example": {
                  "message": "Gates listed successfully.",
                  "data": [
                    {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "lastModifiedTime": 1705439406750,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "createdTime": 1705439406615,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": [],
                      "version": 1
                    }
                  ],
                  "pagination": {
                    "all": "",
                    "itemsPerPage": 100,
                    "nextPage": null,
                    "pageNumber": 1,
                    "previousPage": null,
                    "totalItems": 1
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string",
                      "enum": [
                        "Forbidden resource"
                      ]
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden resource"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Gate",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GateCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate created successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1704929983827,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1704929979761,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": [],
                      "version": 1
                    }
                  }
                },
                "example": {
                  "message": "Gate created successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1704929983827,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1704929979761,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": true,
                    "status": "In Progress",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": [],
                    "version": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}": {
      "get": {
        "summary": "Read Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate read successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1704929983827,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1704929979761,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate read successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1704929983827,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1704929979761,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": true,
                    "status": "In Progress",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Fully Update Gates",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GateFullUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "data": {
                      "checksPerHour": 0,
                      "createdTime": 1705439406615,
                      "creatorEmail": null,
                      "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "creatorName": "CONSOLE API",
                      "description": "Updated Gate Description",
                      "holdoutIDs": [],
                      "id": "a_gate",
                      "idType": "stableID",
                      "isEnabled": false,
                      "lastModifiedTime": 1705439409750,
                      "lastModifierEmail": null,
                      "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "lastModifierName": "CONSOLE API",
                      "name": "A Gate",
                      "rules": [
                        {
                          "conditions": [
                            {
                              "operator": "any",
                              "targetValue": [
                                "111",
                                "222"
                              ],
                              "type": "user_id"
                            },
                            {
                              "operator": "str_contains_any",
                              "targetValue": [
                                "@outlook.com",
                                "@gmail.com"
                              ],
                              "type": "email"
                            },
                            {
                              "field": "age",
                              "operator": "gt",
                              "targetValue": 31,
                              "type": "custom_field"
                            },
                            {
                              "operator": "version_gt",
                              "targetValue": "1.1.1",
                              "type": "app_version"
                            },
                            {
                              "operator": "any",
                              "targetValue": [
                                "Android",
                                "Chrome"
                              ],
                              "type": "browser_name"
                            },
                            {
                              "operator": "any",
                              "targetValue": [
                                "94.0.4606.81",
                                "94.0.4606.92"
                              ],
                              "type": "browser_version"
                            },
                            {
                              "operator": "none",
                              "targetValue": [
                                "Android",
                                "Windows"
                              ],
                              "type": "os_name"
                            },
                            {
                              "operator": "version_lte",
                              "targetValue": "11.0.0",
                              "type": "os_version"
                            },
                            {
                              "operator": "any",
                              "targetValue": [
                                "NZ",
                                "US"
                              ],
                              "type": "country"
                            },
                            {
                              "operator": "any",
                              "targetValue": [
                                "production"
                              ],
                              "type": "environment_tier"
                            },
                            {
                              "targetValue": "growth_org",
                              "type": "passes_segment"
                            },
                            {
                              "targetValue": "growth_org",
                              "type": "fails_segment"
                            },
                            {
                              "operator": "any",
                              "targetValue": [
                                "1.1.1.1",
                                "8.8.8.8"
                              ],
                              "type": "ip_address"
                            },
                            {
                              "customID": "userID",
                              "operator": "any",
                              "targetValue": [
                                "31"
                              ],
                              "type": "unit_id"
                            }
                          ],
                          "environments": null,
                          "name": "All Conditions",
                          "passPercentage": 10
                        }
                      ],
                      "status": "Disabled",
                      "tags": [
                        "★ Core"
                      ],
                      "targetApps": [],
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    },
                    "message": "Gate updated successfully."
                  }
                },
                "example": {
                  "data": {
                    "checksPerHour": 0,
                    "createdTime": 1705439406615,
                    "creatorEmail": null,
                    "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "creatorName": "CONSOLE API",
                    "description": "Updated Gate Description",
                    "holdoutIDs": [],
                    "id": "a_gate",
                    "idType": "stableID",
                    "isEnabled": false,
                    "lastModifiedTime": 1705439409750,
                    "lastModifierEmail": null,
                    "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "lastModifierName": "CONSOLE API",
                    "name": "A Gate",
                    "rules": [
                      {
                        "conditions": [
                          {
                            "operator": "any",
                            "targetValue": [
                              "111",
                              "222"
                            ],
                            "type": "user_id"
                          },
                          {
                            "operator": "str_contains_any",
                            "targetValue": [
                              "@outlook.com",
                              "@gmail.com"
                            ],
                            "type": "email"
                          },
                          {
                            "field": "age",
                            "operator": "gt",
                            "targetValue": 31,
                            "type": "custom_field"
                          },
                          {
                            "operator": "version_gt",
                            "targetValue": "1.1.1",
                            "type": "app_version"
                          },
                          {
                            "operator": "any",
                            "targetValue": [
                              "Android",
                              "Chrome"
                            ],
                            "type": "browser_name"
                          },
                          {
                            "operator": "any",
                            "targetValue": [
                              "94.0.4606.81",
                              "94.0.4606.92"
                            ],
                            "type": "browser_version"
                          },
                          {
                            "operator": "none",
                            "targetValue": [
                              "Android",
                              "Windows"
                            ],
                            "type": "os_name"
                          },
                          {
                            "operator": "version_lte",
                            "targetValue": "11.0.0",
                            "type": "os_version"
                          },
                          {
                            "operator": "any",
                            "targetValue": [
                              "NZ",
                              "US"
                            ],
                            "type": "country"
                          },
                          {
                            "operator": "any",
                            "targetValue": [
                              "production"
                            ],
                            "type": "environment_tier"
                          },
                          {
                            "targetValue": "growth_org",
                            "type": "passes_segment"
                          },
                          {
                            "targetValue": "growth_org",
                            "type": "fails_segment"
                          },
                          {
                            "operator": "any",
                            "targetValue": [
                              "1.1.1.1",
                              "8.8.8.8"
                            ],
                            "type": "ip_address"
                          },
                          {
                            "customID": "userID",
                            "operator": "any",
                            "targetValue": [
                              "31"
                            ],
                            "type": "unit_id"
                          }
                        ],
                        "environments": null,
                        "name": "All Conditions",
                        "passPercentage": 10
                      }
                    ],
                    "status": "Disabled",
                    "tags": [
                      "★ Core"
                    ],
                    "targetApps": [],
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  },
                  "message": "Gate updated successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially Update Gates",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GatePartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "data": {
                      "checksPerHour": 0,
                      "createdTime": 1705439406750,
                      "creatorEmail": null,
                      "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "creatorName": "CONSOLE API",
                      "description": "Updated the description of the gate",
                      "holdoutIDs": [],
                      "id": "a_gate",
                      "idType": "userID",
                      "isEnabled": true,
                      "lastModifiedTime": 1705439498468,
                      "lastModifierEmail": null,
                      "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "lastModifierName": "CONSOLE API",
                      "name": "A Gate",
                      "rules": [],
                      "status": "In Progress",
                      "tags": [],
                      "targetApps": [],
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    },
                    "message": "Gate updated successfully."
                  }
                },
                "example": {
                  "data": {
                    "checksPerHour": 0,
                    "createdTime": 1705439406750,
                    "creatorEmail": null,
                    "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "creatorName": "CONSOLE API",
                    "description": "Updated the description of the gate",
                    "holdoutIDs": [],
                    "id": "a_gate",
                    "idType": "userID",
                    "isEnabled": true,
                    "lastModifiedTime": 1705439498468,
                    "lastModifierEmail": null,
                    "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "lastModifierName": "CONSOLE API",
                    "name": "A Gate",
                    "rules": [],
                    "status": "In Progress",
                    "tags": [],
                    "targetApps": [],
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  },
                  "message": "Gate updated successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Gates",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete gate response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Gate deleted successfully."
                  }
                },
                "example": {
                  "message": "Gate deleted successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/alerts/{metricId}/resolve": {
      "post": {
        "summary": "Resolve Metric Rollout Alert",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricId",
            "required": true,
            "in": "path",
            "description": "metric id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolveGuardrailAlertRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Metric rollout alert resolved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ResolveGuardrailAlertResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/archive": {
      "put": {
        "summary": "Archive Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveSchemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Archive gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1705691355849,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1705691325569,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "Archived",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1705691355849,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1705691325569,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": true,
                    "status": "Archived",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/disable": {
      "put": {
        "summary": "Disable Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Launch gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1705626260086,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1705450774719,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": false,
                      "status": "Launched",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1705626260086,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1705450774719,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": false,
                    "status": "Launched",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/dynamic_config_references": {
      "get": {
        "summary": "List Dynamic Config References",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List dynamic configs that reference this gate",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/DynamicConfigDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Dynamic Configs listed successfully.",
                    "data": [
                      {
                        "id": "example_config",
                        "name": "Example Config",
                        "description": "An example dynamic configuration",
                        "idType": "userID",
                        "lastModifierID": "abc123",
                        "lastModifiedTime": 1600000000000,
                        "lastModifierName": "Jane Doe",
                        "lastModifierEmail": "jane@example.com",
                        "creatorID": "def456",
                        "createdTime": 1500000000000,
                        "creatorName": "John Smith",
                        "creatorEmail": "john@example.com",
                        "targetApps": [
                          "myapp"
                        ],
                        "holdoutIDs": [],
                        "tags": [
                          "example_tag"
                        ],
                        "team": "Product",
                        "isEnabled": true,
                        "rules": [],
                        "defaultValue": {},
                        "defaultValueJson5": "{}",
                        "schema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{}}",
                        "schemaJson5": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"properties\": {}\n}",
                        "version": 1
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Dynamic Configs listed successfully.",
                  "data": [
                    {
                      "id": "example_config",
                      "name": "Example Config",
                      "description": "An example dynamic configuration",
                      "idType": "userID",
                      "lastModifierID": "abc123",
                      "lastModifiedTime": 1600000000000,
                      "lastModifierName": "Jane Doe",
                      "lastModifierEmail": "jane@example.com",
                      "creatorID": "def456",
                      "createdTime": 1500000000000,
                      "creatorName": "John Smith",
                      "creatorEmail": "john@example.com",
                      "targetApps": [
                        "myapp"
                      ],
                      "holdoutIDs": [],
                      "tags": [
                        "example_tag"
                      ],
                      "team": "Product",
                      "isEnabled": true,
                      "rules": [],
                      "defaultValue": {},
                      "defaultValueJson5": "{}",
                      "schema": "{\"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\"properties\":{}}",
                      "schemaJson5": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"properties\": {}\n}",
                      "version": 1
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/enable": {
      "put": {
        "summary": "Enable Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Enable gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1705626260086,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1705450774719,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": false,
                      "status": "Launched",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1705626260086,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1705450774719,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": false,
                    "status": "Launched",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/experiment_references": {
      "get": {
        "summary": "List Experiment References",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List experiments that reference this gate",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalExperimentDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Experiments listed successfully.",
                    "data": [
                      {
                        "id": "a_experiment",
                        "name": "a_experiment",
                        "description": "description",
                        "idType": "userID",
                        "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                        "lastModifiedTime": 1707427635442,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                        "createdTime": 1707427634717,
                        "creatorName": "CONSOLE API",
                        "creatorEmail": null,
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "status": "setup",
                        "launchedGroupID": null,
                        "startTime": null,
                        "endTime": null,
                        "layerID": null,
                        "hypothesis": "This will be a good feature :)",
                        "primaryMetrics": [
                          {
                            "name": "d1_retention_rate",
                            "type": "user"
                          }
                        ],
                        "primaryMetricTags": [],
                        "secondaryMetrics": [],
                        "secondaryMetricTags": [],
                        "groups": [
                          {
                            "name": "Control",
                            "id": "6sEQvUd4c6E55V6ljBYMeJ",
                            "size": 50,
                            "parameterValues": {
                              "assigned_group": "control"
                            },
                            "description": ""
                          },
                          {
                            "name": "Test",
                            "id": "6sEQvVS6EoNzpkEgUJUpxL",
                            "size": 50,
                            "parameterValues": {
                              "assigned_group": "test"
                            },
                            "description": ""
                          }
                        ],
                        "allocation": 100,
                        "duration": 14,
                        "targetingGateID": "",
                        "defaultConfidenceInterval": "95",
                        "bonferroniCorrection": false,
                        "decisionReason": null,
                        "decisionTime": null,
                        "healthChecks": [],
                        "owner": {
                          "ownerType": "USER",
                          "ownerName": "Test User"
                        },
                        "inlineTargetingRulesJSON": "{}",
                        "healthCheckStatus": "PASSED"
                      },
                      {
                        "id": "b_experiment",
                        "name": "b experiment",
                        "description": "",
                        "idType": "userID",
                        "inlineTargetingRulesJSON": "{}",
                        "lastModifierID": "68ztZp2v2nFc81RAsvuvj4",
                        "lastModifiedTime": 1706744900374,
                        "lastModifierName": "jacob O'Quinn",
                        "lastModifierEmail": "jacob@statsig.com",
                        "creatorID": "68ztZp2v2nFc81RAsvuvj4",
                        "createdTime": 1678394676162,
                        "creatorName": "jacob O'Quinn",
                        "creatorEmail": "jacob@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [
                          "customTag",
                          "asdf"
                        ],
                        "status": "archived",
                        "launchedGroupID": null,
                        "startTime": null,
                        "endTime": null,
                        "layerID": null,
                        "hypothesis": "",
                        "primaryMetrics": [],
                        "primaryMetricTags": [],
                        "secondaryMetrics": [],
                        "secondaryMetricTags": [
                          "★ Core"
                        ],
                        "groups": [
                          {
                            "name": "Control",
                            "id": "7dCnwm0by2laSOcBNKIL8r",
                            "size": 50,
                            "parameterValues": {
                              "control": "control value"
                            },
                            "description": ""
                          },
                          {
                            "name": "Test",
                            "id": "7dCnwnFe0kuFcdKxoSEort",
                            "size": 50,
                            "parameterValues": {
                              "control": "test value"
                            },
                            "description": ""
                          }
                        ],
                        "allocation": 100,
                        "duration": 14,
                        "targetingGateID": "targeting_gate_to_select_users",
                        "defaultConfidenceInterval": "95",
                        "bonferroniCorrection": false,
                        "decisionReason": null,
                        "decisionTime": null,
                        "healthCheckStatus": "WAITING",
                        "healthChecks": [
                          {
                            "name": "Checks not yet detected",
                            "status": "WAITING",
                            "description": "This experiment has not recorded any exposure checks in production yet."
                          },
                          {
                            "name": "Valid unit type not yet verified",
                            "status": "WAITING",
                            "description": "Exposure checks for this experiment are pending evaluation. This experiment requires exposure checks with unit IDs of type userID"
                          },
                          {
                            "name": "Event metric data not yet verified",
                            "status": "WAITING",
                            "description": "This experiment has recorded no event metric with a valid unit ID yet, or these event metrics are pending evaluation. If you are importing events, this may take up to a day to reflect. This experiment requires metrics with unit IDs of type userID"
                          },
                          {
                            "name": "Pulse metrics not yet available",
                            "status": "WAITING",
                            "description": "Expect to see your Pulse Results within 24 hours. Statsig computes Pulse results on a daily basis."
                          },
                          {
                            "name": "Exposure balance not yet verified",
                            "status": "WAITING",
                            "description": "Exposure balance for this experiment is pending evaluation. As the experiment records more exposures, Statsig will continue to evaluate experiment exposure balance."
                          }
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Experiments listed successfully.",
                  "data": [
                    {
                      "id": "a_experiment",
                      "name": "a_experiment",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1707427635442,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1707427634717,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "status": "setup",
                      "launchedGroupID": null,
                      "startTime": null,
                      "endTime": null,
                      "layerID": null,
                      "hypothesis": "This will be a good feature :)",
                      "primaryMetrics": [
                        {
                          "name": "d1_retention_rate",
                          "type": "user"
                        }
                      ],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [],
                      "groups": [
                        {
                          "name": "Control",
                          "id": "6sEQvUd4c6E55V6ljBYMeJ",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "control"
                          },
                          "description": ""
                        },
                        {
                          "name": "Test",
                          "id": "6sEQvVS6EoNzpkEgUJUpxL",
                          "size": 50,
                          "parameterValues": {
                            "assigned_group": "test"
                          },
                          "description": ""
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "decisionReason": null,
                      "decisionTime": null,
                      "healthChecks": [],
                      "owner": {
                        "ownerType": "USER",
                        "ownerName": "Test User"
                      },
                      "inlineTargetingRulesJSON": "{}",
                      "healthCheckStatus": "PASSED"
                    },
                    {
                      "id": "b_experiment",
                      "name": "b experiment",
                      "description": "",
                      "idType": "userID",
                      "inlineTargetingRulesJSON": "{}",
                      "lastModifierID": "68ztZp2v2nFc81RAsvuvj4",
                      "lastModifiedTime": 1706744900374,
                      "lastModifierName": "jacob O'Quinn",
                      "lastModifierEmail": "jacob@statsig.com",
                      "creatorID": "68ztZp2v2nFc81RAsvuvj4",
                      "createdTime": 1678394676162,
                      "creatorName": "jacob O'Quinn",
                      "creatorEmail": "jacob@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [
                        "customTag",
                        "asdf"
                      ],
                      "status": "archived",
                      "launchedGroupID": null,
                      "startTime": null,
                      "endTime": null,
                      "layerID": null,
                      "hypothesis": "",
                      "primaryMetrics": [],
                      "primaryMetricTags": [],
                      "secondaryMetrics": [],
                      "secondaryMetricTags": [
                        "★ Core"
                      ],
                      "groups": [
                        {
                          "name": "Control",
                          "id": "7dCnwm0by2laSOcBNKIL8r",
                          "size": 50,
                          "parameterValues": {
                            "control": "control value"
                          },
                          "description": ""
                        },
                        {
                          "name": "Test",
                          "id": "7dCnwnFe0kuFcdKxoSEort",
                          "size": 50,
                          "parameterValues": {
                            "control": "test value"
                          },
                          "description": ""
                        }
                      ],
                      "allocation": 100,
                      "duration": 14,
                      "targetingGateID": "targeting_gate_to_select_users",
                      "defaultConfidenceInterval": "95",
                      "bonferroniCorrection": false,
                      "decisionReason": null,
                      "decisionTime": null,
                      "healthCheckStatus": "WAITING",
                      "healthChecks": [
                        {
                          "name": "Checks not yet detected",
                          "status": "WAITING",
                          "description": "This experiment has not recorded any exposure checks in production yet."
                        },
                        {
                          "name": "Valid unit type not yet verified",
                          "status": "WAITING",
                          "description": "Exposure checks for this experiment are pending evaluation. This experiment requires exposure checks with unit IDs of type userID"
                        },
                        {
                          "name": "Event metric data not yet verified",
                          "status": "WAITING",
                          "description": "This experiment has recorded no event metric with a valid unit ID yet, or these event metrics are pending evaluation. If you are importing events, this may take up to a day to reflect. This experiment requires metrics with unit IDs of type userID"
                        },
                        {
                          "name": "Pulse metrics not yet available",
                          "status": "WAITING",
                          "description": "Expect to see your Pulse Results within 24 hours. Statsig computes Pulse results on a daily basis."
                        },
                        {
                          "name": "Exposure balance not yet verified",
                          "status": "WAITING",
                          "description": "Exposure balance for this experiment is pending evaluation. As the experiment records more exposures, Statsig will continue to evaluate experiment exposure balance."
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/gate_references": {
      "get": {
        "summary": "List Gate References",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 100,
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List entities that reference this gate",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalGateDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gates listed successfully.",
                    "data": [
                      {
                        "id": "a_gate",
                        "name": "A Gate",
                        "description": "description",
                        "idType": "userID",
                        "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                        "lastModifiedTime": 1705439406750,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                        "createdTime": 1705439406615,
                        "creatorName": "CONSOLE API",
                        "creatorEmail": null,
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "isEnabled": true,
                        "status": "In Progress",
                        "rules": [],
                        "checksPerHour": 0,
                        "type": "PERMANENT",
                        "typeReason": "NONE",
                        "team": null,
                        "reviewSettings": {
                          "requiredReview": false,
                          "allowedReviewers": []
                        },
                        "measureMetricLifts": true,
                        "owner": {
                          "ownerID": "user123",
                          "ownerName": "CONSOLE API",
                          "ownerType": "SDK_KEY",
                          "ownerEmail": ""
                        },
                        "monitoringMetrics": [],
                        "version": 1
                      }
                    ],
                    "pagination": {
                      "all": "",
                      "itemsPerPage": 100,
                      "nextPage": null,
                      "pageNumber": 1,
                      "previousPage": null,
                      "totalItems": 1
                    }
                  }
                },
                "example": {
                  "message": "Gates listed successfully.",
                  "data": [
                    {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "lastModifiedTime": 1705439406750,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "createdTime": 1705439406615,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": [],
                      "version": 1
                    }
                  ],
                  "pagination": {
                    "all": "",
                    "itemsPerPage": 100,
                    "nextPage": null,
                    "pageNumber": 1,
                    "previousPage": null,
                    "totalItems": 1
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/launch": {
      "put": {
        "summary": "Launch Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Launch gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1705626260086,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1705450774719,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": false,
                      "status": "Launched",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1705626260086,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1705450774719,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": false,
                    "status": "Launched",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/load_pulse": {
      "post": {
        "summary": "Load Pulse Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EchidnaGateLoadPulseQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Load Pulse Gate Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Gate loaded successfully."
                  }
                },
                "example": {
                  "message": "Gate loaded successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/overrides": {
      "get": {
        "summary": "Get Gate Override",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Get Gate Override Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate Overrides read successfully.",
                    "data": {
                      "passingUserIDs": [
                        "passing-user"
                      ],
                      "failingUserIDs": [
                        "failing-user"
                      ],
                      "passingCustomIDs": [
                        "passing-custom-id"
                      ],
                      "failingCustomIDs": [
                        "passing-custom-id"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Gate Overrides read successfully.",
                  "data": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ],
                    "passingCustomIDs": [
                      "passing-custom-id"
                    ],
                    "failingCustomIDs": [
                      "passing-custom-id"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Gate Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOverridesContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Update Gate Override Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ]
                  }
                },
                "example": {
                  "passingUserIDs": [
                    "passing-user"
                  ],
                  "failingUserIDs": [
                    "failing-user"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Add Gate Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOverridesContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add Gate Override Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ]
                  }
                },
                "example": {
                  "passingUserIDs": [
                    "passing-user"
                  ],
                  "failingUserIDs": [
                    "failing-user"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Gate Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Delete Gate Override Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ]
                  }
                },
                "example": {
                  "passingUserIDs": [
                    "passing-user"
                  ],
                  "failingUserIDs": [
                    "failing-user"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/rule": {
      "post": {
        "summary": "Add Gate Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Gate Rule Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate rules added successfully.",
                    "data": {
                      "id": "gate1",
                      "name": "gate1",
                      "description": "",
                      "idType": "userID",
                      "lastModifierID": "65pqqzT46Kl7lHnd2JCmgH",
                      "lastModifiedTime": 1721435847251,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "3exemrfZ5pwOk6qyDH0dhP",
                      "createdTime": 1721242681598,
                      "creatorName": "Jathu Theivikaran",
                      "creatorEmail": "jathurshan@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "team": null,
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [
                        {
                          "id": "LcDWo6mFrWaS3DtoKtEAfg1",
                          "baseID": "LcDWo6mFrWaS3DtoKtEAfg1",
                          "name": "NA",
                          "passPercentage": 90,
                          "conditions": [
                            {
                              "type": "country",
                              "targetValue": [
                                "CA"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": null
                        },
                        {
                          "id": "1RoFk5jjnNpF2HZD5oQOeY",
                          "baseID": "1RoFk5jjnNpF2HZD5oQOeY",
                          "name": "NA2",
                          "passPercentage": 80,
                          "conditions": [
                            {
                              "type": "country",
                              "targetValue": [
                                "US"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": null
                        }
                      ],
                      "checksPerHour": 0,
                      "type": "TEMPORARY",
                      "typeReason": "NONE",
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true
                    }
                  }
                },
                "example": {
                  "message": "Gate rules added successfully.",
                  "data": {
                    "id": "gate1",
                    "name": "gate1",
                    "description": "",
                    "idType": "userID",
                    "lastModifierID": "65pqqzT46Kl7lHnd2JCmgH",
                    "lastModifiedTime": 1721435847251,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "3exemrfZ5pwOk6qyDH0dhP",
                    "createdTime": 1721242681598,
                    "creatorName": "Jathu Theivikaran",
                    "creatorEmail": "jathurshan@statsig.com",
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "team": null,
                    "isEnabled": true,
                    "status": "In Progress",
                    "rules": [
                      {
                        "id": "LcDWo6mFrWaS3DtoKtEAfg1",
                        "baseID": "LcDWo6mFrWaS3DtoKtEAfg1",
                        "name": "NA",
                        "passPercentage": 90,
                        "conditions": [
                          {
                            "type": "country",
                            "targetValue": [
                              "CA"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": null
                      },
                      {
                        "id": "1RoFk5jjnNpF2HZD5oQOeY",
                        "baseID": "1RoFk5jjnNpF2HZD5oQOeY",
                        "name": "NA2",
                        "passPercentage": 80,
                        "conditions": [
                          {
                            "type": "country",
                            "targetValue": [
                              "US"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": null
                      }
                    ],
                    "checksPerHour": 0,
                    "type": "TEMPORARY",
                    "typeReason": "NONE",
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/rules": {
      "get": {
        "summary": "Read Gate Rules",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get gate rules response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GateRulesDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate rules read successfully.",
                    "data": {
                      "rules": [
                        {
                          "name": "NA",
                          "passPercentage": 90,
                          "conditions": [
                            {
                              "type": "country",
                              "operator": "any",
                              "targetValue": [
                                "CA"
                              ]
                            }
                          ],
                          "environment": "production",
                          "id": "LcDWo6mFrWaS3DtoKtEAfg1"
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Gate rules read successfully.",
                  "data": {
                    "rules": [
                      {
                        "name": "NA",
                        "passPercentage": 90,
                        "conditions": [
                          {
                            "type": "country",
                            "operator": "any",
                            "targetValue": [
                              "CA"
                            ]
                          }
                        ],
                        "environment": "production",
                        "id": "LcDWo6mFrWaS3DtoKtEAfg1"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Add Multiple Gate Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiRuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Multiple Gate Rules Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate rules added successfully.",
                    "data": {
                      "id": "gate1",
                      "name": "gate1",
                      "description": "",
                      "idType": "userID",
                      "lastModifierID": "65pqqzT46Kl7lHnd2JCmgH",
                      "lastModifiedTime": 1721435847251,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "3exemrfZ5pwOk6qyDH0dhP",
                      "createdTime": 1721242681598,
                      "creatorName": "Jathu Theivikaran",
                      "creatorEmail": "jathurshan@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "team": null,
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [
                        {
                          "id": "LcDWo6mFrWaS3DtoKtEAfg1",
                          "baseID": "LcDWo6mFrWaS3DtoKtEAfg1",
                          "name": "NA",
                          "passPercentage": 90,
                          "conditions": [
                            {
                              "type": "country",
                              "targetValue": [
                                "CA"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": null
                        },
                        {
                          "id": "1RoFk5jjnNpF2HZD5oQOeY",
                          "baseID": "1RoFk5jjnNpF2HZD5oQOeY",
                          "name": "NA2",
                          "passPercentage": 80,
                          "conditions": [
                            {
                              "type": "country",
                              "targetValue": [
                                "US"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": null
                        }
                      ],
                      "checksPerHour": 0,
                      "type": "TEMPORARY",
                      "typeReason": "NONE",
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true
                    }
                  }
                },
                "example": {
                  "message": "Gate rules added successfully.",
                  "data": {
                    "id": "gate1",
                    "name": "gate1",
                    "description": "",
                    "idType": "userID",
                    "lastModifierID": "65pqqzT46Kl7lHnd2JCmgH",
                    "lastModifiedTime": 1721435847251,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "3exemrfZ5pwOk6qyDH0dhP",
                    "createdTime": 1721242681598,
                    "creatorName": "Jathu Theivikaran",
                    "creatorEmail": "jathurshan@statsig.com",
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "team": null,
                    "isEnabled": true,
                    "status": "In Progress",
                    "rules": [
                      {
                        "id": "LcDWo6mFrWaS3DtoKtEAfg1",
                        "baseID": "LcDWo6mFrWaS3DtoKtEAfg1",
                        "name": "NA",
                        "passPercentage": 90,
                        "conditions": [
                          {
                            "type": "country",
                            "targetValue": [
                              "CA"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": null
                      },
                      {
                        "id": "1RoFk5jjnNpF2HZD5oQOeY",
                        "baseID": "1RoFk5jjnNpF2HZD5oQOeY",
                        "name": "NA2",
                        "passPercentage": 80,
                        "conditions": [
                          {
                            "type": "country",
                            "targetValue": [
                              "US"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": null
                      }
                    ],
                    "checksPerHour": 0,
                    "type": "TEMPORARY",
                    "typeReason": "NONE",
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update list of current Gate Rules settings",
        "description": "Update list of current Gate Rules settings. It does NOT replace, create or delete if you add more rules and remove rules in the rules object. Please get the current rules through GET and use that as the base object.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiRuleUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "isEnabled": true,
                      "description": "helpful summary of what this gate does",
                      "status": "In Progress",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "1vaasdfLlkaujjajiuOSBP2",
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "user_id",
                              "targetValue": [
                                "35sClJFs8l0y5uRQhDwUDo"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": [
                            "staging"
                          ]
                        }
                      ],
                      "tags": [
                        "* Core"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "isEnabled": true,
                    "description": "helpful summary of what this gate does",
                    "status": "In Progress",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "1vaasdfLlkaujjajiuOSBP2",
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "user_id",
                            "targetValue": [
                              "35sClJFs8l0y5uRQhDwUDo"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": [
                          "staging"
                        ]
                      }
                    ],
                    "tags": [
                      "* Core"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/rules/{ruleID}": {
      "patch": {
        "summary": "Update Gate Rules",
        "description": "Update all given rules. It does NOT create or delete if you add more rules and remove rules in the rules object.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Gate ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleID",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "isEnabled": true,
                      "description": "helpful summary of what this gate does",
                      "status": "In Progress",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "1vaasdfLlkaujjajiuOSBP2",
                      "rules": [
                        {
                          "name": "All Conditions",
                          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                          "baseID": "38ttpCpzrQFTMKcqFKk02l",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "user_id",
                              "targetValue": [
                                "35sClJFs8l0y5uRQhDwUDo"
                              ],
                              "operator": "any"
                            }
                          ],
                          "environments": [
                            "staging"
                          ]
                        }
                      ],
                      "tags": [
                        "* Core"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "isEnabled": true,
                    "description": "helpful summary of what this gate does",
                    "status": "In Progress",
                    "lastModifierName": "CONSOLE API",
                    "lastModifierID": "1vaasdfLlkaujjajiuOSBP2",
                    "rules": [
                      {
                        "name": "All Conditions",
                        "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                        "baseID": "38ttpCpzrQFTMKcqFKk02l",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "user_id",
                            "targetValue": [
                              "35sClJFs8l0y5uRQhDwUDo"
                            ],
                            "operator": "any"
                          }
                        ],
                        "environments": [
                          "staging"
                        ]
                      }
                    ],
                    "tags": [
                      "* Core"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Gate Rule",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Gate ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleID",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "data": {
                      "checksPerHour": 0,
                      "createdTime": 1705439406750,
                      "creatorEmail": null,
                      "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "creatorName": "CONSOLE API",
                      "description": "Updated the description of the gate",
                      "holdoutIDs": [],
                      "id": "a_gate",
                      "idType": "userID",
                      "isEnabled": true,
                      "lastModifiedTime": 1705439498468,
                      "lastModifierEmail": null,
                      "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                      "lastModifierName": "CONSOLE API",
                      "name": "A Gate",
                      "rules": [],
                      "status": "In Progress",
                      "tags": [],
                      "targetApps": [],
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    },
                    "message": "Gate updated successfully."
                  }
                },
                "example": {
                  "data": {
                    "checksPerHour": 0,
                    "createdTime": 1705439406750,
                    "creatorEmail": null,
                    "creatorID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "creatorName": "CONSOLE API",
                    "description": "Updated the description of the gate",
                    "holdoutIDs": [],
                    "id": "a_gate",
                    "idType": "userID",
                    "isEnabled": true,
                    "lastModifiedTime": 1705439498468,
                    "lastModifierEmail": null,
                    "lastModifierID": "4R5PV7mvYdW6NLCwK8ocoz",
                    "lastModifierName": "CONSOLE API",
                    "name": "A Gate",
                    "rules": [],
                    "status": "In Progress",
                    "tags": [],
                    "targetApps": [],
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  },
                  "message": "Gate updated successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/rules/{ruleID}/pulse_load_history": {
      "get": {
        "summary": "Pulse Load History (Warehouse Native)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Gate ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleID",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Pulse Load History",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PulseLoadHistoryDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/rules/{ruleID}/pulse_results": {
      "get": {
        "summary": "Retrieve Pulse Results",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Gate ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ruleID",
            "required": true,
            "in": "path",
            "description": "Rule ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cuped",
            "required": false,
            "in": "query",
            "description": "Whether to apply CUPED. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidence",
            "required": false,
            "in": "query",
            "description": "Confidence interval (0-100)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Pulse Results Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/GatePulseResultsDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Successfully loaded Pulse Results",
                    "data": {
                      "ds": "2024-09-12",
                      "monitoringMetrics": [
                        {
                          "metricID": "conversion_rate",
                          "metricName": "Conversion Rate",
                          "directionality": "increase",
                          "absoluteChange": 0.0025,
                          "confidenceIntervalDelta": 0.0015,
                          "percentChange": 2.5,
                          "percentConfidenceIntervalDelta": 1.5,
                          "percentSequentialTestingConfidenceIntervalDelta": -0.8,
                          "testMean": 0.1025,
                          "controlMean": 0.1,
                          "testStd": 0.0012,
                          "controlStd": 0.0011,
                          "testUnits": 1500,
                          "controlUnits": 1480,
                          "pValue": 0.045
                        },
                        {
                          "metricID": "user_engagement",
                          "metricName": "User Engagement Score",
                          "directionality": "increase",
                          "absoluteChange": 0.15,
                          "confidenceIntervalDelta": 0.08,
                          "percentChange": 3.2,
                          "percentConfidenceIntervalDelta": 1.7,
                          "percentSequentialTestingConfidenceIntervalDelta": -2.1,
                          "testMean": 4.85,
                          "controlMean": 4.7,
                          "testStd": 0.35,
                          "controlStd": 0.32,
                          "testUnits": 2200,
                          "controlUnits": 2150,
                          "pValue": 0.025
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Successfully loaded Pulse Results",
                  "data": {
                    "ds": "2024-09-12",
                    "monitoringMetrics": [
                      {
                        "metricID": "conversion_rate",
                        "metricName": "Conversion Rate",
                        "directionality": "increase",
                        "absoluteChange": 0.0025,
                        "confidenceIntervalDelta": 0.0015,
                        "percentChange": 2.5,
                        "percentConfidenceIntervalDelta": 1.5,
                        "percentSequentialTestingConfidenceIntervalDelta": -0.8,
                        "testMean": 0.1025,
                        "controlMean": 0.1,
                        "testStd": 0.0012,
                        "controlStd": 0.0011,
                        "testUnits": 1500,
                        "controlUnits": 1480,
                        "pValue": 0.045
                      },
                      {
                        "metricID": "user_engagement",
                        "metricName": "User Engagement Score",
                        "directionality": "increase",
                        "absoluteChange": 0.15,
                        "confidenceIntervalDelta": 0.08,
                        "percentChange": 3.2,
                        "percentConfidenceIntervalDelta": 1.7,
                        "percentSequentialTestingConfidenceIntervalDelta": -2.1,
                        "testMean": 4.85,
                        "controlMean": 4.7,
                        "testStd": 0.35,
                        "controlStd": 0.32,
                        "testUnits": 2200,
                        "controlUnits": 2150,
                        "pValue": 0.025
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/unarchive": {
      "put": {
        "summary": "Unarchive Gate",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnarchiveSchemaDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unarchive gate response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalGateDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Gate updated successfully.",
                    "data": {
                      "id": "a_gate",
                      "name": "A Gate",
                      "description": "description",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1705691355849,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1705691325569,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "isEnabled": true,
                      "status": "In Progress",
                      "rules": [],
                      "checksPerHour": 0,
                      "type": "PERMANENT",
                      "typeReason": "NONE",
                      "team": null,
                      "reviewSettings": {
                        "requiredReview": false,
                        "allowedReviewers": []
                      },
                      "measureMetricLifts": true,
                      "owner": {
                        "ownerID": "user123",
                        "ownerName": "CONSOLE API",
                        "ownerType": "SDK_KEY",
                        "ownerEmail": ""
                      },
                      "monitoringMetrics": []
                    }
                  }
                },
                "example": {
                  "message": "Gate updated successfully.",
                  "data": {
                    "id": "a_gate",
                    "name": "A Gate",
                    "description": "description",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1705691355849,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1705691325569,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "holdoutIDs": [],
                    "tags": [],
                    "isEnabled": true,
                    "status": "In Progress",
                    "rules": [],
                    "checksPerHour": 0,
                    "type": "PERMANENT",
                    "typeReason": "NONE",
                    "team": null,
                    "reviewSettings": {
                      "requiredReview": false,
                      "allowedReviewers": []
                    },
                    "measureMetricLifts": true,
                    "owner": {
                      "ownerID": "user123",
                      "ownerName": "CONSOLE API",
                      "ownerType": "SDK_KEY",
                      "ownerEmail": ""
                    },
                    "monitoringMetrics": []
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/gates/{id}/versions": {
      "get": {
        "summary": "List Gate Versions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Gate Versions Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalGateDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gates",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/holdouts": {
      "get": {
        "summary": "List Holdouts",
        "parameters": [
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List holdouts response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/HoldoutDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdouts listed successfully.",
                    "data": [
                      {
                        "id": "testing_holdout",
                        "name": "testing holdout",
                        "description": "helpful summary of what this holdout does",
                        "idType": "userID",
                        "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                        "lastModifiedTime": 1719873874212,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                        "createdTime": 1719873870785,
                        "creatorName": "CONSOLE API",
                        "creatorEmail": null,
                        "targetApps": [],
                        "tags": [],
                        "team": "Console Team",
                        "isEnabled": true,
                        "isGlobal": false,
                        "passPercentage": 0,
                        "gateIDs": [],
                        "experimentIDs": [],
                        "layerIDs": [],
                        "targetingGateID": null
                      },
                      {
                        "id": "test123",
                        "name": "test123",
                        "description": "",
                        "idType": "userID",
                        "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                        "lastModifiedTime": 1719872028057,
                        "lastModifierName": "test",
                        "lastModifierEmail": "user@statsig.com",
                        "creatorID": "5O908pyGoCqw6QH1nt8v82",
                        "createdTime": 1719872027567,
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "targetApps": [],
                        "tags": [],
                        "team": "Console Team",
                        "isEnabled": true,
                        "isGlobal": false,
                        "passPercentage": 0,
                        "gateIDs": [],
                        "experimentIDs": [],
                        "layerIDs": [],
                        "targetingGateID": null
                      },
                      {
                        "id": "test_target_gate",
                        "name": "test_target_gate",
                        "description": "test holdout",
                        "idType": "userID",
                        "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                        "lastModifiedTime": 1710521134863,
                        "lastModifierName": "CONSOLE API",
                        "lastModifierEmail": null,
                        "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                        "createdTime": 1702237002465,
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "targetApps": [],
                        "tags": [],
                        "team": null,
                        "isEnabled": true,
                        "isGlobal": false,
                        "passPercentage": 1,
                        "gateIDs": [
                          "product_larger_image",
                          "product_larger_image_lower",
                          "test_new_gate",
                          "ma_test_rollout",
                          "empty_gate",
                          "new_gate_to_point_experiment_at",
                          "new_gate_with_monitoring_metrics",
                          "andy_test_gate"
                        ],
                        "experimentIDs": [
                          "mostly_test_experiment",
                          "test_123",
                          "new_test_exp",
                          "test_exp_start",
                          "andy_test_experiment"
                        ],
                        "layerIDs": [
                          "Homepage Feed Improvements",
                          "statsig_is_awesome",
                          "testing_tool",
                          "test_statsig_2",
                          "layer_holdout_parameters"
                        ],
                        "targetingGateID": ""
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 20000,
                      "pageNumber": 1,
                      "totalItems": 3,
                      "nextPage": null,
                      "previousPage": null,
                      "all": "/console/v1/holdouts"
                    }
                  }
                },
                "example": {
                  "message": "Holdouts listed successfully.",
                  "data": [
                    {
                      "id": "testing_holdout",
                      "name": "testing holdout",
                      "description": "helpful summary of what this holdout does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1719873874212,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1719873870785,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": true,
                      "isGlobal": false,
                      "passPercentage": 0,
                      "gateIDs": [],
                      "experimentIDs": [],
                      "layerIDs": [],
                      "targetingGateID": null
                    },
                    {
                      "id": "test123",
                      "name": "test123",
                      "description": "",
                      "idType": "userID",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifiedTime": 1719872028057,
                      "lastModifierName": "test",
                      "lastModifierEmail": "user@statsig.com",
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "createdTime": 1719872027567,
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": true,
                      "isGlobal": false,
                      "passPercentage": 0,
                      "gateIDs": [],
                      "experimentIDs": [],
                      "layerIDs": [],
                      "targetingGateID": null
                    },
                    {
                      "id": "test_target_gate",
                      "name": "test_target_gate",
                      "description": "test holdout",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1710521134863,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                      "createdTime": 1702237002465,
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "targetApps": [],
                      "tags": [],
                      "team": null,
                      "isEnabled": true,
                      "isGlobal": false,
                      "passPercentage": 1,
                      "gateIDs": [
                        "product_larger_image",
                        "product_larger_image_lower",
                        "test_new_gate",
                        "ma_test_rollout",
                        "empty_gate",
                        "new_gate_to_point_experiment_at",
                        "new_gate_with_monitoring_metrics",
                        "andy_test_gate"
                      ],
                      "experimentIDs": [
                        "mostly_test_experiment",
                        "test_123",
                        "new_test_exp",
                        "test_exp_start",
                        "andy_test_experiment"
                      ],
                      "layerIDs": [
                        "Homepage Feed Improvements",
                        "statsig_is_awesome",
                        "testing_tool",
                        "test_statsig_2",
                        "layer_holdout_parameters"
                      ],
                      "targetingGateID": ""
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 20000,
                    "pageNumber": 1,
                    "totalItems": 3,
                    "nextPage": null,
                    "previousPage": null,
                    "all": "/console/v1/holdouts"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create holdout",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldoutCreateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create holdout response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/HoldoutDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout created successfully.",
                    "data": {
                      "id": "a_holdout",
                      "name": "a holdout",
                      "description": "helpful summary of what this holdout does",
                      "idType": "userID",
                      "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                      "lastModifiedTime": 1707768016211,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                      "createdTime": 1707768015729,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": true,
                      "isGlobal": false,
                      "passPercentage": 0,
                      "gateIDs": [],
                      "experimentIDs": [],
                      "layerIDs": [],
                      "targetingGateID": null
                    }
                  }
                },
                "example": {
                  "message": "Holdout created successfully.",
                  "data": {
                    "id": "a_holdout",
                    "name": "a holdout",
                    "description": "helpful summary of what this holdout does",
                    "idType": "userID",
                    "lastModifierID": "1vaQaBoLlkauH9iiuOSBP2",
                    "lastModifiedTime": 1707768016211,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "1vaQaBoLlkauH9iiuOSBP2",
                    "createdTime": 1707768015729,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "tags": [],
                    "team": "Console Team",
                    "isEnabled": true,
                    "isGlobal": false,
                    "passPercentage": 0,
                    "gateIDs": [],
                    "experimentIDs": [],
                    "layerIDs": [],
                    "targetingGateID": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found Exception",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/holdouts/{id}": {
      "get": {
        "summary": "Get holdout by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get holdout by id response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/HoldoutDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout read successfully.",
                    "data": {
                      "id": "testing_holdout",
                      "name": "testing holdout",
                      "description": "helpful summary of what this holdout does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1719873874212,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1719873870785,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": true,
                      "isGlobal": false,
                      "passPercentage": 0,
                      "gateIDs": [],
                      "experimentIDs": [],
                      "layerIDs": [],
                      "targetingGateID": null
                    }
                  }
                },
                "example": {
                  "message": "Holdout read successfully.",
                  "data": {
                    "id": "testing_holdout",
                    "name": "testing holdout",
                    "description": "helpful summary of what this holdout does",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1719873874212,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1719873870785,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "tags": [],
                    "team": "Console Team",
                    "isEnabled": true,
                    "isGlobal": false,
                    "passPercentage": 0,
                    "gateIDs": [],
                    "experimentIDs": [],
                    "layerIDs": [],
                    "targetingGateID": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update holdout by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldoutFullUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update holdout response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/HoldoutDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout updated successfully.",
                    "data": {
                      "id": "testing_holdout",
                      "name": "testing holdout",
                      "description": "UPDATED summary of what this holdout does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1719941188286,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1719873870785,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": true,
                      "isGlobal": true,
                      "passPercentage": 5,
                      "gateIDs": [],
                      "experimentIDs": [
                        "testing123"
                      ],
                      "layerIDs": [],
                      "targetingGateID": ""
                    }
                  }
                },
                "example": {
                  "message": "Holdout updated successfully.",
                  "data": {
                    "id": "testing_holdout",
                    "name": "testing holdout",
                    "description": "UPDATED summary of what this holdout does",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1719941188286,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1719873870785,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "tags": [],
                    "team": "Console Team",
                    "isEnabled": true,
                    "isGlobal": true,
                    "passPercentage": 5,
                    "gateIDs": [],
                    "experimentIDs": [
                      "testing123"
                    ],
                    "layerIDs": [],
                    "targetingGateID": ""
                  }
                }
              }
            }
          },
          "400": {
            "description": "Name is already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Name is already in use"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Patch holdout by id. You can pass in only the data you want to update.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HoldoutPartialUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update holdout response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/HoldoutDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout updated successfully.",
                    "data": {
                      "id": "testing_holdout",
                      "name": "testing holdout",
                      "description": "helpful summary of what the holdout does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1719939380702,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1719873870785,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [],
                      "tags": [],
                      "team": "Console Team",
                      "isEnabled": false,
                      "isGlobal": false,
                      "passPercentage": 0,
                      "gateIDs": [],
                      "experimentIDs": [],
                      "layerIDs": [],
                      "targetingGateID": null
                    }
                  }
                },
                "example": {
                  "message": "Holdout updated successfully.",
                  "data": {
                    "id": "testing_holdout",
                    "name": "testing holdout",
                    "description": "helpful summary of what the holdout does",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1719939380702,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1719873870785,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [],
                    "tags": [],
                    "team": "Console Team",
                    "isEnabled": false,
                    "isGlobal": false,
                    "passPercentage": 0,
                    "gateIDs": [],
                    "experimentIDs": [],
                    "layerIDs": [],
                    "targetingGateID": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Holdout not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Holdout not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete holdout by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete holdout response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/HoldoutDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout deleted successfully."
                  }
                },
                "example": {
                  "message": "Holdout deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Holdout not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Holdout not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/holdouts/{id}/overrides": {
      "get": {
        "summary": "Read Holdout Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Holdout Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout Overrides read successfully.",
                    "data": {
                      "passingUserIDs": [
                        "string"
                      ],
                      "failingUserIDs": [
                        "string"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Holdout Overrides read successfully.",
                  "data": {
                    "passingUserIDs": [
                      "string"
                    ],
                    "failingUserIDs": [
                      "string"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Holdout Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOverridesContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Holdout Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout Overrides updated successfully.",
                    "data": {
                      "passingUserIDs": [
                        "passing-user"
                      ],
                      "failingUserIDs": [
                        "failing-user"
                      ],
                      "passingCustomIDs": [
                        "passing-custom-id"
                      ],
                      "failingCustomIDs": [
                        "failing-custom-id"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Holdout Overrides updated successfully.",
                  "data": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ],
                    "passingCustomIDs": [
                      "passing-custom-id"
                    ],
                    "failingCustomIDs": [
                      "failing-custom-id"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Add Holdout Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOverridesContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Holdout Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Holdout Overrides updated successfully.",
                    "data": {
                      "passingUserIDs": [
                        "passing-user"
                      ],
                      "failingUserIDs": [
                        "failing-user"
                      ],
                      "passingCustomIDs": [
                        "passing-custom-id"
                      ],
                      "failingCustomIDs": [
                        "failing-custom-id"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Holdout Overrides updated successfully.",
                  "data": {
                    "passingUserIDs": [
                      "passing-user"
                    ],
                    "failingUserIDs": [
                      "failing-user"
                    ],
                    "passingCustomIDs": [
                      "passing-custom-id"
                    ],
                    "failingCustomIDs": [
                      "failing-custom-id"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Remove Holdout Overrides",
        "description": "Remove selected ids from an id list",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove Holdout Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OverrideDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "passingUserIDs": [
                      "remove-passing-user-id"
                    ],
                    "failingUserIDs": [
                      "remove-failing-user-id"
                    ]
                  }
                },
                "example": {
                  "passingUserIDs": [
                    "remove-passing-user-id"
                  ],
                  "failingUserIDs": [
                    "remove-failing-user-id"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/holdouts/{id}/pulse_results": {
      "get": {
        "summary": "Retrieve Pulse Results",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cuped",
            "required": false,
            "in": "query",
            "description": "Whether to apply CUPED. Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "confidence",
            "required": false,
            "in": "query",
            "description": "Confidence interval (0-100)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Pulse Results Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/GatePulseResultsDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Holdouts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion": {
      "get": {
        "summary": "Read Ingestion",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "redshift",
                "bigquery-v2",
                "snowflake-v2",
                "databricks",
                "azure-synapse",
                "s3",
                "athena",
                "adls"
              ]
            }
          },
          {
            "name": "dataset",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Events",
                "Metrics",
                "export_exposures",
                "entity_properties"
              ]
            }
          },
          {
            "name": "source_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Ingestion Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion schedule updated successfully.",
                    "data": {
                      "dataset": "Metrics",
                      "scheduled_hour_pst": 10
                    }
                  }
                },
                "example": {
                  "message": "Ingestion schedule updated successfully.",
                  "data": {
                    "dataset": "Metrics",
                    "scheduled_hour_pst": 10
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Ingestion Source",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionSourceCreateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Ingestion Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "databricks",
                    "dataset": "Metrics",
                    "source_name": "ingestion-1",
                    "query": "SELECT * FROM TABLE",
                    "column_mapping": {
                      "unit_id": "string",
                      "id_type": "string",
                      "dateid": "string",
                      "metric_name": "string",
                      "metric_value": "string",
                      "numerator": "string",
                      "denominator": "string"
                    },
                    "use_delta_sharing": false,
                    "share": "string",
                    "schema": "string",
                    "table": "string",
                    "enabled": false
                  }
                },
                "example": {
                  "type": "databricks",
                  "dataset": "Metrics",
                  "source_name": "ingestion-1",
                  "query": "SELECT * FROM TABLE",
                  "column_mapping": {
                    "unit_id": "string",
                    "id_type": "string",
                    "dateid": "string",
                    "metric_name": "string",
                    "metric_value": "string",
                    "numerator": "string",
                    "denominator": "string"
                  },
                  "use_delta_sharing": false,
                  "share": "string",
                  "schema": "string",
                  "table": "string",
                  "enabled": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Ingestion source already exists with name {source_name}"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Ingestion of type {type} not found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Ingestion Source",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Ingestion Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "databricks",
                    "dataset": "Metrics",
                    "source_name": "ingestion-1",
                    "query": "SELECT * FROM TABLE",
                    "column_mapping": {
                      "unit_id": "string",
                      "id_type": "string",
                      "dateid": "string",
                      "metric_name": "string",
                      "metric_value": "string",
                      "numerator": "string",
                      "denominator": "string"
                    },
                    "share": "string",
                    "schema": "string",
                    "table": "string",
                    "enabled": false
                  }
                },
                "example": {
                  "type": "databricks",
                  "dataset": "Metrics",
                  "source_name": "ingestion-1",
                  "query": "SELECT * FROM TABLE",
                  "column_mapping": {
                    "unit_id": "string",
                    "id_type": "string",
                    "dateid": "string",
                    "metric_name": "string",
                    "metric_value": "string",
                    "numerator": "string",
                    "denominator": "string"
                  },
                  "share": "string",
                  "schema": "string",
                  "table": "string",
                  "enabled": false
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Ingestion Source",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "redshift",
                "bigquery-v2",
                "snowflake-v2",
                "databricks",
                "azure-synapse",
                "s3",
                "athena",
                "adls"
              ]
            }
          },
          {
            "name": "dataset",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Events",
                "Metrics",
                "export_exposures",
                "entity_properties"
              ]
            }
          },
          {
            "name": "source_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Ingestion Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion deleted successfully."
                  }
                },
                "example": {
                  "message": "Ingestion deleted successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/backfill": {
      "post": {
        "summary": "Backfill Ingestion",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionBackfillContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Backfill Ingestion Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionBackfillDataDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion backfilled successfully.",
                    "data": {
                      "runID": "string"
                    }
                  }
                },
                "example": {
                  "message": "Ingestion backfilled successfully.",
                  "data": {
                    "runID": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/connection/databricks": {
      "post": {
        "summary": "Create Ingestion Databricks",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionCreateDatabricksConnectionContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Ingestion Databricks Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "token": "string",
                    "host": "string",
                    "path": "string",
                    "deltaSharingCredentials": "string",
                    "verified": false
                  }
                },
                "example": {
                  "token": "string",
                  "host": "string",
                  "path": "string",
                  "deltaSharingCredentials": "string",
                  "verified": false
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/events/count": {
      "get": {
        "summary": "Get Ingestion Event Count",
        "parameters": [
          {
            "name": "source_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Ingestion Event Count Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionEventCountResponseDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "databricks",
                    "dataset": "Metrics",
                    "source_name": "ingestion-1",
                    "query": "SELECT * FROM TABLE",
                    "column_mapping": {
                      "unit_id": "string",
                      "id_type": "string",
                      "dateid": "string",
                      "metric_name": "string",
                      "metric_value": "string",
                      "numerator": "string",
                      "denominator": "string"
                    },
                    "use_delta_sharing": false,
                    "share": "string",
                    "schema": "string",
                    "table": "string",
                    "enabled": false
                  }
                },
                "example": {
                  "type": "databricks",
                  "dataset": "Metrics",
                  "source_name": "ingestion-1",
                  "query": "SELECT * FROM TABLE",
                  "column_mapping": {
                    "unit_id": "string",
                    "id_type": "string",
                    "dateid": "string",
                    "metric_name": "string",
                    "metric_value": "string",
                    "numerator": "string",
                    "denominator": "string"
                  },
                  "use_delta_sharing": false,
                  "share": "string",
                  "schema": "string",
                  "table": "string",
                  "enabled": false
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/events/delta": {
      "get": {
        "summary": "Get Ingestion Event Delta Ledger",
        "parameters": [
          {
            "name": "source_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_name",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Ingestion Event Delta Ledger Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionEventDeltaResponseDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "type": "databricks",
                    "dataset": "Metrics",
                    "source_name": "ingestion-1",
                    "query": "SELECT * FROM TABLE",
                    "column_mapping": {
                      "unit_id": "string",
                      "id_type": "string",
                      "dateid": "string",
                      "metric_name": "string",
                      "metric_value": "string",
                      "numerator": "string",
                      "denominator": "string"
                    },
                    "use_delta_sharing": false,
                    "share": "string",
                    "schema": "string",
                    "table": "string",
                    "enabled": false
                  }
                },
                "example": {
                  "type": "databricks",
                  "dataset": "Metrics",
                  "source_name": "ingestion-1",
                  "query": "SELECT * FROM TABLE",
                  "column_mapping": {
                    "unit_id": "string",
                    "id_type": "string",
                    "dateid": "string",
                    "metric_name": "string",
                    "metric_value": "string",
                    "numerator": "string",
                    "denominator": "string"
                  },
                  "use_delta_sharing": false,
                  "share": "string",
                  "schema": "string",
                  "table": "string",
                  "enabled": false
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/runs": {
      "get": {
        "summary": "List Ingestion Runs",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Ingestion Runs Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IngestionRunDataContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion Runs Listed Successfully.",
                    "data": [
                      {
                        "runID": "5a09550b-75a1-4f98-908a-cd79ca729689",
                        "latestStatus": "download_error",
                        "lastUpdatedAt": "2023-12-14T02:47:00.321Z",
                        "createdAt": "2023-12-14T02:31:46.896Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Events 1",
                          "Events 2"
                        ],
                        "dateStamps": [
                          "2023-12-12"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-14T02:47:01.422Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:46:46.800Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:44:32.597Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:43:34.056Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:34:27.056Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:31:46.896Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Events 1",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-12",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-14T02:44:30.666Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:43:22.724Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:34:25.325Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:31:46.896Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "source": "Events 2",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-12",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-14T02:44:30.666Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:43:22.724Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:34:25.325Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:31:46.896Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "21b97020-e61a-49bf-a9f3-ce46cec50489",
                        "latestStatus": "pulse_complete",
                        "lastUpdatedAt": "2023-12-14T04:18:54.603Z",
                        "createdAt": "2023-12-14T02:30:27.217Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Metrics 1"
                        ],
                        "dateStamps": [
                          "2023-12-12"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-14T04:18:55.556Z",
                            "status": "pulse_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-14T03:32:49.429Z",
                            "status": "metrics_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-14T03:21:40.015Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T03:21:33.322Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T03:21:27.046Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T03:21:15.449Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:45:17.161Z",
                            "status": "download_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:43:33.661Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:35:09.734Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-14T02:30:27.217Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Metrics 1",
                            "latestSourceStatus": "pulse_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-12",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-14T04:18:53.975Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T04:04:48.761Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T03:32:48.019Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T03:21:38.667Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T03:21:32.039Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T03:21:25.385Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T03:21:14.383Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:45:05.125Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:43:27.013Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:35:07.577Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-14T02:30:27.217Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "de941fa2-3e0f-44ec-a44c-5c51eed07e0d",
                        "latestStatus": "download_error",
                        "lastUpdatedAt": "2023-12-13T02:44:23.790Z",
                        "createdAt": "2023-12-13T02:30:55.992Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Events 1",
                          "Events 2"
                        ],
                        "dateStamps": [
                          "2023-12-11"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-13T02:44:24.865Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:44:12.421Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:41:48.458Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:40:56.694Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:32:35.607Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:30:55.992Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Events 1",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-11",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "source": "Events 2",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-11",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "93b0150f-d53a-416e-876f-bac00634a872",
                        "latestStatus": "pulse_complete",
                        "lastUpdatedAt": "2023-12-13T03:47:23.504Z",
                        "createdAt": "2023-12-13T02:29:32.793Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Metrics 1"
                        ],
                        "dateStamps": [
                          "2023-12-11"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-13T03:47:24.548Z",
                            "status": "pulse_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:41:19.158Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:35:05.780Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:28:52.123Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:22:38.140Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:20:48.982Z",
                            "status": "metrics_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:16:40.079Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:16:31.359Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:16:23.553Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T03:16:08.026Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:42:52.210Z",
                            "status": "download_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:41:01.394Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:33:26.492Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-13T02:29:32.793Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Metrics 1",
                            "latestSourceStatus": "pulse_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-11",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-13T03:47:22.812Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:41:17.582Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:20:47.294Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:16:38.421Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:16:29.827Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:16:21.847Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T03:16:05.864Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:42:36.220Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:40:47.890Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:33:24.219Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-13T02:29:32.793Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "a4df397e-c816-4e39-9b1a-ab6b2e5f3811",
                        "latestStatus": "download_error",
                        "lastUpdatedAt": "2023-12-12T02:43:29.739Z",
                        "createdAt": "2023-12-12T02:30:41.989Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Events 1",
                          "Events 2"
                        ],
                        "dateStamps": [
                          "2023-12-10"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-12T02:43:30.735Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:43:16.318Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:40:56.030Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:39:58.147Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:32:18.156Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:30:41.989Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Events 1",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-10",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T02:40:54.406Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:39:51.150Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:32:16.419Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:30:41.989Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "source": "Events 2",
                            "latestSourceStatus": "download_error",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-10",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T02:40:54.406Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:39:51.150Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:32:16.419Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:30:41.989Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "eedeb4c0-07dd-43d0-8014-5ac41ef7dab8",
                        "latestStatus": "pulse_complete",
                        "lastUpdatedAt": "2023-12-12T03:50:41.473Z",
                        "createdAt": "2023-12-12T02:29:22.966Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Metrics 1"
                        ],
                        "dateStamps": [
                          "2023-12-10"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-12T03:50:42.631Z",
                            "status": "pulse_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:43:37.286Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:36:24.884Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:29:10.652Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:21:58.355Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:20:04.085Z",
                            "status": "metrics_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:15:24.760Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:15:18.051Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:15:10.427Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T03:14:55.187Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:42:29.345Z",
                            "status": "download_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:40:52.701Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:32:50.650Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-12T02:29:22.966Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Metrics 1",
                            "latestSourceStatus": "pulse_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-07",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T03:29:02.000Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:21:56.433Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-08",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T03:36:14.414Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:29:09.220Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-09",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T03:43:28.767Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:36:23.369Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-10",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T03:50:40.851Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:43:35.832Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:42:12.290Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:40:45.773Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:32:48.580Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-12T02:29:22.966Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "93b8b43c-8d52-4c77-bf8b-26426031a937",
                        "latestStatus": "download_error",
                        "lastUpdatedAt": "2023-12-12T05:23:34.419Z",
                        "createdAt": "2023-12-11T02:30:09.748Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Events 1",
                          "Events 2"
                        ],
                        "dateStamps": [
                          "2023-12-09"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-11T02:43:14.831Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:42:59.726Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:40:35.456Z",
                            "status": "download_error"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:39:41.755Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:31:30.223Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:30:09.748Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Events 1",
                            "latestSourceStatus": "download_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-09",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T05:23:36.192Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:40:33.565Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:39:34.990Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:31:28.492Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:30:09.748Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "source": "Events 2",
                            "latestSourceStatus": "download_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-09",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-12T05:23:36.193Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:40:33.565Z",
                                    "status": "download_error"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:39:34.990Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:31:28.492Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:30:09.748Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "runID": "97bbdee6-d77b-42c9-b4f0-d970eee9f983",
                        "latestStatus": "pulse_complete",
                        "lastUpdatedAt": "2023-12-11T10:00:43.391Z",
                        "createdAt": "2023-12-11T02:29:04.866Z",
                        "trigger": "scheduled",
                        "sources": [
                          "Metrics 1"
                        ],
                        "dateStamps": [
                          "2023-12-09"
                        ],
                        "runHistory": [
                          {
                            "statusTimestamp": "2023-12-11T10:00:44.621Z",
                            "status": "pulse_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:54:39.521Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:47:27.810Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:40:15.586Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:33:02.761Z",
                            "status": "pulse_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:31:14.238Z",
                            "status": "metrics_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:26:37.129Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:26:30.339Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:26:23.246Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T09:26:13.395Z",
                            "status": "metrics_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:51:38.296Z",
                            "status": "download_complete"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:49:59.185Z",
                            "status": "download_started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:42:14.545Z",
                            "status": "started"
                          },
                          {
                            "statusTimestamp": "2023-12-11T02:29:04.866Z",
                            "status": "enqueued"
                          }
                        ],
                        "granularHistory": [
                          {
                            "source": "Metrics 1",
                            "latestSourceStatus": "pulse_complete",
                            "statusByDate": [
                              {
                                "dateStamp": "2023-12-06",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-11T09:40:06.488Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:33:00.819Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:22.624Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-07",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-11T09:47:19.007Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:40:14.371Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-08",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-11T09:54:31.386Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:47:26.424Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                    "status": "metrics_started"
                                  }
                                ]
                              },
                              {
                                "dateStamp": "2023-12-09",
                                "statuses": [
                                  {
                                    "statusTimestamp": "2023-12-11T10:00:42.867Z",
                                    "status": "pulse_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:54:38.280Z",
                                    "status": "pulse_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                    "status": "metrics_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                    "status": "metrics_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:51:26.328Z",
                                    "status": "download_complete"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:49:52.797Z",
                                    "status": "download_started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:42:12.424Z",
                                    "status": "started"
                                  },
                                  {
                                    "statusTimestamp": "2023-12-11T02:29:04.866Z",
                                    "status": "enqueued"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 10,
                      "pageNumber": 1,
                      "nextPage": "/console/v1/ingestion/runs?page=2",
                      "previousPage": null
                    }
                  }
                },
                "example": {
                  "message": "Ingestion Runs Listed Successfully.",
                  "data": [
                    {
                      "runID": "5a09550b-75a1-4f98-908a-cd79ca729689",
                      "latestStatus": "download_error",
                      "lastUpdatedAt": "2023-12-14T02:47:00.321Z",
                      "createdAt": "2023-12-14T02:31:46.896Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Events 1",
                        "Events 2"
                      ],
                      "dateStamps": [
                        "2023-12-12"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-14T02:47:01.422Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:46:46.800Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:44:32.597Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:43:34.056Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:34:27.056Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:31:46.896Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Events 1",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-12",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-14T02:44:30.666Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:43:22.724Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:34:25.325Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:31:46.896Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "source": "Events 2",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-12",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-14T02:44:30.666Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:43:22.724Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:34:25.325Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:31:46.896Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "21b97020-e61a-49bf-a9f3-ce46cec50489",
                      "latestStatus": "pulse_complete",
                      "lastUpdatedAt": "2023-12-14T04:18:54.603Z",
                      "createdAt": "2023-12-14T02:30:27.217Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Metrics 1"
                      ],
                      "dateStamps": [
                        "2023-12-12"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-14T04:18:55.556Z",
                          "status": "pulse_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-14T03:32:49.429Z",
                          "status": "metrics_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-14T03:21:40.015Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T03:21:33.322Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T03:21:27.046Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T03:21:15.449Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:45:17.161Z",
                          "status": "download_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:43:33.661Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:35:09.734Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-14T02:30:27.217Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Metrics 1",
                          "latestSourceStatus": "pulse_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-12",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-14T04:18:53.975Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T04:04:48.761Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T03:32:48.019Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T03:21:38.667Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T03:21:32.039Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T03:21:25.385Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T03:21:14.383Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:45:05.125Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:43:27.013Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:35:07.577Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-14T02:30:27.217Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "de941fa2-3e0f-44ec-a44c-5c51eed07e0d",
                      "latestStatus": "download_error",
                      "lastUpdatedAt": "2023-12-13T02:44:23.790Z",
                      "createdAt": "2023-12-13T02:30:55.992Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Events 1",
                        "Events 2"
                      ],
                      "dateStamps": [
                        "2023-12-11"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-13T02:44:24.865Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:44:12.421Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:41:48.458Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:40:56.694Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:32:35.607Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:30:55.992Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Events 1",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-11",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "source": "Events 2",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-11",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "93b0150f-d53a-416e-876f-bac00634a872",
                      "latestStatus": "pulse_complete",
                      "lastUpdatedAt": "2023-12-13T03:47:23.504Z",
                      "createdAt": "2023-12-13T02:29:32.793Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Metrics 1"
                      ],
                      "dateStamps": [
                        "2023-12-11"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-13T03:47:24.548Z",
                          "status": "pulse_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:41:19.158Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:35:05.780Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:28:52.123Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:22:38.140Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:20:48.982Z",
                          "status": "metrics_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:16:40.079Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:16:31.359Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:16:23.553Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T03:16:08.026Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:42:52.210Z",
                          "status": "download_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:41:01.394Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:33:26.492Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:29:32.793Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Metrics 1",
                          "latestSourceStatus": "pulse_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-11",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-13T03:47:22.812Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:41:17.582Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:20:47.294Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:16:38.421Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:16:29.827Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:16:21.847Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T03:16:05.864Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:42:36.220Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:40:47.890Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:33:24.219Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:29:32.793Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "a4df397e-c816-4e39-9b1a-ab6b2e5f3811",
                      "latestStatus": "download_error",
                      "lastUpdatedAt": "2023-12-12T02:43:29.739Z",
                      "createdAt": "2023-12-12T02:30:41.989Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Events 1",
                        "Events 2"
                      ],
                      "dateStamps": [
                        "2023-12-10"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-12T02:43:30.735Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:43:16.318Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:40:56.030Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:39:58.147Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:32:18.156Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:30:41.989Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Events 1",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-10",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T02:40:54.406Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:39:51.150Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:32:16.419Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:30:41.989Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "source": "Events 2",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-10",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T02:40:54.406Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:39:51.150Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:32:16.419Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:30:41.989Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "eedeb4c0-07dd-43d0-8014-5ac41ef7dab8",
                      "latestStatus": "pulse_complete",
                      "lastUpdatedAt": "2023-12-12T03:50:41.473Z",
                      "createdAt": "2023-12-12T02:29:22.966Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Metrics 1"
                      ],
                      "dateStamps": [
                        "2023-12-10"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-12T03:50:42.631Z",
                          "status": "pulse_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:43:37.286Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:36:24.884Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:29:10.652Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:21:58.355Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:20:04.085Z",
                          "status": "metrics_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:15:24.760Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:15:18.051Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:15:10.427Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T03:14:55.187Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:42:29.345Z",
                          "status": "download_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:40:52.701Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:32:50.650Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-12T02:29:22.966Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Metrics 1",
                          "latestSourceStatus": "pulse_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-07",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T03:29:02.000Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:21:56.433Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-08",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T03:36:14.414Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:29:09.220Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-09",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T03:43:28.767Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:36:23.369Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-10",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T03:50:40.851Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:43:35.832Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:20:02.276Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:23.367Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:16.599Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:15:09.146Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T03:14:52.858Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:42:12.290Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:40:45.773Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:32:48.580Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-12T02:29:22.966Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "93b8b43c-8d52-4c77-bf8b-26426031a937",
                      "latestStatus": "download_error",
                      "lastUpdatedAt": "2023-12-12T05:23:34.419Z",
                      "createdAt": "2023-12-11T02:30:09.748Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Events 1",
                        "Events 2"
                      ],
                      "dateStamps": [
                        "2023-12-09"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-11T02:43:14.831Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:42:59.726Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:40:35.456Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:39:41.755Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:31:30.223Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:30:09.748Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Events 1",
                          "latestSourceStatus": "download_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-09",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T05:23:36.192Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:40:33.565Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:39:34.990Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:31:28.492Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:30:09.748Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "source": "Events 2",
                          "latestSourceStatus": "download_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-09",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-12T05:23:36.193Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:40:33.565Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:39:34.990Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:31:28.492Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:30:09.748Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "runID": "97bbdee6-d77b-42c9-b4f0-d970eee9f983",
                      "latestStatus": "pulse_complete",
                      "lastUpdatedAt": "2023-12-11T10:00:43.391Z",
                      "createdAt": "2023-12-11T02:29:04.866Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Metrics 1"
                      ],
                      "dateStamps": [
                        "2023-12-09"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-11T10:00:44.621Z",
                          "status": "pulse_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:54:39.521Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:47:27.810Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:40:15.586Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:33:02.761Z",
                          "status": "pulse_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:31:14.238Z",
                          "status": "metrics_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:26:37.129Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:26:30.339Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:26:23.246Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T09:26:13.395Z",
                          "status": "metrics_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:51:38.296Z",
                          "status": "download_complete"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:49:59.185Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:42:14.545Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-11T02:29:04.866Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Metrics 1",
                          "latestSourceStatus": "pulse_complete",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-06",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-11T09:40:06.488Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:33:00.819Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:22.624Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-07",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-11T09:47:19.007Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:40:14.371Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-08",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-11T09:54:31.386Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:47:26.424Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                  "status": "metrics_started"
                                }
                              ]
                            },
                            {
                              "dateStamp": "2023-12-09",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-11T10:00:42.867Z",
                                  "status": "pulse_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:54:38.280Z",
                                  "status": "pulse_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:31:12.660Z",
                                  "status": "metrics_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:35.749Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:28.818Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:22.625Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T09:26:11.934Z",
                                  "status": "metrics_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:51:26.328Z",
                                  "status": "download_complete"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:49:52.797Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:42:12.424Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-11T02:29:04.866Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 10,
                    "pageNumber": 1,
                    "nextPage": "/console/v1/ingestion/runs?page=2",
                    "previousPage": null
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/runs/{id}": {
      "get": {
        "summary": "Read Ingestion Run",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Ingestion Run Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionRunDataContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion Run Read Successfully",
                    "data": {
                      "runID": "de941fa2-3e0f-44ec-a44c-5c51eed07e0d",
                      "latestStatus": "download_error",
                      "lastUpdatedAt": "2023-12-13T02:44:23.790Z",
                      "createdAt": "2023-12-13T02:30:55.992Z",
                      "trigger": "scheduled",
                      "sources": [
                        "Events 1",
                        "Events 2"
                      ],
                      "dateStamps": [
                        "2023-12-11"
                      ],
                      "runHistory": [
                        {
                          "statusTimestamp": "2023-12-13T02:44:24.865Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:44:12.421Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:41:48.458Z",
                          "status": "download_error"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:40:56.694Z",
                          "status": "download_started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:32:35.607Z",
                          "status": "started"
                        },
                        {
                          "statusTimestamp": "2023-12-13T02:30:55.992Z",
                          "status": "enqueued"
                        }
                      ],
                      "granularHistory": [
                        {
                          "source": "Events 1",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-11",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "source": "Events 2",
                          "latestSourceStatus": "download_error",
                          "statusByDate": [
                            {
                              "dateStamp": "2023-12-11",
                              "statuses": [
                                {
                                  "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                  "status": "download_error"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                  "status": "download_started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                  "status": "started"
                                },
                                {
                                  "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                  "status": "enqueued"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Ingestion Run Read Successfully",
                  "data": {
                    "runID": "de941fa2-3e0f-44ec-a44c-5c51eed07e0d",
                    "latestStatus": "download_error",
                    "lastUpdatedAt": "2023-12-13T02:44:23.790Z",
                    "createdAt": "2023-12-13T02:30:55.992Z",
                    "trigger": "scheduled",
                    "sources": [
                      "Events 1",
                      "Events 2"
                    ],
                    "dateStamps": [
                      "2023-12-11"
                    ],
                    "runHistory": [
                      {
                        "statusTimestamp": "2023-12-13T02:44:24.865Z",
                        "status": "download_error"
                      },
                      {
                        "statusTimestamp": "2023-12-13T02:44:12.421Z",
                        "status": "download_started"
                      },
                      {
                        "statusTimestamp": "2023-12-13T02:41:48.458Z",
                        "status": "download_error"
                      },
                      {
                        "statusTimestamp": "2023-12-13T02:40:56.694Z",
                        "status": "download_started"
                      },
                      {
                        "statusTimestamp": "2023-12-13T02:32:35.607Z",
                        "status": "started"
                      },
                      {
                        "statusTimestamp": "2023-12-13T02:30:55.992Z",
                        "status": "enqueued"
                      }
                    ],
                    "granularHistory": [
                      {
                        "source": "Events 1",
                        "latestSourceStatus": "download_error",
                        "statusByDate": [
                          {
                            "dateStamp": "2023-12-11",
                            "statuses": [
                              {
                                "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                "status": "download_error"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                "status": "download_started"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                "status": "started"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                "status": "enqueued"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "source": "Events 2",
                        "latestSourceStatus": "download_error",
                        "statusByDate": [
                          {
                            "dateStamp": "2023-12-11",
                            "statuses": [
                              {
                                "statusTimestamp": "2023-12-13T02:41:47.374Z",
                                "status": "download_error"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:40:50.210Z",
                                "status": "download_started"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:32:33.118Z",
                                "status": "started"
                              },
                              {
                                "statusTimestamp": "2023-12-13T02:30:55.992Z",
                                "status": "enqueued"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "runID de941fa2-3e0f-44ec-a44c-5c51eed07e0z not found"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/schedule": {
      "get": {
        "summary": "Read Ingestion Schedule",
        "parameters": [
          {
            "name": "dataset",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Events",
                "Metrics",
                "export_exposures",
                "entity_properties"
              ]
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Ingestion Schedule Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionScheduleDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion schedule read successfully.",
                    "data": {
                      "dataset": "Metrics",
                      "scheduled_hour_pst": 10
                    }
                  }
                },
                "example": {
                  "message": "Ingestion schedule read successfully.",
                  "data": {
                    "dataset": "Metrics",
                    "scheduled_hour_pst": 10
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Ingestion Schedule",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IngestionScheduleUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Ingestion Schedule Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IngestionScheduleDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Ingestion schedule updated successfully.",
                    "data": {
                      "dataset": "Metrics",
                      "scheduled_hour_pst": 10
                    }
                  }
                },
                "example": {
                  "message": "Ingestion schedule updated successfully.",
                  "data": {
                    "dataset": "Metrics",
                    "scheduled_hour_pst": 10
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/ingestion/status": {
      "get": {
        "summary": "List Ingestions Status",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "source",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataset",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Events",
                "Metrics",
                "export_exposures",
                "entity_properties"
              ]
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "IMPORT_SUCCESSFUL",
                "ROWS_INSERTED",
                "LOADED_EMPTY_DATA",
                "IMPORT_SCHEDULED",
                "IMPORT_RESCHEDULED",
                "IMPORT_STARTED",
                "FILE_CREATED",
                "DOWNLOAD_COMPLETED",
                "BACKFILL_REQUESTED",
                "CONNECTION_CONFIG_ERROR",
                "SSH_ERROR",
                "QUERY_CONSTRUCTION_ERROR",
                "INTERNAL_WRITE_ERROR_METRICS",
                "INTERNAL_WRITE_ERROR_EVENTS",
                "INTERNAL_WRITE_ERROR_EXPOSURES",
                "QUERY_ERROR",
                "SETUP_ERROR",
                "AUTHENTICATION_ERROR",
                "CONNECTION_ERROR",
                "BULK_LOAD_ERROR",
                "BULK_LOAD_SUCCESSFUL",
                "%Other"
              ]
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "IMPORT_SUCCESSFUL",
                  "ROWS_INSERTED",
                  "LOADED_EMPTY_DATA",
                  "IMPORT_SCHEDULED",
                  "IMPORT_RESCHEDULED",
                  "IMPORT_STARTED",
                  "FILE_CREATED",
                  "DOWNLOAD_COMPLETED",
                  "BACKFILL_REQUESTED",
                  "CONNECTION_CONFIG_ERROR",
                  "SSH_ERROR",
                  "QUERY_CONSTRUCTION_ERROR",
                  "INTERNAL_WRITE_ERROR_METRICS",
                  "INTERNAL_WRITE_ERROR_EVENTS",
                  "INTERNAL_WRITE_ERROR_EXPOSURES",
                  "QUERY_ERROR",
                  "SETUP_ERROR",
                  "AUTHENTICATION_ERROR",
                  "CONNECTION_ERROR",
                  "BULK_LOAD_ERROR",
                  "BULK_LOAD_SUCCESSFUL",
                  "%Other"
                ]
              }
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Ingestions Status Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/IngestionStatusDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": [
                    {
                      "message": "Your job for events ingestion completed successfully",
                      "timestamp": "2023-09-07T00:50:07.941Z",
                      "ingestion_dataset": "events",
                      "ingestion_source": null,
                      "status": "BACKFILL_STARTED"
                    }
                  ]
                },
                "example": [
                  {
                    "message": "Your job for events ingestion completed successfully",
                    "timestamp": "2023-09-07T00:50:07.941Z",
                    "ingestion_dataset": "events",
                    "ingestion_source": null,
                    "status": "BACKFILL_STARTED"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Ingestions"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/keys": {
      "get": {
        "summary": "List Keys",
        "parameters": [
          {
            "name": "primaryTargetApp",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Keys listed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/KeyDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Keys listed successfully.",
                    "data": [
                      {
                        "key": "secret-123",
                        "type": "SERVER",
                        "description": "Server secret key",
                        "scopes": [],
                        "environments": [
                          "production"
                        ],
                        "primaryTargetApp": "primaryApp",
                        "secondaryTargetApps": [
                          "secondaryApp"
                        ],
                        "status": "active"
                      },
                      {
                        "key": "console-123",
                        "type": "CONSOLE",
                        "description": "Console API key",
                        "scopes": [
                          "omni_read_write",
                          "can_access_keys"
                        ],
                        "status": "active"
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Keys listed successfully.",
                  "data": [
                    {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    },
                    {
                      "key": "console-123",
                      "type": "CONSOLE",
                      "description": "Console API key",
                      "scopes": [
                        "omni_read_write",
                        "can_access_keys"
                      ],
                      "status": "active"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Key",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyCreateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/KeyDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Key created successfully.",
                    "data": {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    }
                  }
                },
                "example": {
                  "message": "Key created successfully.",
                  "data": {
                    "key": "secret-123",
                    "type": "SERVER",
                    "description": "Server secret key",
                    "scopes": [],
                    "environments": [
                      "production"
                    ],
                    "primaryTargetApp": "primaryApp",
                    "secondaryTargetApps": [
                      "secondaryApp"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/keys/{id}": {
      "get": {
        "summary": "Read Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/KeyDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Key read successfully.",
                    "data": {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    }
                  }
                },
                "example": {
                  "message": "Key read successfully.",
                  "data": {
                    "key": "secret-123",
                    "type": "SERVER",
                    "description": "Server secret key",
                    "scopes": [],
                    "environments": [
                      "production"
                    ],
                    "primaryTargetApp": "primaryApp",
                    "secondaryTargetApps": [
                      "secondaryApp"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Key updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/KeyDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Key updated successfully.",
                    "data": {
                      "environments": [
                        "staging"
                      ],
                      "targetAppID": "primaryApp",
                      "secondaryTargetAppIDs": null
                    }
                  }
                },
                "example": {
                  "message": "Key updated successfully.",
                  "data": {
                    "environments": [
                      "staging"
                    ],
                    "targetAppID": "primaryApp",
                    "secondaryTargetAppIDs": null
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Key deleted successfully.",
                    "data": {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    }
                  }
                },
                "example": {
                  "message": "Key deleted successfully.",
                  "data": {
                    "key": "secret-123",
                    "type": "SERVER",
                    "description": "Server secret key",
                    "scopes": [],
                    "environments": [
                      "production"
                    ],
                    "primaryTargetApp": "primaryApp",
                    "secondaryTargetApps": [
                      "secondaryApp"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/keys/{id}/deactivate": {
      "patch": {
        "summary": "Deactivate Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Key deactivated successfully.",
                    "data": {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    }
                  }
                },
                "example": {
                  "message": "Key deactivated successfully.",
                  "data": {
                    "key": "secret-123",
                    "type": "SERVER",
                    "description": "Server secret key",
                    "scopes": [],
                    "environments": [
                      "production"
                    ],
                    "primaryTargetApp": "primaryApp",
                    "secondaryTargetApps": [
                      "secondaryApp"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/keys/{id}/rotate": {
      "patch": {
        "summary": "Rotate Key",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Key rotated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/KeyDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Key rotated successfully,",
                    "data": {
                      "key": "secret-123",
                      "type": "SERVER",
                      "description": "Server secret key",
                      "scopes": [],
                      "environments": [
                        "production"
                      ],
                      "primaryTargetApp": "primaryApp",
                      "secondaryTargetApps": [
                        "secondaryApp"
                      ],
                      "status": "active"
                    }
                  }
                },
                "example": {
                  "message": "Key rotated successfully,",
                  "data": {
                    "key": "secret-123",
                    "type": "SERVER",
                    "description": "Server secret key",
                    "scopes": [],
                    "environments": [
                      "production"
                    ],
                    "primaryTargetApp": "primaryApp",
                    "secondaryTargetApps": [
                      "secondaryApp"
                    ],
                    "status": "active"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Key not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Keys"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/layers": {
      "get": {
        "summary": "Get Layers",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Layers response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/LayerContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Layers listed successfully.",
                    "data": [
                      {
                        "id": "statsig::product_logo_icon_shapes_multi_group_layer",
                        "description": "",
                        "idType": "userID",
                        "lastModifierID": "5sgBiiuoBX4fscrWdCXVma",
                        "lastModifiedTime": 1677893118949,
                        "lastModifierName": "Test User",
                        "lastModifierEmail": "test@statsig.com",
                        "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                        "createdTime": 1677893118889,
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "team": null,
                        "isImplicitLayer": true,
                        "parameters": []
                      },
                      {
                        "id": "Homepage Feed Improvements",
                        "description": "test description",
                        "idType": "userID",
                        "lastModifierID": "5sgBiiuoBX4fscrWdCXVma",
                        "lastModifiedTime": 1702925736079,
                        "lastModifierName": "Test User",
                        "lastModifierEmail": "test@statsig.com",
                        "creatorID": "6Q78Ih2m3FnOoECDsvzoms",
                        "createdTime": 1678122232525,
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [
                          "global_holdout",
                          "test_target_gate"
                        ],
                        "tags": [],
                        "team": null,
                        "isImplicitLayer": false,
                        "parameters": [
                          {
                            "name": "ranking_model",
                            "type": "string",
                            "defaultValue": "4v2"
                          },
                          {
                            "name": "test",
                            "type": "string",
                            "defaultValue": "randomtextfdafs"
                          },
                          {
                            "name": "newparam",
                            "type": "string",
                            "defaultValue": ""
                          },
                          {
                            "name": "test!!!",
                            "type": "string",
                            "defaultValue": ""
                          },
                          {
                            "name": "test_object",
                            "type": "object",
                            "defaultValue": {
                              "test": "hello"
                            }
                          }
                        ]
                      },
                      {
                        "id": "statsig::mostly_test_experiment_layer",
                        "description": "",
                        "idType": "userID",
                        "lastModifierID": "6Q78Ih2m3FnOoECDsvzoms",
                        "lastModifiedTime": 1678401652668,
                        "lastModifierName": "Test User",
                        "lastModifierEmail": "test@statsig.com",
                        "creatorID": "6Q78Ih2m3FnOoECDsvzoms",
                        "createdTime": 1678401652627,
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "targetApps": [],
                        "holdoutIDs": [],
                        "tags": [],
                        "team": null,
                        "isImplicitLayer": true,
                        "parameters": []
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 3,
                      "pageNumber": 1,
                      "totalItems": 1189,
                      "nextPage": "/console/v1/layers?page=2&limit=3",
                      "previousPage": null,
                      "all": "/console/v1/layers"
                    }
                  }
                },
                "example": {
                  "message": "Layers listed successfully.",
                  "data": [
                    {
                      "id": "statsig::product_logo_icon_shapes_multi_group_layer",
                      "description": "",
                      "idType": "userID",
                      "lastModifierID": "5sgBiiuoBX4fscrWdCXVma",
                      "lastModifiedTime": 1677893118949,
                      "lastModifierName": "Test User",
                      "lastModifierEmail": "test@statsig.com",
                      "creatorID": "5sgBiiuoBX4fscrWdCXVma",
                      "createdTime": 1677893118889,
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "team": null,
                      "isImplicitLayer": true,
                      "parameters": []
                    },
                    {
                      "id": "Homepage Feed Improvements",
                      "description": "test description",
                      "idType": "userID",
                      "lastModifierID": "5sgBiiuoBX4fscrWdCXVma",
                      "lastModifiedTime": 1702925736079,
                      "lastModifierName": "Test User",
                      "lastModifierEmail": "test@statsig.com",
                      "creatorID": "6Q78Ih2m3FnOoECDsvzoms",
                      "createdTime": 1678122232525,
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [
                        "global_holdout",
                        "test_target_gate"
                      ],
                      "tags": [],
                      "team": null,
                      "isImplicitLayer": false,
                      "parameters": [
                        {
                          "name": "ranking_model",
                          "type": "string",
                          "defaultValue": "4v2"
                        },
                        {
                          "name": "test",
                          "type": "string",
                          "defaultValue": "randomtextfdafs"
                        },
                        {
                          "name": "newparam",
                          "type": "string",
                          "defaultValue": ""
                        },
                        {
                          "name": "test!!!",
                          "type": "string",
                          "defaultValue": ""
                        },
                        {
                          "name": "test_object",
                          "type": "object",
                          "defaultValue": {
                            "test": "hello"
                          }
                        }
                      ]
                    },
                    {
                      "id": "statsig::mostly_test_experiment_layer",
                      "description": "",
                      "idType": "userID",
                      "lastModifierID": "6Q78Ih2m3FnOoECDsvzoms",
                      "lastModifiedTime": 1678401652668,
                      "lastModifierName": "Test User",
                      "lastModifierEmail": "test@statsig.com",
                      "creatorID": "6Q78Ih2m3FnOoECDsvzoms",
                      "createdTime": 1678401652627,
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "targetApps": [],
                      "holdoutIDs": [],
                      "tags": [],
                      "team": null,
                      "isImplicitLayer": true,
                      "parameters": []
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 3,
                    "pageNumber": 1,
                    "totalItems": 1189,
                    "nextPage": "/console/v1/layers?page=2&limit=3",
                    "previousPage": null,
                    "all": "/console/v1/layers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create a Layer",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayerCreateContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Layer Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Layer created successfully.",
                    "data": {
                      "id": "the_best_layer",
                      "description": "helpful summary of what this layer does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1720733945538,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1720733942515,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [
                        "Android"
                      ],
                      "holdoutIDs": [
                        "global_holdout",
                        "test_holdout"
                      ],
                      "tags": [],
                      "team": "Console Team",
                      "isImplicitLayer": false,
                      "parameters": []
                    }
                  }
                },
                "example": {
                  "message": "Layer created successfully.",
                  "data": {
                    "id": "the_best_layer",
                    "description": "helpful summary of what this layer does",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1720733945538,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1720733942515,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [
                      "Android"
                    ],
                    "holdoutIDs": [
                      "global_holdout",
                      "test_holdout"
                    ],
                    "tags": [],
                    "team": "Console Team",
                    "isImplicitLayer": false,
                    "parameters": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/layers/{id}": {
      "get": {
        "summary": "Get one layer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one layer response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Layer read successfully.",
                    "data": {
                      "id": "the_best_layer",
                      "description": "helpful summary of what this layer does",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1720733945538,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1720733942515,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [
                        "Android"
                      ],
                      "holdoutIDs": [
                        "global_holdout",
                        "test_holdout"
                      ],
                      "tags": [],
                      "team": "Console Team",
                      "isImplicitLayer": false,
                      "parameters": []
                    }
                  }
                },
                "example": {
                  "message": "Layer read successfully.",
                  "data": {
                    "id": "the_best_layer",
                    "description": "helpful summary of what this layer does",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1720733945538,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1720733942515,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [
                      "Android"
                    ],
                    "holdoutIDs": [
                      "global_holdout",
                      "test_holdout"
                    ],
                    "tags": [],
                    "team": "Console Team",
                    "isImplicitLayer": false,
                    "parameters": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update a layer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayerFullUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update layer response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Layer updated successfully.",
                    "data": {
                      "id": "the_best_layer",
                      "description": "new description",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1720734957520,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1720733942515,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [
                        "Android"
                      ],
                      "holdoutIDs": [
                        "global_holdout",
                        "test_holdout"
                      ],
                      "tags": [],
                      "team": "Console Team",
                      "isImplicitLayer": false,
                      "parameters": [
                        {
                          "name": "a_parameter",
                          "type": "boolean",
                          "defaultValue": true
                        },
                        {
                          "name": "b_parameter",
                          "type": "number",
                          "defaultValue": 123
                        },
                        {
                          "name": "c_parameter",
                          "type": "string",
                          "defaultValue": "this is a string"
                        },
                        {
                          "name": "d_parameter",
                          "type": "array",
                          "defaultValue": []
                        },
                        {
                          "name": "e_parameter",
                          "type": "object",
                          "defaultValue": {
                            "key": "value"
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Layer updated successfully.",
                  "data": {
                    "id": "the_best_layer",
                    "description": "new description",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1720734957520,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1720733942515,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [
                      "Android"
                    ],
                    "holdoutIDs": [
                      "global_holdout",
                      "test_holdout"
                    ],
                    "tags": [],
                    "team": "Console Team",
                    "isImplicitLayer": false,
                    "parameters": [
                      {
                        "name": "a_parameter",
                        "type": "boolean",
                        "defaultValue": true
                      },
                      {
                        "name": "b_parameter",
                        "type": "number",
                        "defaultValue": 123
                      },
                      {
                        "name": "c_parameter",
                        "type": "string",
                        "defaultValue": "this is a string"
                      },
                      {
                        "name": "d_parameter",
                        "type": "array",
                        "defaultValue": []
                      },
                      {
                        "name": "e_parameter",
                        "type": "object",
                        "defaultValue": {
                          "key": "value"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Partially update a layer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayerPartialUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Partial update layer response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Layer updated successfully.",
                    "data": {
                      "id": "the_best_layer",
                      "description": "new description",
                      "idType": "userID",
                      "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                      "lastModifiedTime": 1720734756985,
                      "lastModifierName": "CONSOLE API",
                      "lastModifierEmail": null,
                      "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                      "createdTime": 1720733942515,
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "targetApps": [
                        "new fo"
                      ],
                      "holdoutIDs": [
                        "global_holdout",
                        "test_holdout"
                      ],
                      "tags": [],
                      "team": "Console Team",
                      "isImplicitLayer": false,
                      "parameters": [
                        {
                          "name": "a_parameter",
                          "type": "boolean",
                          "defaultValue": true
                        },
                        {
                          "name": "b_parameter",
                          "type": "number",
                          "defaultValue": 123
                        },
                        {
                          "name": "c_parameter",
                          "type": "string",
                          "defaultValue": "this is a string"
                        },
                        {
                          "name": "d_parameter",
                          "type": "array",
                          "defaultValue": []
                        },
                        {
                          "name": "e_parameter",
                          "type": "object",
                          "defaultValue": {
                            "key": "value"
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Layer updated successfully.",
                  "data": {
                    "id": "the_best_layer",
                    "description": "new description",
                    "idType": "userID",
                    "lastModifierID": "4dcQUIpS8PHObBGD7HJwOx",
                    "lastModifiedTime": 1720734756985,
                    "lastModifierName": "CONSOLE API",
                    "lastModifierEmail": null,
                    "creatorID": "4dcQUIpS8PHObBGD7HJwOx",
                    "createdTime": 1720733942515,
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "targetApps": [
                      "new fo"
                    ],
                    "holdoutIDs": [
                      "global_holdout",
                      "test_holdout"
                    ],
                    "tags": [],
                    "team": "Console Team",
                    "isImplicitLayer": false,
                    "parameters": [
                      {
                        "name": "a_parameter",
                        "type": "boolean",
                        "defaultValue": true
                      },
                      {
                        "name": "b_parameter",
                        "type": "number",
                        "defaultValue": 123
                      },
                      {
                        "name": "c_parameter",
                        "type": "string",
                        "defaultValue": "this is a string"
                      },
                      {
                        "name": "d_parameter",
                        "type": "array",
                        "defaultValue": []
                      },
                      {
                        "name": "e_parameter",
                        "type": "object",
                        "defaultValue": {
                          "key": "value"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a layer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete layer repsonse",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Layer deleted successfully."
                  }
                },
                "example": {
                  "message": "Layer deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/layers/{id}/experiments": {
      "get": {
        "summary": "Lineage: List Experiment related to Layer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Experiment related to Layer Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalExperimentDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Layers"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/layers/{id}/overrides": {
      "get": {
        "summary": "Get Layer Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Layer Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerOverridesDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Layer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Layer Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayerOverridesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Layer Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerOverridesDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Layer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Add Layer Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LayerOverridesPatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Add Layer Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerOverridesDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Layer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Layer Overrides",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Update Layer Overrides Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LayerOverridesDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Layer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Layers"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics": {
      "get": {
        "summary": "Read Single Metric Value",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "description": "The unique identifier of the metric with format <metric_id>::<type>",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get metric data on given date response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MetricValuesDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric read successfully.",
                    "data": [
                      {
                        "value": 0,
                        "unit_type": "overall",
                        "numerator": null,
                        "denominator": null,
                        "metric_name": "TestMetricCapi",
                        "metric_type": "sum"
                      },
                      {
                        "value": 0,
                        "unit_type": "userID",
                        "numerator": null,
                        "denominator": null,
                        "metric_name": "TestMetricCapi",
                        "metric_type": "sum"
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Metric read successfully.",
                  "data": [
                    {
                      "value": 0,
                      "unit_type": "overall",
                      "numerator": null,
                      "denominator": null,
                      "metric_name": "TestMetricCapi",
                      "metric_type": "sum"
                    },
                    {
                      "value": 0,
                      "unit_type": "userID",
                      "numerator": null,
                      "denominator": null,
                      "metric_name": "TestMetricCapi",
                      "metric_type": "sum"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Metric",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricCreationContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create metric response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric created successfully.",
                    "data": {
                      "id": "TestMetricCapi::sum",
                      "name": "TestMetricCapi",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "Capi Metric",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "createdTime": 1720218271796,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "Console Team",
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "metadata",
                          "criteria": []
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Metric created successfully.",
                  "data": {
                    "id": "TestMetricCapi::sum",
                    "name": "TestMetricCapi",
                    "directionality": "increase",
                    "type": "sum",
                    "description": "Capi Metric",
                    "isPermanent": false,
                    "isReadOnly": false,
                    "isHidden": false,
                    "isVerified": false,
                    "tags": [],
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "createdTime": 1720218271796,
                    "owner": {
                      "name": "John Doe",
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "lineage": {
                      "events": [
                        "add_to_cart"
                      ],
                      "metrics": []
                    },
                    "team": "Console Team",
                    "unitTypes": [
                      "userID"
                    ],
                    "metricEvents": [
                      {
                        "name": "add_to_cart",
                        "type": "metadata",
                        "criteria": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}": {
      "get": {
        "summary": "Read Metric Definition",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Metric Definition response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric read successfully.",
                    "data": {
                      "id": "TestMetricCapi::sum",
                      "name": "TestMetricCapi",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "Capi Metric",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "createdTime": 1720218271796,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "Console Team",
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "metadata",
                          "criteria": []
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Metric read successfully.",
                  "data": {
                    "id": "TestMetricCapi::sum",
                    "name": "TestMetricCapi",
                    "directionality": "increase",
                    "type": "sum",
                    "description": "Capi Metric",
                    "isPermanent": false,
                    "isReadOnly": false,
                    "isHidden": false,
                    "isVerified": false,
                    "tags": [],
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "createdTime": 1720218271796,
                    "owner": {
                      "name": "John Doe",
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "lineage": {
                      "events": [
                        "add_to_cart"
                      ],
                      "metrics": []
                    },
                    "team": "Console Team",
                    "unitTypes": [
                      "userID"
                    ],
                    "metricEvents": [
                      {
                        "name": "add_to_cart",
                        "type": "metadata",
                        "criteria": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update a metric",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricsUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update metric response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric updated successfully.",
                    "data": {
                      "id": "TestMetricCapi::sum",
                      "name": "TestMetricCapi",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "new description",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "createdTime": 1720218271796,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "Console Team",
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "value",
                          "criteria": []
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Metric updated successfully.",
                  "data": {
                    "id": "TestMetricCapi::sum",
                    "name": "TestMetricCapi",
                    "directionality": "increase",
                    "type": "sum",
                    "description": "new description",
                    "isPermanent": false,
                    "isReadOnly": false,
                    "isHidden": false,
                    "isVerified": false,
                    "tags": [],
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "createdTime": 1720218271796,
                    "owner": {
                      "name": "John Doe",
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "lineage": {
                      "events": [
                        "add_to_cart"
                      ],
                      "metrics": []
                    },
                    "team": "Console Team",
                    "unitTypes": [
                      "userID"
                    ],
                    "metricEvents": [
                      {
                        "name": "add_to_cart",
                        "type": "value",
                        "criteria": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a metric",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete metric response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric deleted successfully."
                  }
                },
                "example": {
                  "message": "Metric deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}/cancel_archive": {
      "put": {
        "summary": "Cancel archive a metric",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cancel archive metric response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric archival cancelled successfully."
                  }
                },
                "example": {
                  "message": "Metric archival cancelled successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}/experiments": {
      "get": {
        "summary": "Lineage: List experiments related to Metric",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "layerID",
            "required": false,
            "in": "query",
            "description": "Which layer to place the experiment into.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "idType",
            "required": false,
            "in": "query",
            "description": "The idType the experiment will be performed on",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "teamID",
            "required": false,
            "in": "query",
            "description": "The team ID associated with the experiment, Enterprise only.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "The current status of the experiment",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "active",
                    "setup",
                    "decision_made",
                    "abandoned",
                    "archived",
                    "experiment_stopped",
                    "assignment_stopped"
                  ]
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "active",
                      "setup",
                      "decision_made",
                      "abandoned",
                      "archived",
                      "experiment_stopped",
                      "assignment_stopped"
                    ]
                  }
                }
              ]
            }
          },
          {
            "name": "targetAppID",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdStartDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "createdEndDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "creatorName",
            "required": false,
            "in": "query",
            "description": "Name of the creator.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "creatorID",
            "required": false,
            "in": "query",
            "description": "ID of the user who created the entity.",
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter by tags",
            "examples": {
              "single tag": {
                "value": "tag1"
              },
              "multiple tags": {
                "value": [
                  "tag1",
                  "tag2"
                ]
              }
            },
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List experiments using metric response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalExperimentDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metrics listed successfully.",
                    "data": [
                      {
                        "id": "    ::sum",
                        "name": "    ",
                        "directionality": "increase",
                        "type": "sum",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709580516933,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": "test",
                        "unitTypes": [
                          "room_id"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "type": "value",
                            "criteria": []
                          }
                        ]
                      },
                      {
                        "id": "      ::ratio",
                        "name": "      ",
                        "directionality": "increase",
                        "type": "ratio",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709580027061,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart",
                            "."
                          ],
                          "metrics": []
                        },
                        "team": "test",
                        "unitTypes": [
                          "namespace_id"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "type": "count",
                            "criteria": []
                          },
                          {
                            "name": ".",
                            "type": "count",
                            "criteria": []
                          }
                        ]
                      },
                      {
                        "id": "[LOCAL] Time Spent over 500ms::event_count_custom",
                        "name": "[LOCAL] Time Spent over 500ms",
                        "directionality": "increase",
                        "type": "event_count_custom",
                        "description": "Creating my first Local Metric! How exciting!! ",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "★ Core",
                          "dashboard_test",
                          "test_owner_4"
                        ],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709594132514,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "time_spent_on_page"
                          ],
                          "metrics": []
                        },
                        "team": null,
                        "unitTypes": [
                          "userID"
                        ],
                        "metricEvents": [
                          {
                            "name": "time_spent_on_page",
                            "criteria": [
                              {
                                "type": "value",
                                "column": "!statsig_value",
                                "condition": ">",
                                "values": [
                                  "500"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": "___RENAME_FAILED___::composite_sum",
                        "name": "rename_test_success",
                        "directionality": "increase",
                        "type": "composite_sum",
                        "description": "This metric will be renamed from something aggressive and capital, to \"rename_test_success\", to help determine where metric renaming worked",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "dashboard_test"
                        ],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1704923273872,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [],
                          "metrics": [
                            "add_to_cart_games::event_count_custom",
                            "Appliance Purchases::event_count_custom",
                            "test-test::event_count_custom"
                          ]
                        },
                        "team": null,
                        "unitTypes": [
                          "userID",
                          "stableID",
                          "room_id",
                          "server_id"
                        ],
                        "metricEvents": [],
                        "metricComponentMetrics": [
                          {
                            "name": "add_to_cart_games",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "Appliance Purchases",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "Test User",
                            "type": "event_count_custom"
                          }
                        ]
                      },
                      {
                        "id": "A metric for testing teams::event_count_custom",
                        "name": "A metric for testing teams",
                        "directionality": "increase",
                        "type": "event_count_custom",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1706640947812,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": null,
                        "unitTypes": [
                          "userID"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "criteria": [
                              {
                                "type": "value",
                                "column": "",
                                "condition": "in",
                                "values": [
                                  "sports"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 5,
                      "pageNumber": 1,
                      "totalItems": 2699,
                      "nextPage": "/console/v1/metrics/list?page=2&limit=5",
                      "previousPage": null,
                      "all": "/console/v1/metrics/list"
                    }
                  }
                },
                "example": {
                  "message": "Metrics listed successfully.",
                  "data": [
                    {
                      "id": "    ::sum",
                      "name": "    ",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709580516933,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "test",
                      "unitTypes": [
                        "room_id"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "value",
                          "criteria": []
                        }
                      ]
                    },
                    {
                      "id": "      ::ratio",
                      "name": "      ",
                      "directionality": "increase",
                      "type": "ratio",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709580027061,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart",
                          "."
                        ],
                        "metrics": []
                      },
                      "team": "test",
                      "unitTypes": [
                        "namespace_id"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "count",
                          "criteria": []
                        },
                        {
                          "name": ".",
                          "type": "count",
                          "criteria": []
                        }
                      ]
                    },
                    {
                      "id": "[LOCAL] Time Spent over 500ms::event_count_custom",
                      "name": "[LOCAL] Time Spent over 500ms",
                      "directionality": "increase",
                      "type": "event_count_custom",
                      "description": "Creating my first Local Metric! How exciting!! ",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "★ Core",
                        "dashboard_test",
                        "test_owner_4"
                      ],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709594132514,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "time_spent_on_page"
                        ],
                        "metrics": []
                      },
                      "team": null,
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "time_spent_on_page",
                          "criteria": [
                            {
                              "type": "value",
                              "column": "!statsig_value",
                              "condition": ">",
                              "values": [
                                "500"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "___RENAME_FAILED___::composite_sum",
                      "name": "rename_test_success",
                      "directionality": "increase",
                      "type": "composite_sum",
                      "description": "This metric will be renamed from something aggressive and capital, to \"rename_test_success\", to help determine where metric renaming worked",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "dashboard_test"
                      ],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1704923273872,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [],
                        "metrics": [
                          "add_to_cart_games::event_count_custom",
                          "Appliance Purchases::event_count_custom",
                          "test-test::event_count_custom"
                        ]
                      },
                      "team": null,
                      "unitTypes": [
                        "userID",
                        "stableID",
                        "room_id",
                        "server_id"
                      ],
                      "metricEvents": [],
                      "metricComponentMetrics": [
                        {
                          "name": "add_to_cart_games",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "Appliance Purchases",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "Test User",
                          "type": "event_count_custom"
                        }
                      ]
                    },
                    {
                      "id": "A metric for testing teams::event_count_custom",
                      "name": "A metric for testing teams",
                      "directionality": "increase",
                      "type": "event_count_custom",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1706640947812,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": null,
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "criteria": [
                            {
                              "type": "value",
                              "column": "",
                              "condition": "in",
                              "values": [
                                "sports"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 5,
                    "pageNumber": 1,
                    "totalItems": 2699,
                    "nextPage": "/console/v1/metrics/list?page=2&limit=5",
                    "previousPage": null,
                    "all": "/console/v1/metrics/list"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}/reload": {
      "post": {
        "summary": "Reload metric data",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "incremental",
            "required": false,
            "in": "query",
            "description": "Incremental reload of the metric",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reload metric data response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric data reloaded successfully."
                  }
                },
                "example": {
                  "message": "Metric data reloaded successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}/schedule_archive": {
      "put": {
        "summary": "Schedule a metric archive",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule a metric archive",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric archive scheduled successfully for next day."
                  }
                },
                "example": {
                  "message": "Metric archive scheduled successfully for next day."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{id}/unarchive": {
      "put": {
        "summary": "Unarchive a metric",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unarchive metric response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric unarchived successfully."
                  }
                },
                "example": {
                  "message": "Metric unarchived successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/{name}/{type}": {
      "get": {
        "summary": "Read Metric Definition by Name",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Metric Definition by name response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric read successfully.",
                    "data": {
                      "id": "TestMetricCapi::sum",
                      "name": "TestMetricCapi",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "Capi Metric",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "CONSOLE API",
                      "creatorEmail": null,
                      "createdTime": 1720218271796,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "Console Team",
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "metadata",
                          "criteria": []
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Metric read successfully.",
                  "data": {
                    "id": "TestMetricCapi::sum",
                    "name": "TestMetricCapi",
                    "directionality": "increase",
                    "type": "sum",
                    "description": "Capi Metric",
                    "isPermanent": false,
                    "isReadOnly": false,
                    "isHidden": false,
                    "isVerified": false,
                    "tags": [],
                    "creatorName": "CONSOLE API",
                    "creatorEmail": null,
                    "createdTime": 1720218271796,
                    "owner": {
                      "name": "John Doe",
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "lineage": {
                      "events": [
                        "add_to_cart"
                      ],
                      "metrics": []
                    },
                    "team": "Console Team",
                    "unitTypes": [
                      "userID"
                    ],
                    "metricEvents": [
                      {
                        "name": "add_to_cart",
                        "type": "metadata",
                        "criteria": []
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/list": {
      "get": {
        "summary": "List all Metrics",
        "parameters": [
          {
            "name": "showHiddenMetrics",
            "required": false,
            "in": "query",
            "description": "Should hidden metrics be returned: Allowed values are \"true\" or \"false\".",
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          },
          {
            "name": "tags",
            "required": false,
            "in": "query",
            "description": "Filter metrics based on a given tagID, found on /tags endpoint. Can be a single string or an array of strings.",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "description": "Additional filters for metrics. Can be a string or an object with tags filter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all metrics in the project response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metrics listed successfully.",
                    "data": [
                      {
                        "id": "    ::sum",
                        "name": "    ",
                        "directionality": "increase",
                        "type": "sum",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709580516933,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": "test",
                        "unitTypes": [
                          "room_id"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "type": "value",
                            "criteria": []
                          }
                        ]
                      },
                      {
                        "id": "      ::ratio",
                        "name": "      ",
                        "directionality": "increase",
                        "type": "ratio",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709580027061,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart",
                            "."
                          ],
                          "metrics": []
                        },
                        "team": "test",
                        "unitTypes": [
                          "namespace_id"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "type": "count",
                            "criteria": []
                          },
                          {
                            "name": ".",
                            "type": "count",
                            "criteria": []
                          }
                        ]
                      },
                      {
                        "id": "[LOCAL] Time Spent over 500ms::event_count_custom",
                        "name": "[LOCAL] Time Spent over 500ms",
                        "directionality": "increase",
                        "type": "event_count_custom",
                        "description": "Creating my first Local Metric! How exciting!! ",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "★ Core",
                          "dashboard_test",
                          "test_owner_4"
                        ],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1709594132514,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "time_spent_on_page"
                          ],
                          "metrics": []
                        },
                        "team": null,
                        "unitTypes": [
                          "userID"
                        ],
                        "metricEvents": [
                          {
                            "name": "time_spent_on_page",
                            "criteria": [
                              {
                                "type": "value",
                                "column": "!statsig_value",
                                "condition": ">",
                                "values": [
                                  "500"
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": "___RENAME_FAILED___::composite_sum",
                        "name": "rename_test_success",
                        "directionality": "increase",
                        "type": "composite_sum",
                        "description": "This metric will be renamed from something aggressive and capital, to \"rename_test_success\", to help determine where metric renaming worked",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [
                          "dashboard_test"
                        ],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1704923273872,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [],
                          "metrics": [
                            "add_to_cart_games::event_count_custom",
                            "Appliance Purchases::event_count_custom",
                            "test-test::event_count_custom"
                          ]
                        },
                        "team": null,
                        "unitTypes": [
                          "userID",
                          "stableID",
                          "room_id",
                          "server_id"
                        ],
                        "metricEvents": [],
                        "metricComponentMetrics": [
                          {
                            "name": "add_to_cart_games",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "Appliance Purchases",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "Test User",
                            "type": "event_count_custom"
                          }
                        ]
                      },
                      {
                        "id": "A metric for testing teams::event_count_custom",
                        "name": "A metric for testing teams",
                        "directionality": "increase",
                        "type": "event_count_custom",
                        "description": "",
                        "isPermanent": false,
                        "isReadOnly": false,
                        "isHidden": false,
                        "isVerified": false,
                        "tags": [],
                        "creatorName": "Test User",
                        "creatorEmail": "test@statsig.com",
                        "createdTime": 1706640947812,
                        "owner": {
                          "name": "John Doe",
                          "ownerID": "user123",
                          "ownerType": "USER",
                          "ownerName": "John Doe",
                          "ownerEmail": "owner123@test.com"
                        },
                        "lineage": {
                          "events": [
                            "add_to_cart"
                          ],
                          "metrics": []
                        },
                        "team": null,
                        "unitTypes": [
                          "userID"
                        ],
                        "metricEvents": [
                          {
                            "name": "add_to_cart",
                            "criteria": [
                              {
                                "type": "value",
                                "column": "",
                                "condition": "in",
                                "values": [
                                  "sports"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 5,
                      "pageNumber": 1,
                      "totalItems": 2699,
                      "nextPage": "/console/v1/metrics/list?page=2&limit=5",
                      "previousPage": null,
                      "all": "/console/v1/metrics/list"
                    }
                  }
                },
                "example": {
                  "message": "Metrics listed successfully.",
                  "data": [
                    {
                      "id": "    ::sum",
                      "name": "    ",
                      "directionality": "increase",
                      "type": "sum",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709580516933,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": "test",
                      "unitTypes": [
                        "room_id"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "value",
                          "criteria": []
                        }
                      ]
                    },
                    {
                      "id": "      ::ratio",
                      "name": "      ",
                      "directionality": "increase",
                      "type": "ratio",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709580027061,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart",
                          "."
                        ],
                        "metrics": []
                      },
                      "team": "test",
                      "unitTypes": [
                        "namespace_id"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "type": "count",
                          "criteria": []
                        },
                        {
                          "name": ".",
                          "type": "count",
                          "criteria": []
                        }
                      ]
                    },
                    {
                      "id": "[LOCAL] Time Spent over 500ms::event_count_custom",
                      "name": "[LOCAL] Time Spent over 500ms",
                      "directionality": "increase",
                      "type": "event_count_custom",
                      "description": "Creating my first Local Metric! How exciting!! ",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "★ Core",
                        "dashboard_test",
                        "test_owner_4"
                      ],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1709594132514,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "time_spent_on_page"
                        ],
                        "metrics": []
                      },
                      "team": null,
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "time_spent_on_page",
                          "criteria": [
                            {
                              "type": "value",
                              "column": "!statsig_value",
                              "condition": ">",
                              "values": [
                                "500"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "___RENAME_FAILED___::composite_sum",
                      "name": "rename_test_success",
                      "directionality": "increase",
                      "type": "composite_sum",
                      "description": "This metric will be renamed from something aggressive and capital, to \"rename_test_success\", to help determine where metric renaming worked",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [
                        "dashboard_test"
                      ],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1704923273872,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [],
                        "metrics": [
                          "add_to_cart_games::event_count_custom",
                          "Appliance Purchases::event_count_custom",
                          "test-test::event_count_custom"
                        ]
                      },
                      "team": null,
                      "unitTypes": [
                        "userID",
                        "stableID",
                        "room_id",
                        "server_id"
                      ],
                      "metricEvents": [],
                      "metricComponentMetrics": [
                        {
                          "name": "add_to_cart_games",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "Appliance Purchases",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "Test User",
                          "type": "event_count_custom"
                        }
                      ]
                    },
                    {
                      "id": "A metric for testing teams::event_count_custom",
                      "name": "A metric for testing teams",
                      "directionality": "increase",
                      "type": "event_count_custom",
                      "description": "",
                      "isPermanent": false,
                      "isReadOnly": false,
                      "isHidden": false,
                      "isVerified": false,
                      "tags": [],
                      "creatorName": "Test User",
                      "creatorEmail": "test@statsig.com",
                      "createdTime": 1706640947812,
                      "owner": {
                        "name": "John Doe",
                        "ownerID": "user123",
                        "ownerType": "USER",
                        "ownerName": "John Doe",
                        "ownerEmail": "owner123@test.com"
                      },
                      "lineage": {
                        "events": [
                          "add_to_cart"
                        ],
                        "metrics": []
                      },
                      "team": null,
                      "unitTypes": [
                        "userID"
                      ],
                      "metricEvents": [
                        {
                          "name": "add_to_cart",
                          "criteria": [
                            {
                              "type": "value",
                              "column": "",
                              "condition": "in",
                              "values": [
                                "sports"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 5,
                    "pageNumber": 1,
                    "totalItems": 2699,
                    "nextPage": "/console/v1/metrics/list?page=2&limit=5",
                    "previousPage": null,
                    "all": "/console/v1/metrics/list"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/metric_source": {
      "post": {
        "summary": "Create Metric Source",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricSourceCreationContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric source created successfully.",
                    "data": {
                      "name": "test_metric_source2",
                      "description": "Test description for metric source",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Metric source created successfully.",
                  "data": {
                    "name": "test_metric_source2",
                    "description": "Test description for metric source",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/metric_source/{name}": {
      "get": {
        "summary": "Read Metric Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric source read successfully.",
                    "data": {
                      "name": "test_metric_source4",
                      "description": "Test description for metric source",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Metric source read successfully.",
                  "data": {
                    "name": "test_metric_source4",
                    "description": "Test description for metric source",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Metric Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetricSourceUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MetricSourceContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric source updated successfully.",
                    "data": {
                      "name": "test_metric_source4",
                      "description": "Test description for metric source",
                      "tags": [
                        "non_production"
                      ],
                      "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                      "timestampColumn": "ts",
                      "timestampAsDay": true,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        }
                      ],
                      "sourceType": "table",
                      "tableName": "shoppy-sales.logging.events"
                    }
                  }
                },
                "example": {
                  "message": "Metric source updated successfully.",
                  "data": {
                    "name": "test_metric_source4",
                    "description": "Test description for metric source",
                    "tags": [
                      "non_production"
                    ],
                    "sql": "SELECT * FROM `shoppy-sales.logging.events`",
                    "timestampColumn": "ts",
                    "timestampAsDay": true,
                    "idTypeMapping": [
                      {
                        "statsigUnitID": "userID",
                        "column": "user_id"
                      }
                    ],
                    "sourceType": "table",
                    "tableName": "shoppy-sales.logging.events"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Metric Source",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Metric source deleted successfully."
                  }
                },
                "example": {
                  "message": "Metric source deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/metric_source/{name}/metrics": {
      "get": {
        "summary": "Read Metric Source Metrics",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "path",
            "description": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read metric source metrics response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalMetricDefinitionContractDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/metric_source/list": {
      "get": {
        "summary": "List metric source",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List metric source response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MetricSourceContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric sources listed successfully.",
                    "data": [
                      {
                        "name": "Log Events",
                        "description": "all app events including add to cart, purchase, page view, checkout",
                        "tags": [],
                        "sql": "SELECT *\nFROM shoppy-sales.logging.events\nwhere DATE(ts) between {statsig_start_date} and {statsig_end_date}\n",
                        "timestampColumn": "ts",
                        "timestampAsDay": false,
                        "idTypeMapping": [
                          {
                            "statsigUnitID": "userID",
                            "column": "user_id"
                          },
                          {
                            "statsigUnitID": "deviceID",
                            "column": "device_id"
                          }
                        ],
                        "tableName": "",
                        "customFieldMapping": [
                          {
                            "key": "",
                            "formula": ""
                          }
                        ]
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 1,
                      "pageNumber": 1,
                      "totalItems": 14,
                      "nextPage": "/console/v1/metrics/metric_source/list?page=2&limit=1",
                      "previousPage": null,
                      "all": "/console/v1/metrics/metric_source/list"
                    }
                  }
                },
                "example": {
                  "message": "Metric sources listed successfully.",
                  "data": [
                    {
                      "name": "Log Events",
                      "description": "all app events including add to cart, purchase, page view, checkout",
                      "tags": [],
                      "sql": "SELECT *\nFROM shoppy-sales.logging.events\nwhere DATE(ts) between {statsig_start_date} and {statsig_end_date}\n",
                      "timestampColumn": "ts",
                      "timestampAsDay": false,
                      "idTypeMapping": [
                        {
                          "statsigUnitID": "userID",
                          "column": "user_id"
                        },
                        {
                          "statsigUnitID": "deviceID",
                          "column": "device_id"
                        }
                      ],
                      "tableName": "",
                      "customFieldMapping": [
                        {
                          "key": "",
                          "formula": ""
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 1,
                    "pageNumber": 1,
                    "totalItems": 14,
                    "nextPage": "/console/v1/metrics/metric_source/list?page=2&limit=1",
                    "previousPage": null,
                    "all": "/console/v1/metrics/metric_source/list"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "MCP",
          "Metrics (Warehouse Native)"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/metrics/values": {
      "get": {
        "summary": "List All Metric Values",
        "description": "List all metric values",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "metricName",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List All Metric Values Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MetricValueDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Metric values listed successfully.",
                    "data": [
                      {
                        "value": 21377,
                        "unitType": "overall",
                        "numerator": null,
                        "denominator": null,
                        "metricName": "Page Loads",
                        "metricType": "event_count_custom"
                      },
                      {
                        "value": 21377,
                        "unitType": "stableID",
                        "numerator": null,
                        "denominator": null,
                        "metricName": "Page Loads",
                        "metricType": "event_count_custom"
                      },
                      {
                        "value": 21355,
                        "unitType": "userID",
                        "numerator": null,
                        "denominator": null,
                        "metricName": "Page Loads",
                        "metricType": "event_count_custom"
                      },
                      {
                        "value": 646524,
                        "unitType": "stableID",
                        "numerator": null,
                        "denominator": null,
                        "metricName": "Average Time Spent on Page",
                        "metricType": "event_user"
                      },
                      {
                        "value": 5676,
                        "unitType": "stableID",
                        "numerator": null,
                        "denominator": null,
                        "metricName": "Page Latency",
                        "metricType": "mean"
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 5,
                      "pageNumber": 1,
                      "totalItems": 5767,
                      "nextPage": "/console/v1/metrics/values?date=2024-02-04&page=2&limit=5",
                      "previousPage": null
                    }
                  }
                },
                "example": {
                  "message": "Metric values listed successfully.",
                  "data": [
                    {
                      "value": 21377,
                      "unitType": "overall",
                      "numerator": null,
                      "denominator": null,
                      "metricName": "Page Loads",
                      "metricType": "event_count_custom"
                    },
                    {
                      "value": 21377,
                      "unitType": "stableID",
                      "numerator": null,
                      "denominator": null,
                      "metricName": "Page Loads",
                      "metricType": "event_count_custom"
                    },
                    {
                      "value": 21355,
                      "unitType": "userID",
                      "numerator": null,
                      "denominator": null,
                      "metricName": "Page Loads",
                      "metricType": "event_count_custom"
                    },
                    {
                      "value": 646524,
                      "unitType": "stableID",
                      "numerator": null,
                      "denominator": null,
                      "metricName": "Average Time Spent on Page",
                      "metricType": "event_user"
                    },
                    {
                      "value": 5676,
                      "unitType": "stableID",
                      "numerator": null,
                      "denominator": null,
                      "metricName": "Page Latency",
                      "metricType": "mean"
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 5,
                    "pageNumber": 1,
                    "totalItems": 5767,
                    "nextPage": "/console/v1/metrics/values?date=2024-02-04&page=2&limit=5",
                    "previousPage": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Metrics"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/param_stores": {
      "get": {
        "summary": "List Param Stores",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List param stores",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ParamStoreDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "List param stores success",
                    "data": [
                      {
                        "id": "6O13wytnLL1Lss5QgUSAeu",
                        "name": "param 1",
                        "displayName": "param 1",
                        "description": "",
                        "createdTime": 1734618662756,
                        "creatorID": "5O908pyGoCqw6QH1nt8v82",
                        "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                        "parameters": [
                          {
                            "name": "prm1",
                            "ref_type": "static",
                            "param_type": "boolean",
                            "value": false
                          },
                          {
                            "name": "prm2",
                            "ref_type": "static",
                            "param_type": "boolean",
                            "value": false
                          }
                        ]
                      },
                      {
                        "id": "24hiIXz3kbFaDwtYEetv2i",
                        "name": "param 2",
                        "displayName": "param 1",
                        "description": "",
                        "createdTime": 1734618662756,
                        "creatorID": "5O908pyGoCqw6QH1nt8v82",
                        "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                        "parameters": [
                          {
                            "name": "prm1",
                            "ref_type": "static",
                            "param_type": "boolean",
                            "value": false
                          },
                          {
                            "name": "prm2",
                            "ref_type": "static",
                            "param_type": "boolean",
                            "value": false
                          }
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "List param stores success",
                  "data": [
                    {
                      "id": "6O13wytnLL1Lss5QgUSAeu",
                      "name": "param 1",
                      "displayName": "param 1",
                      "description": "",
                      "createdTime": 1734618662756,
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "parameters": [
                        {
                          "name": "prm1",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        },
                        {
                          "name": "prm2",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        }
                      ]
                    },
                    {
                      "id": "24hiIXz3kbFaDwtYEetv2i",
                      "name": "param 2",
                      "displayName": "param 1",
                      "description": "",
                      "createdTime": 1734618662756,
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "parameters": [
                        {
                          "name": "prm1",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        },
                        {
                          "name": "prm2",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Param Store"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Param Store",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamStoreCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create param store",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ParamStoreDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Param Store read successfully.",
                    "data": {
                      "id": "6O13wytnLL1Lss5QgUSAeu",
                      "name": "param 1",
                      "displayName": "param 1",
                      "description": "",
                      "createdTime": 1734618662756,
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "parameters": [
                        {
                          "name": "prm1",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        },
                        {
                          "name": "prm2",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Param Store read successfully.",
                  "data": {
                    "id": "6O13wytnLL1Lss5QgUSAeu",
                    "name": "param 1",
                    "displayName": "param 1",
                    "description": "",
                    "createdTime": 1734618662756,
                    "creatorID": "5O908pyGoCqw6QH1nt8v82",
                    "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                    "parameters": [
                      {
                        "name": "prm1",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      },
                      {
                        "name": "prm2",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Param Store"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/param_stores/{name}": {
      "get": {
        "summary": "Get Param Store",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get param store",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ParamStoreDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Param Store read successfully.",
                    "data": {
                      "id": "6O13wytnLL1Lss5QgUSAeu",
                      "name": "param 1",
                      "displayName": "param 1",
                      "description": "",
                      "createdTime": 1734618662756,
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "parameters": [
                        {
                          "name": "prm1",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        },
                        {
                          "name": "prm2",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Param Store read successfully.",
                  "data": {
                    "id": "6O13wytnLL1Lss5QgUSAeu",
                    "name": "param 1",
                    "displayName": "param 1",
                    "description": "",
                    "createdTime": 1734618662756,
                    "creatorID": "5O908pyGoCqw6QH1nt8v82",
                    "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                    "parameters": [
                      {
                        "name": "prm1",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      },
                      {
                        "name": "prm2",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Param Store"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Param Store",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParamStoreUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update param store",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ParamStoreDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Param Store read successfully.",
                    "data": {
                      "id": "6O13wytnLL1Lss5QgUSAeu",
                      "name": "param 1",
                      "displayName": "param 1",
                      "description": "",
                      "createdTime": 1734618662756,
                      "creatorID": "5O908pyGoCqw6QH1nt8v82",
                      "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                      "parameters": [
                        {
                          "name": "prm1",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        },
                        {
                          "name": "prm2",
                          "ref_type": "static",
                          "param_type": "boolean",
                          "value": false
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Param Store read successfully.",
                  "data": {
                    "id": "6O13wytnLL1Lss5QgUSAeu",
                    "name": "param 1",
                    "displayName": "param 1",
                    "description": "",
                    "createdTime": 1734618662756,
                    "creatorID": "5O908pyGoCqw6QH1nt8v82",
                    "lastModifierID": "5O908pyGoCqw6QH1nt8v82",
                    "parameters": [
                      {
                        "name": "prm1",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      },
                      {
                        "name": "prm2",
                        "ref_type": "static",
                        "param_type": "boolean",
                        "value": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Param Store"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/project": {
      "get": {
        "summary": "Get Project Info",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Info",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalProjectDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Project Info Retrieved Successfully",
                    "data": {
                      "id": "company_id"
                    }
                  }
                },
                "example": {
                  "message": "Project Info Retrieved Successfully",
                  "data": {
                    "id": "company_id"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Project"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/project/usage_billing/report": {
      "get": {
        "summary": "Get Report in CSV format",
        "parameters": [
          {
            "name": "start",
            "required": false,
            "in": "query",
            "description": "Unix timestamp in ms",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "description": "Unix timestamp in ms",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report URL generated successfully",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Data is not available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Usage",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/prompts": {
      "get": {
        "summary": "List Prompts",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Prompts Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ExternalPromptDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Prompt",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Prompt",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalPromptDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/prompts/{id}": {
      "get": {
        "summary": "Get Prompt",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Prompt",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalPromptDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Prompt (partial)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigPartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Prompt Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalPromptDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/prompts/{id}/versions": {
      "post": {
        "summary": "Create Prompt Version",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIConfigVersionCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Prompt Version",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AIConfigVersionCreateDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/prompts/{id}/versions/{versionId}/start_evals": {
      "post": {
        "summary": "Start Prompt Version Evaluation Job",
        "parameters": [
          {
            "name": "versionId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Start evaluation job for a Prompt Version",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ExternalPromptVersionDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Prompts"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers": {
      "get": {
        "summary": "List Pipeline Triggers",
        "parameters": [
          {
            "name": "releasePipelineID",
            "required": false,
            "in": "query",
            "description": "Filter by Release Pipeline ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gateID",
            "required": false,
            "in": "query",
            "description": "Filter by Gate ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dynamicConfigID",
            "required": false,
            "in": "query",
            "description": "Filter by Dynamic Config ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by Status",
            "schema": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "IN_PROGRESS",
                    "PAUSED",
                    "ABORTED",
                    "COMPLETED"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "WAITING_FOR_REVIEW"
                  ]
                }
              ]
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "schema": {
              "example": "2024-01-01",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "example": 10,
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List pipeline triggers success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "data": [
                      {
                        "id": "trigger_1646560789123",
                        "releasePipelineID": "pipeline_123456",
                        "status": "IN_PROGRESS",
                        "currentPhase": "Phase 1",
                        "currentPhaseID": "phase_123456",
                        "currentPhaseEndTime": 1646560799123,
                        "actions": [
                          {
                            "type": "STARTED",
                            "timeMs": 1646560789123,
                            "phaseID": "phase_123456",
                            "actorID": "user_123456",
                            "actorName": "John Doe"
                          }
                        ],
                        "creatorID": "user_123456",
                        "createdTime": 1646560789123,
                        "lastModifierID": "user_123456",
                        "lastModifierName": "John Doe",
                        "gateID": "gate_123456"
                      },
                      {
                        "id": "trigger_1646560789124",
                        "releasePipelineID": "pipeline_123456",
                        "status": "COMPLETED",
                        "currentPhase": "Phase 1",
                        "currentPhaseID": "phase_123456",
                        "currentPhaseEndTime": 1646560799124,
                        "actions": [
                          {
                            "type": "STARTED",
                            "timeMs": 1646560789123,
                            "phaseID": "phase_123456",
                            "actorID": "user_123456",
                            "actorName": "John Doe"
                          }
                        ],
                        "creatorID": "user_123456",
                        "createdTime": 1646560789124,
                        "lastModifierID": "user_654321",
                        "lastModifierName": "Jane Doe",
                        "dynamicConfigID": "dynamic_config_123456"
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 10,
                      "pageNumber": 1,
                      "nextPage": null,
                      "previousPage": null,
                      "totalItems": 2
                    },
                    "message": "Pipeline triggers listed correctly."
                  }
                },
                "example": {
                  "data": [
                    {
                      "id": "trigger_1646560789123",
                      "releasePipelineID": "pipeline_123456",
                      "status": "IN_PROGRESS",
                      "currentPhase": "Phase 1",
                      "currentPhaseID": "phase_123456",
                      "currentPhaseEndTime": 1646560799123,
                      "actions": [
                        {
                          "type": "STARTED",
                          "timeMs": 1646560789123,
                          "phaseID": "phase_123456",
                          "actorID": "user_123456",
                          "actorName": "John Doe"
                        }
                      ],
                      "creatorID": "user_123456",
                      "createdTime": 1646560789123,
                      "lastModifierID": "user_123456",
                      "lastModifierName": "John Doe",
                      "gateID": "gate_123456"
                    },
                    {
                      "id": "trigger_1646560789124",
                      "releasePipelineID": "pipeline_123456",
                      "status": "COMPLETED",
                      "currentPhase": "Phase 1",
                      "currentPhaseID": "phase_123456",
                      "currentPhaseEndTime": 1646560799124,
                      "actions": [
                        {
                          "type": "STARTED",
                          "timeMs": 1646560789123,
                          "phaseID": "phase_123456",
                          "actorID": "user_123456",
                          "actorName": "John Doe"
                        }
                      ],
                      "creatorID": "user_123456",
                      "createdTime": 1646560789124,
                      "lastModifierID": "user_654321",
                      "lastModifierName": "Jane Doe",
                      "dynamicConfigID": "dynamic_config_123456"
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 10,
                    "pageNumber": 1,
                    "nextPage": null,
                    "previousPage": null,
                    "totalItems": 2
                  },
                  "message": "Pipeline triggers listed correctly."
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}": {
      "get": {
        "summary": "Get Pipeline Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get pipeline trigger success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "data": {
                      "id": "trigger_1646560789123",
                      "releasePipelineID": "pipeline_123456",
                      "status": "IN_PROGRESS",
                      "currentPhase": "Phase 1",
                      "currentPhaseID": "phase_123456",
                      "currentPhaseEndTime": 1646560799123,
                      "creatorID": "user_123456",
                      "createdTime": 1646560789123,
                      "gateID": "gate_123456",
                      "lastModifierID": "user_123456",
                      "lastModifierName": "John Doe",
                      "actions": [
                        {
                          "type": "STARTED",
                          "timeMs": 1646560789123,
                          "phaseID": "phase_123456",
                          "actorID": "user_123456",
                          "actorName": "John Doe"
                        }
                      ]
                    },
                    "message": "Pipeline trigger retrieved successfully."
                  }
                },
                "example": {
                  "data": {
                    "id": "trigger_1646560789123",
                    "releasePipelineID": "pipeline_123456",
                    "status": "IN_PROGRESS",
                    "currentPhase": "Phase 1",
                    "currentPhaseID": "phase_123456",
                    "currentPhaseEndTime": 1646560799123,
                    "creatorID": "user_123456",
                    "createdTime": 1646560789123,
                    "gateID": "gate_123456",
                    "lastModifierID": "user_123456",
                    "lastModifierName": "John Doe",
                    "actions": [
                      {
                        "type": "STARTED",
                        "timeMs": 1646560789123,
                        "phaseID": "phase_123456",
                        "actorID": "user_123456",
                        "actorName": "John Doe"
                      }
                    ]
                  },
                  "message": "Pipeline trigger retrieved successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/abort": {
      "put": {
        "summary": "Abort Pipeline Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aborted pipeline trigger successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/approve": {
      "put": {
        "summary": "Approve Pipeline Trigger Phase",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineTriggerActionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Approved pipeline trigger phase successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/pause": {
      "put": {
        "summary": "Pause Pipeline Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineTriggerActionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paused pipeline trigger successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/rollout": {
      "put": {
        "summary": "Fully Roll Out Pipeline Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Fully rolled out pipeline trigger successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/skip": {
      "put": {
        "summary": "Skip to Pipeline Trigger Phase",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineTriggerActionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Skipped pipeline trigger phase successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipeline_triggers/{id}/unpause": {
      "put": {
        "summary": "Unpause Pipeline Trigger",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineTriggerActionBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Unpaused pipeline trigger successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineTriggerResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipelines": {
      "get": {
        "summary": "List Pipelines",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List pipelines",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ReleasePipelineDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "List pipelines success",
                    "data": [
                      {
                        "id": "45aiIXz4aaAadWtYEetjko",
                        "name": "Pipeline 1",
                        "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                        "createdTime": 1705439406615,
                        "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                        "phases": [
                          {
                            "id": "24hiIXz3kbFaDwtYEetv2i",
                            "name": "Phase 1",
                            "timeIntervalMs": 3600000,
                            "requiredReview": false,
                            "rules": [
                              {
                                "id": "24hiIXz3kbFaDwtYEetv2i",
                                "name": "Rule",
                                "conditions": [
                                  {
                                    "type": "app_version",
                                    "targetValue": [
                                      "1",
                                      "222"
                                    ],
                                    "operator": "any"
                                  }
                                ],
                                "environments": null
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": "24hiIXz3kbFaDwtYEetv2i",
                        "name": "Pipeline 2",
                        "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                        "createdTime": 1705439406615,
                        "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                        "phases": [
                          {
                            "id": "24hiIXz3kbFaDwtYEetv2i",
                            "name": "Phase 1",
                            "timeIntervalMs": 3600000,
                            "requiredReview": false,
                            "rules": [
                              {
                                "id": "24hiIXz3kbFaDwtYEetv2i",
                                "name": "Rule",
                                "conditions": [
                                  {
                                    "type": "app_version",
                                    "targetValue": [
                                      "1",
                                      "222"
                                    ],
                                    "operator": "any"
                                  }
                                ],
                                "environments": null
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "List pipelines success",
                  "data": [
                    {
                      "id": "45aiIXz4aaAadWtYEetjko",
                      "name": "Pipeline 1",
                      "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                      "createdTime": 1705439406615,
                      "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                      "phases": [
                        {
                          "id": "24hiIXz3kbFaDwtYEetv2i",
                          "name": "Phase 1",
                          "timeIntervalMs": 3600000,
                          "requiredReview": false,
                          "rules": [
                            {
                              "id": "24hiIXz3kbFaDwtYEetv2i",
                              "name": "Rule",
                              "conditions": [
                                {
                                  "type": "app_version",
                                  "targetValue": [
                                    "1",
                                    "222"
                                  ],
                                  "operator": "any"
                                }
                              ],
                              "environments": null
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": "24hiIXz3kbFaDwtYEetv2i",
                      "name": "Pipeline 2",
                      "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                      "createdTime": 1705439406615,
                      "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                      "phases": [
                        {
                          "id": "24hiIXz3kbFaDwtYEetv2i",
                          "name": "Phase 1",
                          "timeIntervalMs": 3600000,
                          "requiredReview": false,
                          "rules": [
                            {
                              "id": "24hiIXz3kbFaDwtYEetv2i",
                              "name": "Rule",
                              "conditions": [
                                {
                                  "type": "app_version",
                                  "targetValue": [
                                    "1",
                                    "222"
                                  ],
                                  "operator": "any"
                                }
                              ],
                              "environments": null
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Pipeline",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Get pipeline success",
                    "data": {
                      "id": "45aiIXz4aaAadWtYEetjko",
                      "name": "Pipeline 1",
                      "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                      "createdTime": 1705439406615,
                      "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                      "phases": [
                        {
                          "id": "24hiIXz3kbFaDwtYEetv2i",
                          "name": "Phase 1",
                          "timeIntervalMs": 3600000,
                          "requiredReview": false,
                          "rules": [
                            {
                              "id": "24hiIXz3kbFaDwtYEetv2i",
                              "name": "Rule",
                              "conditions": [
                                {
                                  "type": "app_version",
                                  "targetValue": [
                                    "1",
                                    "222"
                                  ],
                                  "operator": "any"
                                }
                              ],
                              "environments": null
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Get pipeline success",
                  "data": {
                    "id": "45aiIXz4aaAadWtYEetjko",
                    "name": "Pipeline 1",
                    "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                    "createdTime": 1705439406615,
                    "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                    "phases": [
                      {
                        "id": "24hiIXz3kbFaDwtYEetv2i",
                        "name": "Phase 1",
                        "timeIntervalMs": 3600000,
                        "requiredReview": false,
                        "rules": [
                          {
                            "id": "24hiIXz3kbFaDwtYEetv2i",
                            "name": "Rule",
                            "conditions": [
                              {
                                "type": "app_version",
                                "targetValue": [
                                  "1",
                                  "222"
                                ],
                                "operator": "any"
                              }
                            ],
                            "environments": null
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/release_pipelines/{id}": {
      "get": {
        "summary": "Get Pipeline",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Get pipeline success",
                    "data": {
                      "id": "45aiIXz4aaAadWtYEetjko",
                      "name": "Pipeline 1",
                      "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                      "createdTime": 1705439406615,
                      "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                      "phases": [
                        {
                          "id": "24hiIXz3kbFaDwtYEetv2i",
                          "name": "Phase 1",
                          "timeIntervalMs": 3600000,
                          "requiredReview": false,
                          "rules": [
                            {
                              "id": "24hiIXz3kbFaDwtYEetv2i",
                              "name": "Rule",
                              "conditions": [
                                {
                                  "type": "app_version",
                                  "targetValue": [
                                    "1",
                                    "222"
                                  ],
                                  "operator": "any"
                                }
                              ],
                              "environments": null
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Get pipeline success",
                  "data": {
                    "id": "45aiIXz4aaAadWtYEetjko",
                    "name": "Pipeline 1",
                    "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                    "createdTime": 1705439406615,
                    "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                    "phases": [
                      {
                        "id": "24hiIXz3kbFaDwtYEetv2i",
                        "name": "Phase 1",
                        "timeIntervalMs": 3600000,
                        "requiredReview": false,
                        "rules": [
                          {
                            "id": "24hiIXz3kbFaDwtYEetv2i",
                            "name": "Rule",
                            "conditions": [
                              {
                                "type": "app_version",
                                "targetValue": [
                                  "1",
                                  "222"
                                ],
                                "operator": "any"
                              }
                            ],
                            "environments": null
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Pipeline",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleasePipelineUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReleasePipelineDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Get pipeline success",
                    "data": {
                      "id": "45aiIXz4aaAadWtYEetjko",
                      "name": "Pipeline 1",
                      "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                      "createdTime": 1705439406615,
                      "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                      "phases": [
                        {
                          "id": "24hiIXz3kbFaDwtYEetv2i",
                          "name": "Phase 1",
                          "timeIntervalMs": 3600000,
                          "requiredReview": false,
                          "rules": [
                            {
                              "id": "24hiIXz3kbFaDwtYEetv2i",
                              "name": "Rule",
                              "conditions": [
                                {
                                  "type": "app_version",
                                  "targetValue": [
                                    "1",
                                    "222"
                                  ],
                                  "operator": "any"
                                }
                              ],
                              "environments": null
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Get pipeline success",
                  "data": {
                    "id": "45aiIXz4aaAadWtYEetjko",
                    "name": "Pipeline 1",
                    "creatorID": "24hiIXz3kbFaDwtYEetv2i",
                    "createdTime": 1705439406615,
                    "lastModifierID": "24hiIXz3kbFaDwtYEetv2i",
                    "phases": [
                      {
                        "id": "24hiIXz3kbFaDwtYEetv2i",
                        "name": "Phase 1",
                        "timeIntervalMs": 3600000,
                        "requiredReview": false,
                        "rules": [
                          {
                            "id": "24hiIXz3kbFaDwtYEetv2i",
                            "name": "Rule",
                            "conditions": [
                              {
                                "type": "app_version",
                                "targetValue": [
                                  "1",
                                  "222"
                                ],
                                "operator": "any"
                              }
                            ],
                            "environments": null
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Pipeline",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete pipeline",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Pipeline deleted successfully."
                  }
                },
                "example": {
                  "message": "Pipeline deleted successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Release Pipelines"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/reports": {
      "get": {
        "summary": "Get Reports",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "description": "report type",
            "schema": {
              "example": "first_exposures",
              "type": "string",
              "enum": [
                "first_exposures",
                "pulse_daily",
                "topline_impact_daily"
              ]
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "description": "date for the report",
            "schema": {
              "example": "2024-09-01",
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reports",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ReportDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Report URL generated successfully",
                    "data": [
                      {
                        "url": "www.download_report_data_here.com"
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Report URL generated successfully",
                  "data": [
                    {
                      "url": "www.download_report_data_here.com"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Data is not available",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/roles": {
      "get": {
        "summary": "List Roles",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Roles Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/RoleContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Roles listed successfully.",
                    "data": [
                      {
                        "name": "Custom Role",
                        "permissions": {
                          "invitation_access": false,
                          "create_configs": false,
                          "edit_or_delete_configs": false,
                          "launch_to_production": false,
                          "launch_or_disable_configs": false,
                          "start_experiments": false,
                          "create_or_edit_templates": false,
                          "create_or_edit_dashboards": false,
                          "create_teams": false,
                          "edit_dynamic_config_schemas": false,
                          "create_release_pipelines": false,
                          "approve_required_review_release_pipeline_phase": false,
                          "self_approve_review": false,
                          "approve_reviews": false,
                          "bypass_reviews_for_overrides": false,
                          "metric_management": false,
                          "verify_metrics": false,
                          "use_metrics_explorer": false,
                          "local_metrics": false,
                          "manage_alerts": false,
                          "integrations_edit_access": false,
                          "source_connection_and_creation": false,
                          "data_warehouse_ingestion_and_exports_edit_access": false,
                          "edit_and_tag_configs_with_core_tag": false,
                          "reset_experiments": false
                        }
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 100,
                      "pageNumber": 1,
                      "totalItems": 1,
                      "nextPage": null,
                      "previousPage": null,
                      "all": "/console/v1/roles"
                    }
                  }
                },
                "example": {
                  "message": "Roles listed successfully.",
                  "data": [
                    {
                      "name": "Custom Role",
                      "permissions": {
                        "invitation_access": false,
                        "create_configs": false,
                        "edit_or_delete_configs": false,
                        "launch_to_production": false,
                        "launch_or_disable_configs": false,
                        "start_experiments": false,
                        "create_or_edit_templates": false,
                        "create_or_edit_dashboards": false,
                        "create_teams": false,
                        "edit_dynamic_config_schemas": false,
                        "create_release_pipelines": false,
                        "approve_required_review_release_pipeline_phase": false,
                        "self_approve_review": false,
                        "approve_reviews": false,
                        "bypass_reviews_for_overrides": false,
                        "metric_management": false,
                        "verify_metrics": false,
                        "use_metrics_explorer": false,
                        "local_metrics": false,
                        "manage_alerts": false,
                        "integrations_edit_access": false,
                        "source_connection_and_creation": false,
                        "data_warehouse_ingestion_and_exports_edit_access": false,
                        "edit_and_tag_configs_with_core_tag": false,
                        "reset_experiments": false
                      }
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 100,
                    "pageNumber": 1,
                    "totalItems": 1,
                    "nextPage": null,
                    "previousPage": null,
                    "all": "/console/v1/roles"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Role",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Role Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RoleContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Role created successfully.",
                    "data": {
                      "name": "Custom Role",
                      "permissions": {
                        "invitation_access": false,
                        "create_configs": false,
                        "edit_or_delete_configs": false,
                        "launch_to_production": false,
                        "launch_or_disable_configs": false,
                        "start_experiments": false,
                        "create_or_edit_templates": false,
                        "create_or_edit_dashboards": false,
                        "create_teams": false,
                        "edit_dynamic_config_schemas": false,
                        "create_release_pipelines": false,
                        "approve_required_review_release_pipeline_phase": false,
                        "self_approve_review": false,
                        "approve_reviews": false,
                        "bypass_reviews_for_overrides": false,
                        "metric_management": false,
                        "verify_metrics": false,
                        "use_metrics_explorer": false,
                        "local_metrics": false,
                        "manage_alerts": false,
                        "integrations_edit_access": false,
                        "source_connection_and_creation": false,
                        "data_warehouse_ingestion_and_exports_edit_access": false,
                        "edit_and_tag_configs_with_core_tag": false,
                        "reset_experiments": false
                      }
                    }
                  }
                },
                "example": {
                  "message": "Role created successfully.",
                  "data": {
                    "name": "Custom Role",
                    "permissions": {
                      "invitation_access": false,
                      "create_configs": false,
                      "edit_or_delete_configs": false,
                      "launch_to_production": false,
                      "launch_or_disable_configs": false,
                      "start_experiments": false,
                      "create_or_edit_templates": false,
                      "create_or_edit_dashboards": false,
                      "create_teams": false,
                      "edit_dynamic_config_schemas": false,
                      "create_release_pipelines": false,
                      "approve_required_review_release_pipeline_phase": false,
                      "self_approve_review": false,
                      "approve_reviews": false,
                      "bypass_reviews_for_overrides": false,
                      "metric_management": false,
                      "verify_metrics": false,
                      "use_metrics_explorer": false,
                      "local_metrics": false,
                      "manage_alerts": false,
                      "integrations_edit_access": false,
                      "source_connection_and_creation": false,
                      "data_warehouse_ingestion_and_exports_edit_access": false,
                      "edit_and_tag_configs_with_core_tag": false,
                      "reset_experiments": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/roles/{id}": {
      "get": {
        "summary": "Get Role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Role Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RoleContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Role read successfully.",
                    "data": {
                      "name": "Custom Role",
                      "permissions": {
                        "invitation_access": false,
                        "create_configs": false,
                        "edit_or_delete_configs": false,
                        "launch_to_production": false,
                        "launch_or_disable_configs": false,
                        "start_experiments": false,
                        "create_or_edit_templates": false,
                        "create_or_edit_dashboards": false,
                        "create_teams": false,
                        "edit_dynamic_config_schemas": false,
                        "create_release_pipelines": false,
                        "approve_required_review_release_pipeline_phase": false,
                        "self_approve_review": false,
                        "approve_reviews": false,
                        "bypass_reviews_for_overrides": false,
                        "metric_management": false,
                        "verify_metrics": false,
                        "use_metrics_explorer": false,
                        "local_metrics": false,
                        "manage_alerts": false,
                        "integrations_edit_access": false,
                        "source_connection_and_creation": false,
                        "data_warehouse_ingestion_and_exports_edit_access": false,
                        "edit_and_tag_configs_with_core_tag": false,
                        "reset_experiments": false
                      }
                    }
                  }
                },
                "example": {
                  "message": "Role read successfully.",
                  "data": {
                    "name": "Custom Role",
                    "permissions": {
                      "invitation_access": false,
                      "create_configs": false,
                      "edit_or_delete_configs": false,
                      "launch_to_production": false,
                      "launch_or_disable_configs": false,
                      "start_experiments": false,
                      "create_or_edit_templates": false,
                      "create_or_edit_dashboards": false,
                      "create_teams": false,
                      "edit_dynamic_config_schemas": false,
                      "create_release_pipelines": false,
                      "approve_required_review_release_pipeline_phase": false,
                      "self_approve_review": false,
                      "approve_reviews": false,
                      "bypass_reviews_for_overrides": false,
                      "metric_management": false,
                      "verify_metrics": false,
                      "use_metrics_explorer": false,
                      "local_metrics": false,
                      "manage_alerts": false,
                      "integrations_edit_access": false,
                      "source_connection_and_creation": false,
                      "data_warehouse_ingestion_and_exports_edit_access": false,
                      "edit_and_tag_configs_with_core_tag": false,
                      "reset_experiments": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Role Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RoleContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Role updated successfully.",
                    "data": {
                      "name": "Custom Role",
                      "permissions": {
                        "invitation_access": true,
                        "create_configs": false,
                        "edit_or_delete_configs": false,
                        "launch_to_production": false,
                        "launch_or_disable_configs": false,
                        "start_experiments": false,
                        "create_or_edit_templates": false,
                        "create_or_edit_dashboards": false,
                        "create_teams": false,
                        "edit_dynamic_config_schemas": false,
                        "create_release_pipelines": false,
                        "approve_required_review_release_pipeline_phase": false,
                        "self_approve_review": false,
                        "approve_reviews": false,
                        "bypass_reviews_for_overrides": false,
                        "metric_management": false,
                        "verify_metrics": false,
                        "use_metrics_explorer": false,
                        "local_metrics": false,
                        "manage_alerts": false,
                        "integrations_edit_access": false,
                        "source_connection_and_creation": false,
                        "data_warehouse_ingestion_and_exports_edit_access": false,
                        "edit_and_tag_configs_with_core_tag": false,
                        "reset_experiments": false
                      }
                    }
                  }
                },
                "example": {
                  "message": "Role updated successfully.",
                  "data": {
                    "name": "Custom Role",
                    "permissions": {
                      "invitation_access": true,
                      "create_configs": false,
                      "edit_or_delete_configs": false,
                      "launch_to_production": false,
                      "launch_or_disable_configs": false,
                      "start_experiments": false,
                      "create_or_edit_templates": false,
                      "create_or_edit_dashboards": false,
                      "create_teams": false,
                      "edit_dynamic_config_schemas": false,
                      "create_release_pipelines": false,
                      "approve_required_review_release_pipeline_phase": false,
                      "self_approve_review": false,
                      "approve_reviews": false,
                      "bypass_reviews_for_overrides": false,
                      "metric_management": false,
                      "verify_metrics": false,
                      "use_metrics_explorer": false,
                      "local_metrics": false,
                      "manage_alerts": false,
                      "integrations_edit_access": false,
                      "source_connection_and_creation": false,
                      "data_warehouse_ingestion_and_exports_edit_access": false,
                      "edit_and_tag_configs_with_core_tag": false,
                      "reset_experiments": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Role Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Role deleted successfully."
                  }
                },
                "example": {
                  "message": "Role deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments": {
      "get": {
        "summary": "List Segments",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Segments Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/SegmentDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Segments listed successfully.",
                    "data": [
                      {
                        "id": "an_id_list",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "id_list",
                        "count": 0,
                        "tags": [
                          "a tag"
                        ]
                      },
                      {
                        "id": "a_rule_based_segment",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "rule_based",
                        "count": 0,
                        "rules": {
                          "name": "All Conditions",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          }
                        },
                        "tags": [
                          "a tag"
                        ]
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Segments listed successfully.",
                  "data": [
                    {
                      "id": "an_id_list",
                      "isEnabled": true,
                      "description": "helpful summary of what this segment is",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                      "type": "id_list",
                      "count": 0,
                      "tags": [
                        "a tag"
                      ]
                    },
                    {
                      "id": "a_rule_based_segment",
                      "isEnabled": true,
                      "description": "helpful summary of what this segment is",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                      "type": "rule_based",
                      "count": 0,
                      "rules": {
                        "name": "All Conditions",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        }
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Segment",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentCreateContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Segment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SegmentDto"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "id_list": {
                    "value": {
                      "message": "Segment created successfully.",
                      "data": {
                        "id": "an_id_list",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "id_list",
                        "count": 0,
                        "tags": [
                          "a tag"
                        ]
                      }
                    },
                    "summary": "ID list segment"
                  },
                  "rule_based": {
                    "value": {
                      "message": "Segment created successfully.",
                      "data": {
                        "id": "a_rule_based_segment",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "rule_based",
                        "count": 0,
                        "rules": {
                          "name": "All Conditions",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          }
                        },
                        "tags": [
                          "a tag"
                        ]
                      }
                    },
                    "summary": "Rule-based segment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}": {
      "get": {
        "summary": "Get Segment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Segment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SegmentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "id_list": {
                      "message": "Segment read successfully.",
                      "data": {
                        "id": "an_id_list",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "id_list",
                        "count": 0,
                        "tags": [
                          "a tag"
                        ]
                      }
                    },
                    "rule_based": {
                      "message": "Segment read successfully.",
                      "data": {
                        "id": "a_rule_based_segment",
                        "isEnabled": true,
                        "description": "helpful summary of what this segment is",
                        "lastModifierName": "CONSOLE API",
                        "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                        "type": "rule_based",
                        "count": 0,
                        "rules": {
                          "name": "All Conditions",
                          "passPercentage": 10,
                          "conditions": [
                            {
                              "type": "public",
                              "operator": "string",
                              "targetValue": 0,
                              "field": "string",
                              "customID": "string"
                            }
                          ],
                          "returnValue": {
                            "key": true
                          }
                        },
                        "tags": [
                          "a tag"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "id_list": {
                    "message": "Segment read successfully.",
                    "data": {
                      "id": "an_id_list",
                      "isEnabled": true,
                      "description": "helpful summary of what this segment is",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                      "type": "id_list",
                      "count": 0,
                      "tags": [
                        "a tag"
                      ]
                    }
                  },
                  "rule_based": {
                    "message": "Segment read successfully.",
                    "data": {
                      "id": "a_rule_based_segment",
                      "isEnabled": true,
                      "description": "helpful summary of what this segment is",
                      "lastModifierName": "CONSOLE API",
                      "lastModifierID": "ahKwUoaNauHu9AmJPc2",
                      "type": "rule_based",
                      "count": 0,
                      "rules": {
                        "name": "All Conditions",
                        "passPercentage": 10,
                        "conditions": [
                          {
                            "type": "public",
                            "operator": "string",
                            "targetValue": 0,
                            "field": "string",
                            "customID": "string"
                          }
                        ],
                        "returnValue": {
                          "key": true
                        }
                      },
                      "tags": [
                        "a tag"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Segment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Segment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Segment deleted successfully."
                  }
                },
                "example": {
                  "message": "Segment deleted successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/add_ids": {
      "patch": {
        "summary": "Add IDs to User Store ID List",
        "description": "This endpoint has a limit of 1000 ids per request",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentIDListUserStoreContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User Store ID List updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "IDs successfully added to Segment ID List"
                  }
                },
                "example": {
                  "message": "IDs successfully added to Segment ID List"
                }
              }
            }
          },
          "400": {
            "description": "Segment must be of type 'user_store_id_list' to be modified on this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/archive": {
      "put": {
        "summary": "Archive Segment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archive Segment Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SegmentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Segment archived successfully."
                  }
                },
                "example": {
                  "message": "Segment archived successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/conditional": {
      "post": {
        "summary": "Update Segment Rules",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentRulesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rules Successfully Updated",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SegmentDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Rules successfully updated"
                  }
                },
                "example": {
                  "message": "Rules successfully updated"
                }
              }
            }
          },
          "400": {
            "description": "Segment must be of type 'rule_based' to be modified on this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/id_list": {
      "get": {
        "summary": "Get IDs in a Segment",
        "description": "This endpoint is rate limited to 100",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "IDs read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IDListDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Segments listed successfully.",
                    "data": {
                      "name": "small_id_list",
                      "count": 3,
                      "ids": [
                        "1, 2, 3"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Segments listed successfully.",
                  "data": {
                    "name": "small_id_list",
                    "count": 3,
                    "ids": [
                      "1, 2, 3"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Add IDs to Segment",
        "description": "This endpoint is rate limited to 900 requests /15m or 12 requests /10s.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentIDListContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Segment ids updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "IDs successfully added to Segment ID List"
                  }
                },
                "example": {
                  "message": "IDs successfully added to Segment ID List"
                }
              }
            }
          },
          "400": {
            "description": "Segment must be of type 'id_list' to be modified on this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Remove IDs from Segment",
        "description": "This endpoint is rate limited to 900 requests /15m or 12 requests /10s.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Segment ids deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "IDs successfully removed from Segment ID List"
                  }
                },
                "example": {
                  "message": "IDs successfully removed from Segment ID List"
                }
              }
            }
          },
          "400": {
            "description": "Segment must be of type 'id_list' to be modified on this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/id_list/reset": {
      "post": {
        "summary": "Reset ID List Segment",
        "description": "Warning: Not atomic for big ID lists (> 1000)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentIDListResetContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset ID List Segment Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Segment Reset reset successfully."
                  }
                },
                "example": {
                  "message": "Segment Reset reset successfully."
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/idlist_metadata": {
      "get": {
        "summary": "Get ID List Metadata",
        "description": "This endpoint gets the metadata of the ID List.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ID List metadata read successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/IDListMetadataDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "ID List metadata read successfully",
                    "data": {
                      "currentVersion": 3,
                      "isUpdating": true
                    }
                  }
                },
                "example": {
                  "message": "ID List metadata read successfully",
                  "data": {
                    "currentVersion": 3,
                    "isUpdating": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/segments/{id}/remove_ids": {
      "patch": {
        "summary": "Remove IDs from User Store ID List",
        "description": "This endpoint has a limit of 1000 ids per request",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentIDListUserStoreContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User Store ID List updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "IDs successfully removed from Segment ID List"
                  }
                },
                "example": {
                  "message": "IDs successfully removed from Segment ID List"
                }
              }
            }
          },
          "400": {
            "description": "Segment must be of type 'user_store_id_list' to be modified on this endpoint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Segment not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/settings/project": {
      "get": {
        "summary": "Get Project Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Project Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsProjectContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings read successfully.",
                    "data": {
                      "name": "Test Project",
                      "visibility": "CLOSED",
                      "default_unit_type": "user_id"
                    }
                  }
                },
                "example": {
                  "message": "Settings read successfully.",
                  "data": {
                    "name": "Test Project",
                    "visibility": "CLOSED",
                    "default_unit_type": "user_id"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Project Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsProjectContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Project Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsProjectContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings read successfully.",
                    "data": {
                      "name": "Test Project",
                      "visibility": "closed",
                      "default_unit_type": "stable_id"
                    }
                  }
                },
                "example": {
                  "message": "Settings read successfully.",
                  "data": {
                    "name": "Test Project",
                    "visibility": "closed",
                    "default_unit_type": "stable_id"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/settings/reviews": {
      "get": {
        "summary": "Get Reviews Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Reviews Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsReviewsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings read successfully.",
                    "data": {
                      "is_config_review_required": true,
                      "is_metric_review_required": true,
                      "is_metric_review_required_on_verified_only": false
                    }
                  }
                },
                "example": {
                  "message": "Settings read successfully.",
                  "data": {
                    "is_config_review_required": true,
                    "is_metric_review_required": true,
                    "is_metric_review_required_on_verified_only": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Reviews Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsReviewsContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Reviews Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsReviewsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings updated successfully.",
                    "data": {
                      "is_config_review_required": true,
                      "is_metric_review_required": true,
                      "is_metric_review_required_on_verified_only": true
                    }
                  }
                },
                "example": {
                  "message": "Settings updated successfully.",
                  "data": {
                    "is_config_review_required": true,
                    "is_metric_review_required": true,
                    "is_metric_review_required_on_verified_only": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/settings/roles": {
      "get": {
        "summary": "Get Roles Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Roles Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsRolesContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings read successfully.",
                    "data": {
                      "default_project_role": "Member"
                    }
                  }
                },
                "example": {
                  "message": "Settings read successfully.",
                  "data": {
                    "default_project_role": "Member"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Roles Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsRolesContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Roles Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsRolesContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings updated successfully.",
                    "data": {
                      "default_project_role": "Read Only"
                    }
                  }
                },
                "example": {
                  "message": "Settings updated successfully.",
                  "data": {
                    "default_project_role": "Read Only"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/settings/teams": {
      "get": {
        "summary": "Get Teams Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Teams Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsTeamsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings read successfully.",
                    "data": {
                      "require_teams_on_configs": true
                    }
                  }
                },
                "example": {
                  "message": "Settings read successfully.",
                  "data": {
                    "require_teams_on_configs": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update Teams Settings",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingsTeamsContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Teams Settings Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingsTeamsContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Settings updated successfully.",
                    "data": {
                      "require_teams_on_configs": false
                    }
                  }
                },
                "example": {
                  "message": "Settings updated successfully.",
                  "data": {
                    "require_teams_on_configs": false
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/tags": {
      "get": {
        "summary": "List Tags",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Tags Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TagDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Tags listed successfully",
                    "data": [
                      {
                        "id": "string",
                        "name": "a tag",
                        "description": "a description",
                        "isCore": false
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Tags listed successfully",
                  "data": [
                    {
                      "id": "string",
                      "name": "a tag",
                      "description": "a description",
                      "isCore": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Tag not found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tags",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Tag",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Tag Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TagDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Tag created successfully",
                    "data": {
                      "id": "string",
                      "name": "a tag",
                      "description": "a description",
                      "isCore": false
                    }
                  }
                },
                "example": {
                  "message": "Tag created successfully",
                  "data": {
                    "id": "string",
                    "name": "a tag",
                    "description": "a description",
                    "isCore": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tags",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/tags/{id}": {
      "get": {
        "summary": "Read Tag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Tag Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TagDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Tag read successfully",
                    "data": {
                      "id": "string",
                      "name": "a tag",
                      "description": "a description",
                      "isCore": false
                    }
                  }
                },
                "example": {
                  "message": "Tag read successfully",
                  "data": {
                    "id": "string",
                    "name": "a tag",
                    "description": "a description",
                    "isCore": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tag not found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tags",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Tag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Tag Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TagDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Tag updated successfully",
                    "data": {
                      "id": "string",
                      "name": "a tag",
                      "description": "a description",
                      "isCore": false
                    }
                  }
                },
                "example": {
                  "message": "Tag updated successfully",
                  "data": {
                    "id": "string",
                    "name": "a tag",
                    "description": "a description",
                    "isCore": false
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tags",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Tag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete tag response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Tag deleted successfully"
                  }
                },
                "example": {
                  "message": "Tag deleted successfully"
                }
              }
            }
          }
        },
        "tags": [
          "Tags",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/target_app": {
      "get": {
        "summary": "List Target Apps",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Target Apps Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TargetAppDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Target apps listed successfully.",
                    "data": [
                      {
                        "name": "Client-apps"
                      },
                      {
                        "name": "Server-apps"
                      }
                    ]
                  }
                },
                "example": {
                  "message": "Target apps listed successfully.",
                  "data": [
                    {
                      "name": "Client-apps"
                    },
                    {
                      "name": "Server-apps"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Target App",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetAppCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create Target App Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TargetAppDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "name": "Target app 1",
                    "description": "Example description",
                    "gates": [
                      "Example gate"
                    ],
                    "dynamicConfigs": [
                      "Example dynamic config"
                    ],
                    "experiments": [
                      "Example experiment"
                    ]
                  }
                },
                "example": {
                  "name": "Target app 1",
                  "description": "Example description",
                  "gates": [
                    "Example gate"
                  ],
                  "dynamicConfigs": [
                    "Example dynamic config"
                  ],
                  "experiments": [
                    "Example experiment"
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Bulk Assign Target Apps",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAssignConfigTargetAppDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk Assign Target Apps Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Target apps updated successfully."
                  }
                },
                "example": {
                  "message": "Target apps updated successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gates with IDs [not a gate] do not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/target_app/{id}": {
      "get": {
        "summary": "Read Target App",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read Target App Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TargetAppDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Target app read successfully.",
                    "data": {
                      "name": "Target app 1",
                      "id": "Example ID"
                    }
                  }
                },
                "example": {
                  "message": "Target app read successfully.",
                  "data": {
                    "name": "Target app 1",
                    "id": "Example ID"
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Target App",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTargetAppDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Target App Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Target apps updated successfully."
                  }
                },
                "example": {
                  "message": "Target apps updated successfully."
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Gates with IDs [not a gate] do not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Target App",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of target app",
            "schema": {
              "example": "string",
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Target App Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Target app deleted successfully"
                  }
                },
                "example": {
                  "message": "Target app deleted successfully"
                }
              }
            }
          }
        },
        "tags": [
          "Target App"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/unit_id_types": {
      "get": {
        "summary": "List Unit ID Types",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Unit ID Types Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UnitIdTypeContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Unit ID Types listed successfully.",
                    "data": [
                      {
                        "name": "testID",
                        "description": "My test ID type."
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 100,
                      "pageNumber": 1,
                      "totalItems": 1,
                      "nextPage": null,
                      "previousPage": null,
                      "all": "/console/v1/unit_id_types"
                    }
                  }
                },
                "example": {
                  "message": "Unit ID Types listed successfully.",
                  "data": [
                    {
                      "name": "testID",
                      "description": "My test ID type."
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 100,
                    "pageNumber": 1,
                    "totalItems": 1,
                    "nextPage": null,
                    "previousPage": null,
                    "all": "/console/v1/unit_id_types"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Unit ID Types"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Unit ID Type",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitIdTypeContractDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Create Unit ID Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnitIdTypeContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Unit ID Type created successfully.",
                    "data": {
                      "name": "newTestID",
                      "description": "My new test ID type."
                    }
                  }
                },
                "example": {
                  "message": "Unit ID Type created successfully.",
                  "data": {
                    "name": "newTestID",
                    "description": "My new test ID type."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Unit ID Types"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/unit_id_types/{id}": {
      "get": {
        "summary": "Get Unit ID Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Unit ID Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnitIdTypeContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Unit ID Type read successfully.",
                    "data": {
                      "name": "testID",
                      "description": "My test ID type."
                    }
                  }
                },
                "example": {
                  "message": "Unit ID Type read successfully.",
                  "data": {
                    "name": "testID",
                    "description": "My test ID type."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Unit ID Types"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Unit ID Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitIdTypeUpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Unit ID Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnitIdTypeContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Unit ID Type updated successfully.",
                    "data": {
                      "name": "testID",
                      "description": "My new description of my ID type."
                    }
                  }
                },
                "example": {
                  "message": "Unit ID Type updated successfully.",
                  "data": {
                    "name": "testID",
                    "description": "My new description of my ID type."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Unit ID Types"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Unit ID Type",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Unit ID Type Response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unit ID Type deleted successfully."
                  }
                },
                "example": {
                  "message": "Unit ID Type deleted successfully."
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Unit ID Types"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/users": {
      "get": {
        "summary": "List Users",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List users response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserContractDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "User listed successfully.",
                    "data": [
                      {
                        "email": "test@statsig.com",
                        "firstName": "a",
                        "lastName": "b",
                        "role": "admin"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "a",
                        "lastName": "b",
                        "role": "member"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "",
                        "role": "admin"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "",
                        "role": "member"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "member"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "admin"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "admin"
                      },
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "member"
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 10,
                      "pageNumber": 4,
                      "totalItems": 38,
                      "nextPage": null,
                      "previousPage": "/console/v1/users?page=3&limit=10",
                      "all": "/console/v1/users"
                    }
                  }
                },
                "example": {
                  "message": "User listed successfully.",
                  "data": [
                    {
                      "email": "test@statsig.com",
                      "firstName": "a",
                      "lastName": "b",
                      "role": "admin"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "a",
                      "lastName": "b",
                      "role": "member"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "",
                      "role": "admin"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "",
                      "role": "member"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "member"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "admin"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "admin"
                    },
                    {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "member"
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 10,
                    "pageNumber": 4,
                    "totalItems": 38,
                    "nextPage": null,
                    "previousPage": "/console/v1/users?page=3&limit=10",
                    "all": "/console/v1/users"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/users/{email}": {
      "get": {
        "summary": "Get user by email",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "User read successfully.",
                    "data": {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "admin"
                    }
                  }
                },
                "example": {
                  "message": "User read successfully.",
                  "data": {
                    "email": "test@statsig.com",
                    "firstName": "test",
                    "lastName": "user",
                    "role": "admin"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Update user",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "description": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserContractDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "User updated successfully.",
                    "data": {
                      "email": "test@statsig.com",
                      "firstName": "test",
                      "lastName": "user",
                      "role": "admin"
                    }
                  }
                },
                "example": {
                  "message": "User updated successfully.",
                  "data": {
                    "email": "test@statsig.com",
                    "firstName": "test",
                    "lastName": "user",
                    "role": "admin"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        404
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "status": 404,
                      "message": "Not Found. The requested resource could not be found."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/users/invite": {
      "post": {
        "summary": "Invite user. To avoid spamming, invitation emails are not sent. Invitee will see invitation notification in-app after logging in.",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInvitesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invite user response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "User(s) Invited successfully"
                  }
                },
                "example": {
                  "message": "User(s) Invited successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/users/teams": {
      "get": {
        "summary": "List Teams",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Results per page",
            "schema": {
              "example": 10,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "example": 1,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ],
              "type": "integer"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get teams response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaginationResponseWithMessage"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TeamDto"
                          }
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Teams listed successfully.",
                    "data": [
                      {
                        "name": "test",
                        "members": [
                          {
                            "email": "Test User@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "admin"
                          },
                          {
                            "email": "Test User@statsig.com",
                            "firstName": "test",
                            "lastName": "",
                            "role": "admin"
                          },
                          {
                            "email": "Test User@statsig.com",
                            "firstName": "test",
                            "lastName": "",
                            "role": "admin"
                          }
                        ],
                        "admins": [],
                        "defaultGateMetrics": [],
                        "defaultExperimentPrimaryMetrics": [],
                        "defaultExperimentSecondaryMetrics": [],
                        "defaultHoldoutMetrics": [],
                        "changeTeamConfigs": "anyone",
                        "reviewApproval": "anyone",
                        "defaultTargetApplications": []
                      },
                      {
                        "name": "Console Team",
                        "members": [
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "Test",
                            "lastName": "User",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "Test",
                            "lastName": "User",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "Test",
                            "lastName": "User",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "Test2",
                            "lastName": "User2",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "",
                            "role": "member"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "member"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "member"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "user",
                            "role": "Owner"
                          }
                        ],
                        "admins": [],
                        "defaultGateMetrics": [],
                        "defaultExperimentPrimaryMetrics": [],
                        "defaultExperimentSecondaryMetrics": [],
                        "defaultHoldoutMetrics": [],
                        "changeTeamConfigs": "anyone",
                        "reviewApproval": "anyone",
                        "defaultTargetApplications": []
                      },
                      {
                        "name": "WHN-ish Team",
                        "members": [
                          {
                            "email": "d@statsig.com",
                            "firstName": "d",
                            "lastName": "user",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "test",
                            "role": "admin"
                          }
                        ],
                        "admins": [
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "test",
                            "role": "admin"
                          },
                          {
                            "email": "test@statsig.com",
                            "firstName": "test",
                            "lastName": "test",
                            "role": "admin"
                          }
                        ],
                        "defaultGateMetrics": [
                          {
                            "name": "MA Custom Metric 2",
                            "type": "event_user"
                          },
                          {
                            "name": "MA Custom Metric 9",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "MA Custom Metric 3",
                            "type": "event_count_custom"
                          }
                        ],
                        "defaultExperimentPrimaryMetrics": [],
                        "defaultExperimentSecondaryMetrics": [
                          {
                            "name": "MA Custom Metric 2",
                            "type": "event_user"
                          },
                          {
                            "name": "MA Custom Metric 9",
                            "type": "event_count_custom"
                          },
                          {
                            "name": "MA Custom Metric 3",
                            "type": "event_count_custom"
                          }
                        ],
                        "defaultHoldoutMetrics": [],
                        "changeTeamConfigs": "team_only",
                        "reviewApproval": "team_only",
                        "defaultTargetApplications": []
                      }
                    ],
                    "pagination": {
                      "itemsPerPage": 3,
                      "pageNumber": 1,
                      "totalItems": 8,
                      "nextPage": "/console/v1/users/teams?page=2&limit=3",
                      "previousPage": null,
                      "all": "/console/v1/users/teams"
                    }
                  }
                },
                "example": {
                  "message": "Teams listed successfully.",
                  "data": [
                    {
                      "name": "test",
                      "members": [
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "admin"
                        },
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "admin"
                        }
                      ],
                      "admins": [],
                      "defaultGateMetrics": [],
                      "defaultExperimentPrimaryMetrics": [],
                      "defaultExperimentSecondaryMetrics": [],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "anyone",
                      "reviewApproval": "anyone",
                      "defaultTargetApplications": []
                    },
                    {
                      "name": "Console Team",
                      "members": [
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "Test",
                          "lastName": "User",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "Test",
                          "lastName": "User",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "Test",
                          "lastName": "User",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "Test2",
                          "lastName": "User2",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "member"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "member"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "member"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "Owner"
                        }
                      ],
                      "admins": [],
                      "defaultGateMetrics": [],
                      "defaultExperimentPrimaryMetrics": [],
                      "defaultExperimentSecondaryMetrics": [],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "anyone",
                      "reviewApproval": "anyone",
                      "defaultTargetApplications": []
                    },
                    {
                      "name": "WHN-ish Team",
                      "members": [
                        {
                          "email": "d@statsig.com",
                          "firstName": "d",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "test",
                          "role": "admin"
                        }
                      ],
                      "admins": [
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "test",
                          "role": "admin"
                        },
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "test",
                          "role": "admin"
                        }
                      ],
                      "defaultGateMetrics": [
                        {
                          "name": "MA Custom Metric 2",
                          "type": "event_user"
                        },
                        {
                          "name": "MA Custom Metric 9",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "MA Custom Metric 3",
                          "type": "event_count_custom"
                        }
                      ],
                      "defaultExperimentPrimaryMetrics": [],
                      "defaultExperimentSecondaryMetrics": [
                        {
                          "name": "MA Custom Metric 2",
                          "type": "event_user"
                        },
                        {
                          "name": "MA Custom Metric 9",
                          "type": "event_count_custom"
                        },
                        {
                          "name": "MA Custom Metric 3",
                          "type": "event_count_custom"
                        }
                      ],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "team_only",
                      "reviewApproval": "team_only",
                      "defaultTargetApplications": []
                    }
                  ],
                  "pagination": {
                    "itemsPerPage": 3,
                    "pageNumber": 1,
                    "totalItems": 8,
                    "nextPage": "/console/v1/users/teams?page=2&limit=3",
                    "previousPage": null,
                    "all": "/console/v1/users/teams"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "post": {
        "summary": "Create Team",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create team response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TeamDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Team created successfully.",
                    "data": {
                      "name": "The Avengers",
                      "members": [
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        }
                      ],
                      "admins": [],
                      "defaultGateMetrics": [],
                      "defaultExperimentPrimaryMetrics": [],
                      "defaultExperimentSecondaryMetrics": [],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "anyone",
                      "reviewApproval": "anyone",
                      "defaultTargetApplications": []
                    }
                  }
                },
                "example": {
                  "message": "Team created successfully.",
                  "data": {
                    "name": "The Avengers",
                    "members": [
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "admin"
                      }
                    ],
                    "admins": [],
                    "defaultGateMetrics": [],
                    "defaultExperimentPrimaryMetrics": [],
                    "defaultExperimentSecondaryMetrics": [],
                    "defaultHoldoutMetrics": [],
                    "changeTeamConfigs": "anyone",
                    "reviewApproval": "anyone",
                    "defaultTargetApplications": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/users/teams/{id}": {
      "get": {
        "summary": "Get Team",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get team response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TeamDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Team read successfully.",
                    "data": {
                      "name": "test",
                      "members": [
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        },
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "admin"
                        },
                        {
                          "email": "Test User@statsig.com",
                          "firstName": "test",
                          "lastName": "",
                          "role": "admin"
                        }
                      ],
                      "admins": [],
                      "defaultGateMetrics": [],
                      "defaultExperimentPrimaryMetrics": [],
                      "defaultExperimentSecondaryMetrics": [],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "anyone",
                      "reviewApproval": "anyone",
                      "defaultTargetApplications": []
                    }
                  }
                },
                "example": {
                  "message": "Team read successfully.",
                  "data": {
                    "name": "test",
                    "members": [
                      {
                        "email": "Test User@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "admin"
                      },
                      {
                        "email": "Test User@statsig.com",
                        "firstName": "test",
                        "lastName": "",
                        "role": "admin"
                      },
                      {
                        "email": "Test User@statsig.com",
                        "firstName": "test",
                        "lastName": "",
                        "role": "admin"
                      }
                    ],
                    "admins": [],
                    "defaultGateMetrics": [],
                    "defaultExperimentPrimaryMetrics": [],
                    "defaultExperimentSecondaryMetrics": [],
                    "defaultHoldoutMetrics": [],
                    "changeTeamConfigs": "anyone",
                    "reviewApproval": "anyone",
                    "defaultTargetApplications": []
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "patch": {
        "summary": "Update Team. Ops: Replace. Use GET for current data if you intent to Add.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamPartialUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update team response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SingleDataResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TeamDto"
                        }
                      }
                    }
                  ],
                  "example": {
                    "message": "Team updated successfully.",
                    "data": {
                      "name": "The Avengers",
                      "members": [
                        {
                          "email": "test@statsig.com",
                          "firstName": "test",
                          "lastName": "user",
                          "role": "admin"
                        }
                      ],
                      "admins": [],
                      "defaultGateMetrics": [
                        {
                          "name": "A metric for asd ",
                          "type": "event_count_custom"
                        }
                      ],
                      "defaultExperimentPrimaryMetrics": [
                        {
                          "name": "A metric for aaaa ",
                          "type": "event_count_custom"
                        }
                      ],
                      "defaultExperimentSecondaryMetrics": [],
                      "defaultHoldoutMetrics": [],
                      "changeTeamConfigs": "anyone",
                      "reviewApproval": "anyone",
                      "defaultTargetApplications": [
                        "Android"
                      ]
                    }
                  }
                },
                "example": {
                  "message": "Team updated successfully.",
                  "data": {
                    "name": "The Avengers",
                    "members": [
                      {
                        "email": "test@statsig.com",
                        "firstName": "test",
                        "lastName": "user",
                        "role": "admin"
                      }
                    ],
                    "admins": [],
                    "defaultGateMetrics": [
                      {
                        "name": "A metric for asd ",
                        "type": "event_count_custom"
                      }
                    ],
                    "defaultExperimentPrimaryMetrics": [
                      {
                        "name": "A metric for aaaa ",
                        "type": "event_count_custom"
                      }
                    ],
                    "defaultExperimentSecondaryMetrics": [],
                    "defaultHoldoutMetrics": [],
                    "changeTeamConfigs": "anyone",
                    "reviewApproval": "anyone",
                    "defaultTargetApplications": [
                      "Android"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request. Please check the request input and try again.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        400
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "status": 400,
                      "message": "Invalid request. Please check the request input and try again."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        401
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Invalid Endpoint": {
                    "value": {
                      "status": 401,
                      "message": "This endpoint only accepts an active CONSOLE key, but an invalid key was sent. Key: console-xxxXXXxxxXXXxxx"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Team",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete team response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Team deleted successfully"
                  }
                },
                "example": {
                  "message": "Team deleted successfully"
                }
              }
            }
          }
        },
        "tags": [
          "Users",
          "MCP"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    },
    "/console/v1/wh_connections": {
      "patch": {
        "summary": "Update Warehouse Connection Parameters",
        "parameters": [
          {
            "name": "x-respect-review-settings",
            "in": "header",
            "description": "Optional header to respect review settings for mutation endpoints.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WhConnectionUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connection updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Connection updated successfully"
                  }
                },
                "example": {
                  "message": "Connection updated successfully"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "enum": [
                        403
                      ]
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "status",
                    "message"
                  ]
                },
                "examples": {
                  "Forbidden resource": {
                    "value": {
                      "status": 403,
                      "message": "Forbidden. The request was valid, but the server is refusing action. You might not have the necessary permissions to access the resource."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Warehouse Connections"
        ],
        "security": [
          {
            "STATSIG-API-KEY": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "STATSIG-API-KEY": {
        "type": "apiKey",
        "name": "STATSIG-API-KEY",
        "in": "header"
      }
    },
    "schemas": {
      "AIConfigCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "Name for the AI Config.",
            "example": "my_prompt"
          },
          "displayName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "Optional display name for the AI Config."
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "Description for the AI Config."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "List of target app names."
          },
          "team": {
            "type": "string",
            "description": "Team name."
          },
          "teamID": {
            "type": "string",
            "description": "Team ID."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags to associate with the AI Config."
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "AIConfigPartialUpdateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "Updated description."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Updated list of target app names."
          },
          "team": {
            "type": "string",
            "description": "Updated team name."
          },
          "teamID": {
            "type": "string",
            "description": "Updated team ID."
          }
        }
      },
      "AIConfigVersionCreateDto": {
        "type": "object",
        "properties": {
          "prompts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "role": {
                  "type": "string",
                  "enum": [
                    "system",
                    "user",
                    "assistant"
                  ]
                }
              },
              "required": [
                "content",
                "role"
              ]
            }
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "model": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The Prompt Version display name",
            "example": "my_config"
          },
          "provider": {
            "type": "string"
          },
          "workflow_body": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "JSON"
                ]
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "value"
            ]
          },
          "workflow_headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "auth_workflow_headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "eval_model": {
            "type": "string"
          },
          "top_p": {
            "type": "number",
            "format": "double"
          },
          "frequency_penalty": {
            "type": "number",
            "format": "double"
          },
          "presence_penalty": {
            "type": "number",
            "format": "double"
          },
          "max_tokens": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-.]*$",
            "description": "The Prompt Version name ID"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "AlertSchemaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the alert"
          },
          "name": {
            "type": "string",
            "description": "Name of the alert"
          },
          "alertType": {
            "type": "string",
            "enum": [
              "threshold",
              "change",
              "pct_change"
            ],
            "description": "Type of alert"
          },
          "metrics": {
            "type": "object",
            "properties": {},
            "description": "List of metrics associated with this alert"
          },
          "metricGroupBys": {
            "type": "object",
            "properties": {},
            "description": "Metric groupbys"
          },
          "formula": {
            "type": "string",
            "description": "Formula for the alert"
          },
          "message": {
            "type": "string",
            "description": "Alert message"
          },
          "creatorID": {
            "type": "string"
          },
          "companyID": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": [
              "P0",
              "P1",
              "P2",
              "P3",
              "P4",
              "P5"
            ],
            "description": "Priority of this alert"
          },
          "alertThreshold": {
            "type": "number",
            "format": "double"
          },
          "warningThreshold": {
            "type": "number",
            "format": "double"
          },
          "windowMs": {
            "type": "number",
            "description": "How far back and how frequently a metric should be checked, in milliseconds",
            "format": "double"
          },
          "condition": {
            "type": "string",
            "enum": [
              "greater",
              "greater_or_equal",
              "less",
              "less_or_equal",
              "equal",
              "not_equal"
            ],
            "description": "Condition under which a metric change triggers an alert in milliseconds"
          },
          "renotificationConditions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "raise",
                "warn",
                "no-data"
              ]
            },
            "description": "Condition under which a re-notification is sent"
          },
          "renotificationWindowMs": {
            "type": "number",
            "description": "How long to wait before re-notifying in milliseconds",
            "format": "double"
          },
          "renotificationMessage": {
            "type": "string",
            "description": "Re-notification message"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Team associated with this alert"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with this alert"
          }
        },
        "required": [
          "id",
          "name",
          "alertType",
          "metrics",
          "metricGroupBys",
          "message",
          "companyID",
          "priority",
          "alertThreshold",
          "windowMs",
          "condition",
          "tags"
        ]
      },
      "ArchiveSchemaDto": {
        "type": "object",
        "properties": {
          "forceArchive": {
            "type": "boolean"
          },
          "archiveReason": {
            "type": "string",
            "description": "The reason for archiving the gate",
            "example": "The gate is no longer needed"
          }
        }
      },
      "AssignmentSourceContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the assignment source."
          },
          "description": {
            "type": "string",
            "description": "Detailed context and purpose of the assignment source."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the assignment source as verified for internal trustworthiness."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for categorization and search."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source for assignments."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Column name representing the timestamp of assignments."
          },
          "experimentIDColumn": {
            "type": "string",
            "description": "Column name for the experiment ID associated with the assignments."
          },
          "groupIDColumn": {
            "type": "string",
            "description": "Column name for the group ID linked to the assignments."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name associated with the ID type mapping."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their respective columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          }
        },
        "required": [
          "name",
          "description",
          "tags",
          "sql",
          "timestampColumn",
          "experimentIDColumn",
          "groupIDColumn",
          "idTypeMapping"
        ]
      },
      "AssignmentSourceCreationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the assignment source."
          },
          "description": {
            "type": "string",
            "description": "Optional detailed context for the assignment source."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the assignment source as verified for internal trustworthiness."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source for assignments."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Column name representing the timestamp of assignments."
          },
          "experimentIDColumn": {
            "type": "string",
            "description": "Column name for the experiment ID associated with the assignments."
          },
          "groupIDColumn": {
            "type": "string",
            "description": "Column name for the group ID linked to the assignments."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name associated with the ID type mapping."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their respective columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the assignment source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "name",
          "sql",
          "timestampColumn",
          "experimentIDColumn",
          "groupIDColumn",
          "idTypeMapping"
        ]
      },
      "AssignmentSourcePartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the assignment source."
          },
          "description": {
            "type": "string",
            "description": "Detailed context and purpose of the assignment source."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the assignment source as verified for internal trustworthiness."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for categorization and search."
          },
          "sql": {
            "readOnly": true,
            "description": "SQL query defining the data source for assignments."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Column name representing the timestamp of assignments."
          },
          "experimentIDColumn": {
            "type": "string",
            "description": "Column name for the experiment ID associated with the assignments."
          },
          "groupIDColumn": {
            "type": "string",
            "description": "Column name for the group ID linked to the assignments."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name associated with the ID type mapping."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their respective columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the assignment source (used to validate that inputs are correct)"
          }
        }
      },
      "AssignmentSourceQueryUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional new name for the assignment source."
          },
          "description": {
            "type": "string",
            "description": "Optional updated context for the assignment source."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the assignment source as verified for internal trustworthiness."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional updated tags for categorization."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source for assignments."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Column name representing the timestamp of assignments."
          },
          "experimentIDColumn": {
            "type": "string",
            "description": "Column name for the experiment ID associated with the assignments."
          },
          "groupIDColumn": {
            "type": "string",
            "description": "Column name for the group ID linked to the assignments."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name associated with the ID type mapping."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their respective columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the assignment source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "sql",
          "timestampColumn",
          "experimentIDColumn",
          "groupIDColumn",
          "idTypeMapping"
        ]
      },
      "AuditLogDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "abc123",
            "description": "id of the audit log"
          },
          "name": {
            "type": "string",
            "example": "Gate View",
            "description": "name of the audit log"
          },
          "changeLog": {
            "type": "string",
            "example": "Edited Gate View",
            "description": "change log of the audit log"
          },
          "actionType": {
            "type": "object"
          },
          "date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "updatedByUserID": {
            "type": "string"
          },
          "modifierEmail": {
            "type": "object"
          },
          "changes": {
            "type": "object"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetAppIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "changeLog",
          "actionType",
          "date",
          "time",
          "updatedBy",
          "updatedByUserID",
          "modifierEmail",
          "changes",
          "tags"
        ]
      },
      "AutotuneCreateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief summary of what the autotune is being used for."
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Variant name"
                },
                "json": {
                  "description": "Variant JSON data"
                },
                "size": {
                  "type": "number",
                  "description": "Variant size"
                }
              },
              "required": [
                "name",
                "json"
              ],
              "description": "An array of Variant objects"
            },
            "minItems": 2,
            "description": "An array of Variant objects."
          },
          "successEvent": {
            "type": "string",
            "description": "The event you are trying to optimize for."
          },
          "successEventValue": {
            "type": "string",
            "description": "The value that should come with the event for it to be considered successful."
          },
          "explorationWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "24hr",
              "48hr",
              "168hr",
              "336hr",
              "1",
              "24",
              "48",
              "168",
              "336",
              "1hrs",
              "24hrs",
              "48hrs",
              "168hrs",
              "336hrs"
            ],
            "description": "The initial time period where Autotune will equally split the traffic."
          },
          "attributionWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "2hr",
              "4hr",
              "24hr",
              "1hrs",
              "2hrs",
              "4hrs",
              "24hrs",
              "1",
              "2",
              "4",
              "24"
            ],
            "description": "The maximum duration between the exposure and success event that counts as a success."
          },
          "attributionWindowUnit": {
            "type": "string",
            "enum": [
              "min",
              "hour",
              "day"
            ],
            "description": "Time unit of attribution window"
          },
          "explorationWindowRate": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Exploration window rate",
            "format": "double"
          },
          "longtermExplorationAllocation": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Long term exploration allocation",
            "format": "double"
          },
          "winnerThreshold": {
            "type": "string",
            "enum": [
              "80%",
              "90%",
              "95%",
              "98%",
              "99%"
            ],
            "description": "The \"probability of best\" threshold a variant needs to achieve for Autotune to declare it the winner, stop collecting data, and direct all traffic."
          },
          "metadataField": {
            "type": "string",
            "description": "Metadata field containing the numeric value to optimize for. If this field is null, autotune optimizes for the existence of a follow-up event. This is only used for contextual autotunes."
          },
          "higherIsBetter": {
            "type": "boolean",
            "description": "Whether to optimize for an increase or decrease in the metadata field value. Default is true. This is only used for contextual autotunes."
          },
          "isContextual": {
            "type": "boolean",
            "description": "Makes this autotune contextual"
          },
          "metricSourceID": {
            "type": "string",
            "description": "Metric source to pull success event data from"
          },
          "linkedExperimentName": {
            "type": "string",
            "description": "Linked experiment to measure the success of the Autotune"
          },
          "goalRichText": {
            "type": "string",
            "description": "Autotune goal"
          },
          "optimizationParameter": {
            "type": "string",
            "enum": [
              "occurrence",
              "value"
            ],
            "description": "Optimize for event occurrence vs value"
          },
          "valueColumn": {
            "type": "string",
            "description": "Metric source column to optimize for"
          },
          "featureList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of features that should be included in the analysis"
          },
          "name": {
            "type": "string",
            "description": "The name that was originally given to the autotune on creation but formatted as an ID (\"A Autotune\" -> \"a_autotune\")."
          },
          "idType": {
            "type": "string",
            "description": "idType of the autotune (userID, stableID, or a customID). Defaults to userID if not provided"
          }
        },
        "required": [
          "variants",
          "successEvent",
          "explorationWindow",
          "attributionWindow",
          "winnerThreshold",
          "name"
        ]
      },
      "AutotuneExperimentDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Detailed description of the configuration’s purpose."
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Variant name"
                },
                "json": {
                  "description": "Variant JSON data"
                },
                "size": {
                  "type": "number",
                  "description": "Variant size"
                },
                "id": {
                  "type": "string",
                  "description": "The name that was originally given to the autotune on creation but formatted as an ID (\"A Autotune\" -> \"a_autotune\")."
                }
              },
              "required": [
                "name",
                "json",
                "id"
              ]
            }
          },
          "successEvent": {
            "type": "string",
            "description": "The event you are trying to optimize for."
          },
          "successEventValue": {
            "type": "string",
            "description": "The value that should come with the event for it to be considered successful."
          },
          "explorationWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "24hr",
              "48hr",
              "168hr",
              "336hr",
              "1",
              "24",
              "48",
              "168",
              "336",
              "1hrs",
              "24hrs",
              "48hrs",
              "168hrs",
              "336hrs"
            ],
            "description": "The initial time period where Autotune will equally split the traffic."
          },
          "attributionWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "2hr",
              "4hr",
              "24hr",
              "1hrs",
              "2hrs",
              "4hrs",
              "24hrs",
              "1",
              "2",
              "4",
              "24"
            ],
            "description": "The maximum duration between the exposure and success event that counts as a success."
          },
          "attributionWindowUnit": {
            "type": "string",
            "enum": [
              "min",
              "hour",
              "day"
            ],
            "description": "Time unit of attribution window"
          },
          "explorationWindowRate": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Exploration window rate",
            "format": "double"
          },
          "longtermExplorationAllocation": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Long term exploration allocation",
            "format": "double"
          },
          "winnerThreshold": {
            "type": "string",
            "enum": [
              "80%",
              "90%",
              "95%",
              "98%",
              "99%"
            ],
            "description": "The \"probability of best\" threshold a variant needs to achieve for Autotune to declare it the winner, stop collecting data, and direct all traffic."
          },
          "metadataField": {
            "type": "string",
            "description": "Metadata field containing the numeric value to optimize for. If this field is null, autotune optimizes for the existence of a follow-up event. This is only used for contextual autotunes."
          },
          "higherIsBetter": {
            "type": "boolean",
            "description": "Whether to optimize for an increase or decrease in the metadata field value. Default is true. This is only used for contextual autotunes."
          },
          "isContextual": {
            "type": "boolean",
            "description": "Whether this is a contextual autotune"
          },
          "metricSourceID": {
            "type": "string",
            "description": "Metric source to pull success event data from"
          },
          "linkedExperimentName": {
            "type": "string",
            "description": "Linked experiment to measure the success of the Autotune"
          },
          "goalRichText": {
            "type": "string",
            "description": "Autotune goal"
          },
          "optimizationParameter": {
            "type": "string",
            "enum": [
              "occurrence",
              "value"
            ],
            "description": "Optimize for event occurrence vs value"
          },
          "valueColumn": {
            "type": "string",
            "description": "Metric source column to optimize for"
          },
          "featureList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of features that should be included in the analysis"
          },
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Optional name for the configuration."
          },
          "idType": {
            "type": "string",
            "description": "Type of ID"
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created the entity."
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the creator."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "targetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of target applications associated with this configuration."
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional name for the responsible team."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the responsible team."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "isStarted": {
            "type": "boolean",
            "description": "Is the autotune experiment currently running."
          },
          "winner": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The Statsig UserID of the last modifier of this autotune."
              },
              "name": {
                "type": "string",
                "description": "The Statsig Username of the last modifier of this autotune."
              }
            },
            "required": [
              "id",
              "name"
            ],
            "nullable": true
          }
        },
        "required": [
          "description",
          "variants",
          "successEvent",
          "successEventValue",
          "explorationWindow",
          "attributionWindow",
          "winnerThreshold",
          "id",
          "idType",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "creatorID",
          "createdTime",
          "creatorName",
          "creatorEmail",
          "isStarted",
          "winner"
        ]
      },
      "AutotuneFullUpdateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief summary of what the autotune is being used for."
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Variant name"
                },
                "json": {
                  "description": "Variant JSON data"
                },
                "size": {
                  "type": "number",
                  "description": "Variant size"
                }
              },
              "required": [
                "name",
                "json"
              ],
              "description": "An array of Variant objects"
            },
            "minItems": 2,
            "description": "An array of Variant objects."
          },
          "successEvent": {
            "type": "string",
            "description": "The event you are trying to optimize for."
          },
          "successEventValue": {
            "type": "string",
            "description": "The value that should come with the event for it to be considered successful."
          },
          "explorationWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "24hr",
              "48hr",
              "168hr",
              "336hr",
              "1",
              "24",
              "48",
              "168",
              "336",
              "1hrs",
              "24hrs",
              "48hrs",
              "168hrs",
              "336hrs"
            ],
            "description": "The initial time period where Autotune will equally split the traffic."
          },
          "attributionWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "2hr",
              "4hr",
              "24hr",
              "1hrs",
              "2hrs",
              "4hrs",
              "24hrs",
              "1",
              "2",
              "4",
              "24"
            ],
            "description": "The maximum duration between the exposure and success event that counts as a success."
          },
          "attributionWindowUnit": {
            "type": "string",
            "enum": [
              "min",
              "hour",
              "day"
            ],
            "description": "Time unit of attribution window"
          },
          "explorationWindowRate": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Exploration window rate",
            "format": "double"
          },
          "longtermExplorationAllocation": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Long term exploration allocation",
            "format": "double"
          },
          "winnerThreshold": {
            "type": "string",
            "enum": [
              "80%",
              "90%",
              "95%",
              "98%",
              "99%"
            ],
            "description": "The \"probability of best\" threshold a variant needs to achieve for Autotune to declare it the winner, stop collecting data, and direct all traffic."
          },
          "metadataField": {
            "type": "string",
            "description": "Metadata field containing the numeric value to optimize for. If this field is null, autotune optimizes for the existence of a follow-up event. This is only used for contextual autotunes."
          },
          "higherIsBetter": {
            "type": "boolean",
            "description": "Whether to optimize for an increase or decrease in the metadata field value. Default is true. This is only used for contextual autotunes."
          },
          "isContextual": {
            "type": "boolean",
            "description": "Whether this is a contextual autotune"
          },
          "metricSourceID": {
            "type": "string",
            "description": "Metric source to pull success event data from"
          },
          "linkedExperimentName": {
            "type": "string",
            "description": "Linked experiment to measure the success of the Autotune"
          },
          "goalRichText": {
            "type": "string",
            "description": "Autotune goal"
          },
          "optimizationParameter": {
            "type": "string",
            "enum": [
              "occurrence",
              "value"
            ],
            "description": "Optimize for event occurrence vs value"
          },
          "valueColumn": {
            "type": "string",
            "description": "Metric source column to optimize for"
          },
          "featureList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of features that should be included in the analysis"
          }
        },
        "required": [
          "variants",
          "successEvent",
          "explorationWindow",
          "attributionWindow",
          "winnerThreshold"
        ],
        "description": "Autotune object",
        "example": {
          "id": "my_autotunes_are_best",
          "isStarted": false,
          "description": "helpful summary of what this Autotune is",
          "lastModifierID": "ahKwUoaNauHu9AmJPc2",
          "lastModifierName": "CONSOLE API",
          "variants": [
            {
              "name": "red",
              "json": {
                "foo": "boo"
              },
              "size": 50
            },
            {
              "name": "blue",
              "json": {},
              "size": 50
            }
          ],
          "successEvent": "purchase_item",
          "successEventValue": "",
          "explorationWindow": "1hr",
          "attributionWindow": "2hrs",
          "winnerThreshold": "99%",
          "idType": "userID"
        }
      },
      "AutotunePartialUpdateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A brief summary of what the autotune is being used for."
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Variant name"
                },
                "json": {
                  "description": "Variant JSON data"
                },
                "size": {
                  "type": "number",
                  "description": "Variant size"
                }
              },
              "required": [
                "name",
                "json"
              ],
              "description": "An array of Variant objects"
            },
            "minItems": 2,
            "description": "An array of Variant objects."
          },
          "successEvent": {
            "type": "string",
            "description": "The event you are trying to optimize for."
          },
          "successEventValue": {
            "type": "string",
            "description": "The value that should come with the event for it to be considered successful."
          },
          "explorationWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "24hr",
              "48hr",
              "168hr",
              "336hr",
              "1",
              "24",
              "48",
              "168",
              "336",
              "1hrs",
              "24hrs",
              "48hrs",
              "168hrs",
              "336hrs"
            ],
            "description": "The initial time period where Autotune will equally split the traffic."
          },
          "attributionWindow": {
            "type": "string",
            "enum": [
              "1hr",
              "2hr",
              "4hr",
              "24hr",
              "1hrs",
              "2hrs",
              "4hrs",
              "24hrs",
              "1",
              "2",
              "4",
              "24"
            ],
            "description": "The maximum duration between the exposure and success event that counts as a success."
          },
          "attributionWindowUnit": {
            "type": "string",
            "enum": [
              "min",
              "hour",
              "day"
            ],
            "description": "Time unit of attribution window"
          },
          "explorationWindowRate": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Exploration window rate",
            "format": "double"
          },
          "longtermExplorationAllocation": {
            "type": "number",
            "minimum": 0.001,
            "maximum": 1,
            "description": "Long term exploration allocation",
            "format": "double"
          },
          "winnerThreshold": {
            "type": "string",
            "enum": [
              "80%",
              "90%",
              "95%",
              "98%",
              "99%"
            ],
            "description": "The \"probability of best\" threshold a variant needs to achieve for Autotune to declare it the winner, stop collecting data, and direct all traffic."
          },
          "metadataField": {
            "type": "string",
            "description": "Metadata field containing the numeric value to optimize for. If this field is null, autotune optimizes for the existence of a follow-up event. This is only used for contextual autotunes."
          },
          "higherIsBetter": {
            "type": "boolean",
            "description": "Whether to optimize for an increase or decrease in the metadata field value. Default is true. This is only used for contextual autotunes."
          },
          "isContextual": {
            "type": "boolean",
            "description": "Whether this is a contextual autotune"
          },
          "metricSourceID": {
            "type": "string",
            "description": "Metric source to pull success event data from"
          },
          "linkedExperimentName": {
            "type": "string",
            "description": "Linked experiment to measure the success of the Autotune"
          },
          "goalRichText": {
            "type": "string",
            "description": "Autotune goal"
          },
          "optimizationParameter": {
            "type": "string",
            "enum": [
              "occurrence",
              "value"
            ],
            "description": "Optimize for event occurrence vs value"
          },
          "valueColumn": {
            "type": "string",
            "description": "Metric source column to optimize for"
          },
          "featureList": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of features that should be included in the analysis"
          }
        }
      },
      "BulkAssignConfigTargetAppDto": {
        "type": "object",
        "properties": {
          "targetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "description": "target app ids"
          },
          "gates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gate IDs to assign to target app(s)"
          },
          "dynamicConfigs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Dynamic Config IDs to assign to target app(s)"
          },
          "experiments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Experiment IDs to assign to target app(s)"
          }
        },
        "required": [
          "targetApps"
        ]
      },
      "ChangeValidationDto": {
        "type": "object",
        "properties": {
          "reviewID": {
            "type": "string"
          },
          "validated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "debugLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "url"
              ]
            }
          }
        },
        "required": [
          "reviewID",
          "validated"
        ]
      },
      "ChangeValidationUpdateMessageDto": {
        "type": "object",
        "properties": {
          "reviewID": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "reviewID"
        ]
      },
      "CompanyInfoResponseDto": {
        "type": "object",
        "properties": {
          "companyID": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "isWarehouseNative": {
            "type": "boolean"
          },
          "orgID": {
            "type": "string",
            "nullable": true
          },
          "orgName": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "companyID",
          "companyName",
          "isWarehouseNative",
          "orgID",
          "orgName"
        ]
      },
      "CumulativeExposureResponseDto": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "groupID": {
              "type": "string"
            },
            "groupName": {
              "type": "string"
            },
            "results": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "exposures": {
                    "type": "number"
                  }
                },
                "required": [
                  "date",
                  "exposures"
                ]
              }
            }
          },
          "required": [
            "groupID",
            "groupName",
            "results"
          ]
        }
      },
      "DynamicConfigCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The dynamic config display name",
            "example": "my_config"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is the dynamic config enabled",
            "default": true
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "returnValueJson5": {
                  "type": "string"
                },
                "variants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "passPercentage": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "multipleOf": 0.01
                      },
                      "returnValue": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "returnValueJson5": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "passPercentage"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "conditions"
              ]
            },
            "description": "An array of Rule objects"
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The fallback JSON object when no rules are triggered"
          },
          "defaultValueJson5": {
            "type": "string",
            "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the dynamic config is based on.",
            "example": "userID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tag names attached to the dynamic config"
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true,
            "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
          },
          "schemaJson5": {
            "type": "string",
            "nullable": true,
            "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the dynamic config, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the dynamic config, Enterprise only."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true,
            "description": "The release pipeline ID associated with the dynamic config"
          },
          "id": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-.]*$",
            "description": "The dynamic config name ID"
          },
          "isTemplate": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "DynamicConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "Optional name for the configuration.",
            "example": "my_config"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the dynamic config is based on.",
            "example": "userID"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A brief summary of what the dynamic config is being used for",
            "example": "helpful summary of what this dynamic config does"
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tag names attached to the dynamic config",
            "example": [
              "a tag"
            ]
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the dynamic config, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the dynamic config, Enterprise only."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is the dynamic config enabled",
            "default": true
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "returnValueJson5": {
                  "type": "string"
                },
                "variants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "passPercentage": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "multipleOf": 0.01
                      },
                      "returnValue": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "returnValueJson5": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "passPercentage"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            },
            "description": "An array of Rule objects"
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The fallback JSON object when no rules are triggered"
          },
          "defaultValueJson5": {
            "type": "string",
            "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true,
            "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
          },
          "schemaJson5": {
            "type": "string",
            "nullable": true,
            "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true,
            "description": "The release pipeline ID associated with the dynamic config"
          },
          "isTemplate": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "Enabled",
              "Disabled",
              "Archived"
            ]
          }
        },
        "required": [
          "id",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "createdTime",
          "creatorName",
          "isEnabled",
          "rules"
        ]
      },
      "DynamicConfigFullUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "Optional name for the configuration.",
            "example": "my_config"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is the dynamic config enabled",
            "default": true
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A brief summary of what the dynamic config is being used for",
            "example": "helpful summary of what this dynamic config does"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "returnValueJson5": {
                  "type": "string"
                },
                "variants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "passPercentage": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "multipleOf": 0.01
                      },
                      "returnValue": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "returnValueJson5": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "passPercentage"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "conditions"
              ]
            },
            "description": "An array of Rule objects"
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The fallback JSON object when no rules are triggered"
          },
          "defaultValueJson5": {
            "type": "string",
            "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the dynamic config is based on.",
            "example": "userID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tag names attached to the dynamic config",
            "example": [
              "a tag"
            ]
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true,
            "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
          },
          "schemaJson5": {
            "type": "string",
            "nullable": true,
            "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the dynamic config, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the dynamic config, Enterprise only."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true,
            "description": "The release pipeline ID associated with the dynamic config"
          }
        },
        "required": [
          "isEnabled",
          "description",
          "rules"
        ]
      },
      "DynamicConfigPartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "Optional name for the configuration.",
            "example": "my_config"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Is the dynamic config enabled",
            "default": true
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A brief summary of what the dynamic config is being used for",
            "example": "helpful summary of what this dynamic config does"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "returnValueJson5": {
                  "type": "string"
                },
                "variants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "passPercentage": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "multipleOf": 0.01
                      },
                      "returnValue": {
                        "type": "object",
                        "additionalProperties": {}
                      },
                      "returnValueJson5": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "passPercentage"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "conditions"
              ]
            },
            "description": "An array of Rule objects"
          },
          "defaultValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The fallback JSON object when no rules are triggered"
          },
          "defaultValueJson5": {
            "type": "string",
            "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the dynamic config is based on.",
            "example": "userID"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of tag names attached to the dynamic config",
            "example": [
              "a tag"
            ]
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true,
            "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
          },
          "schemaJson5": {
            "type": "string",
            "nullable": true,
            "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the dynamic config, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the dynamic config, Enterprise only."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true,
            "description": "The release pipeline ID associated with the dynamic config"
          }
        }
      },
      "DynamicConfigRuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this rule."
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 0.01,
            "description": "Of the users that meet the conditions of this rule, what percent should return true.",
            "format": "double"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "targetValue": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "nullable": true
                },
                "operator": {
                  "type": "string"
                },
                "field": {
                  "type": "string",
                  "nullable": true
                },
                "customID": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "app_version",
                    "browser_name",
                    "browser_version",
                    "country",
                    "custom_field",
                    "email",
                    "environment_tier",
                    "fails_gate",
                    "fails_segment",
                    "ip_address",
                    "locale",
                    "os_name",
                    "os_version",
                    "passes_gate",
                    "passes_segment",
                    "public",
                    "time",
                    "unit_id",
                    "user_id",
                    "url",
                    "javascript",
                    "device_model",
                    "target_app"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "description": "An array of Condition objects."
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The environments this rule is enabled for."
          },
          "id": {
            "type": "string",
            "description": "The Statsig ID of this rule."
          },
          "baseID": {
            "type": "string",
            "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
          },
          "returnValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The return value of the rule."
          },
          "completedAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          },
          "pendingAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          }
        },
        "required": [
          "name",
          "passPercentage",
          "conditions"
        ]
      },
      "DynamicConfigRulePartialDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this rule."
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 0.01,
            "description": "Of the users that meet the conditions of this rule, what percent should return true.",
            "format": "double"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "targetValue": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "nullable": true
                },
                "operator": {
                  "type": "string"
                },
                "field": {
                  "type": "string",
                  "nullable": true
                },
                "customID": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "app_version",
                    "browser_name",
                    "browser_version",
                    "country",
                    "custom_field",
                    "email",
                    "environment_tier",
                    "fails_gate",
                    "fails_segment",
                    "ip_address",
                    "locale",
                    "os_name",
                    "os_version",
                    "passes_gate",
                    "passes_segment",
                    "public",
                    "time",
                    "unit_id",
                    "user_id",
                    "url",
                    "javascript",
                    "device_model",
                    "target_app"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "description": "An array of Condition objects."
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "The Statsig ID of this rule."
          },
          "baseID": {
            "type": "string",
            "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
          },
          "returnValue": {
            "type": "object",
            "additionalProperties": {}
          },
          "completedAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          },
          "pendingAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          },
          "returnValueJson5": {
            "type": "string"
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "returnValueJson5": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "passPercentage"
              ]
            }
          }
        }
      },
      "DynamicConfigRulesDto": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          }
        },
        "required": [
          "rules"
        ]
      },
      "EchidnaGateLoadPulseQueryDto": {
        "type": "object",
        "properties": {
          "refresh": {
            "default": "full",
            "type": "string",
            "enum": [
              "full",
              "incremental",
              "metric"
            ]
          },
          "metricIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ruleId": {
            "type": "string"
          },
          "turboMode": {
            "type": "boolean"
          }
        },
        "required": [
          "ruleId"
        ]
      },
      "EchidnaLoadPulseQueryDto": {
        "type": "object",
        "properties": {
          "refresh": {
            "default": "full",
            "type": "string",
            "enum": [
              "full",
              "incremental",
              "metric"
            ]
          },
          "metricIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ruleId": {
            "type": "string"
          },
          "turboMode": {
            "type": "boolean"
          }
        }
      },
      "EnableDisableGroupsDto": {
        "type": "object",
        "properties": {
          "group_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "group_names"
        ]
      },
      "EntityPropertySourceCreationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the entity property source."
          },
          "description": {
            "type": "string",
            "description": "Optional detailed context for the entity property source."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Optional column name for timestamp."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates if the timestamp is treated as a day."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name linked to the ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the entity property source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "name",
          "sql",
          "idTypeMapping"
        ]
      },
      "EntityPropertySourceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the entity property source."
          },
          "description": {
            "type": "string",
            "description": "Detailed context and purpose of the entity property source."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for categorization and search."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Optional column name for timestamp."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates if the timestamp is treated as a day."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name linked to the ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          }
        },
        "required": [
          "name",
          "description",
          "tags",
          "sql",
          "idTypeMapping"
        ]
      },
      "EntityPropertySourcePartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the entity property source."
          },
          "description": {
            "type": "string",
            "description": "Detailed context and purpose of the entity property source."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for categorization and search."
          },
          "sql": {
            "readOnly": true,
            "description": "SQL query defining the data source"
          },
          "timestampColumn": {
            "type": "string",
            "description": "Optional column name for timestamp."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates if the timestamp is treated as a day."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name linked to the ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the entity property source (used to validate that inputs are correct)"
          }
        }
      },
      "EntityPropertySourceQueryUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Optional new name for the entity property source."
          },
          "description": {
            "type": "string",
            "description": "Optional updated context for the entity property source."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional updated tags for categorization."
          },
          "sql": {
            "type": "string",
            "description": "SQL query defining the data source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "Optional column name for timestamp."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates if the timestamp is treated as a day."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "ID for the Statsig unit."
                },
                "column": {
                  "type": "string",
                  "description": "Column name linked to the ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Mappings of Statsig units to their columns."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the entity property source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "sql",
          "idTypeMapping"
        ]
      },
      "EnvironmentsContractDto": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the environment."
                },
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the environment."
                },
                "isProduction": {
                  "type": "boolean",
                  "description": "Whether the environment is production."
                },
                "requiresReview": {
                  "type": "boolean",
                  "description": "Whether the environment requires review."
                },
                "requiredReviewGroupID": {
                  "type": "string",
                  "description": "The ID of the review group that the environment requires review from."
                },
                "requiresReleasePipeline": {
                  "type": "boolean",
                  "description": "Whether the environment requires a release pipeline."
                }
              },
              "required": [
                "name",
                "id",
                "isProduction",
                "requiresReview",
                "requiresReleasePipeline"
              ]
            }
          }
        },
        "required": [
          "environments"
        ]
      },
      "EnvironmentsUpdateContractDto": {
        "type": "object",
        "properties": {
          "environments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the environment."
                },
                "id": {
                  "type": "string",
                  "description": "A unique identifier for the environment. If not provided, the associated environment will be treated as a newly created environment."
                },
                "isProduction": {
                  "type": "boolean",
                  "description": "Whether the environment is production."
                },
                "requiresReview": {
                  "type": "boolean",
                  "description": "Whether the environment requires review."
                },
                "requiredReviewGroupID": {
                  "type": "string",
                  "description": "The ID of the review group that the environment requires review from."
                },
                "requiresReleasePipeline": {
                  "type": "boolean",
                  "description": "Whether the environment requires a release pipeline."
                }
              },
              "required": [
                "name",
                "isProduction",
                "requiresReview",
                "requiresReleasePipeline"
              ]
            }
          }
        },
        "required": [
          "environments"
        ]
      },
      "ExperimentAbandonDto": {
        "type": "object",
        "properties": {
          "decisionReason": {
            "type": "string",
            "description": "The reason for making the decision to update the experiment status",
            "example": "Your reason for stopping early"
          }
        },
        "required": [
          "decisionReason"
        ]
      },
      "ExperimentArchiveDto": {
        "type": "object",
        "properties": {
          "archiveReason": {
            "type": "string",
            "description": "The reason for archiving the experiment",
            "example": "The experiment is no longer needed"
          }
        },
        "description": "Schema for archiving an experiment",
        "example": {
          "archiveReason": "The experiment is no longer needed"
        }
      },
      "ExperimentCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "The experiment display name"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A description of the new experiment"
          },
          "idType": {
            "type": "string",
            "description": "The idType the experiment will be performed on"
          },
          "secondaryIDType": {
            "type": "string",
            "nullable": true,
            "description": "The secondary ID type for the experiment used in WHN for ID resolution"
          },
          "identifierMappingMode": {
            "type": "string",
            "enum": [
              "strictOneToOne",
              "firstTouchOneToMany",
              "lastTouchOneToMany"
            ],
            "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
          },
          "identityResolutionSource": {
            "type": "string",
            "nullable": true,
            "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
          },
          "hypothesis": {
            "type": "string",
            "description": "A statement that will be tested by this experiment"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the link"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the link"
                }
              },
              "required": [
                "url"
              ]
            },
            "description": "Links to relevant documentation or resources"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "size": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "parameterValues": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "disabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "foreignGroupID": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "size",
                "parameterValues"
              ]
            },
            "description": "The test groups for your experiment"
          },
          "controlGroupID": {
            "type": "string",
            "description": "Optional control group ID"
          },
          "allocation": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Percent of layer allocated to this experiment",
            "format": "double"
          },
          "primaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Primary metric tags for the experiment"
          },
          "secondaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary metric tags for the experiment"
          },
          "primaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Main metrics needed to evaluate your hypothesis"
          },
          "secondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics to monitor that might impact the analysis or final decision of the experiment"
          },
          "otherMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Target apps assigned to this experiment"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the experiment"
          },
          "duration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "How long the experiment is expected to last in days",
            "format": "int64"
          },
          "targetExposures": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Target exposures for the experiment",
            "format": "int64"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "description": "Restrict your experiment to users passing the selected feature gate"
          },
          "sequentialTesting": {
            "type": "boolean",
            "description": "Apply sequential testing?"
          },
          "bonferroniCorrection": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per variant?"
          },
          "bonferroniCorrectionPerMetric": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per metric?"
          },
          "benjaminiHochbergPerVariant": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per variant?"
          },
          "benjaminiHochbergPerMetric": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per metric?"
          },
          "benjaminiPrimaryMetricsOnly": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
          },
          "defaultConfidenceInterval": {
            "type": "string",
            "enum": [
              "80",
              "90",
              "95",
              "98",
              "99"
            ],
            "description": "Default error margin used for results"
          },
          "manualQualityScores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "criteriaName": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "HYPOTHESIS_LENGTH",
                        "BALANCED_EXPOSURE",
                        "PRIMARY_METRICS_LENGTH",
                        "COMPARISON_CORRECTION",
                        "GUARDRAIL_METRIC_TAGS",
                        "SUFFICIENT_SAMPLE",
                        "POWER_ANALYSIS",
                        "SEQUENTIAL_TESTING"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "WARNING"
                  ]
                },
                "criteriaDescription": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "weight": {
                  "type": "number"
                }
              },
              "required": [
                "criteriaName",
                "status",
                "criteriaDescription",
                "score",
                "weight"
              ]
            },
            "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "setup",
              "decision_made",
              "abandoned",
              "archived",
              "experiment_stopped",
              "assignment_stopped"
            ],
            "description": "The current status of the experiment"
          },
          "launchedGroupID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the launched group, null otherwise"
          },
          "assignmentSourceName": {
            "type": "string",
            "description": "Source name of the assignment"
          },
          "assignmentSourceExperimentName": {
            "type": "string",
            "description": "Name of the source experiment for assignment"
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "The Statsig ID of the creator of this experiment"
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "The email of the creator of this experiment"
          },
          "isAnalysisOnly": {
            "type": "boolean",
            "nullable": true,
            "description": "For Warehouse Native"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the experiment, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the experiment, Enterprise only."
          },
          "allocationDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "nullable": true,
            "description": "Warehouse Native Only - Allocation duration in days",
            "format": "int64"
          },
          "cohortedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Warehouse Native Only - Cohorted analysis duration in days",
            "format": "int64"
          },
          "cohortedMetricsMatureAfterEnd": {
            "type": "boolean",
            "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
          },
          "cohortWaitUntilEndToInclude": {
            "type": "boolean",
            "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
          },
          "fixedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Fixed analysis duration in days",
            "format": "int64"
          },
          "scheduledReloadHour": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "nullable": true,
            "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads",
            "format": "int64"
          },
          "scheduledReloadType": {
            "type": "string",
            "enum": [
              "full",
              "incremental"
            ],
            "description": "Warehouse Native only - reload type for scheduled reloads"
          },
          "analysisEndTime": {
            "type": "string",
            "description": "Warehouse Native only - end time for analysis only experiments"
          },
          "assignmentSourceFilters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "column": {
                  "type": "string",
                  "description": "Column to filter on."
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "in",
                    "not_in",
                    "=",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "is_null",
                    "non_null",
                    "contains",
                    "not_contains",
                    "sql_filter",
                    "starts_with",
                    "ends_with",
                    "after_exposure",
                    "before_exposure",
                    "is_true",
                    "is_false"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional array of values for the criterion to match against."
                }
              },
              "required": [
                "condition"
              ]
            },
            "description": "Array of criteria for filtering assignment sources."
          },
          "analyticsType": {
            "type": "string",
            "enum": [
              "frequentist",
              "bayesian",
              "sprt"
            ],
            "description": "The mode of analysis for the experiment, e.g frequentist, bayesian, sprt"
          },
          "isSidecar": {
            "type": "boolean",
            "description": "Whether this is a Statsig Sidecar experiment."
          },
          "decisionReason": {
            "type": "string",
            "description": "Experiment notes reported after experiment completes"
          },
          "stratifiedSampling": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "success",
                  "error"
                ]
              },
              "metric": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "startDate",
                  "endDate"
                ]
              },
              "entityPropertySource": {
                "type": "object",
                "properties": {
                  "propertySourceName": {
                    "type": "string"
                  },
                  "column": {
                    "type": "string"
                  }
                },
                "required": [
                  "propertySourceName",
                  "column"
                ]
              },
              "csv": {
                "type": "object",
                "properties": {
                  "original": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "original",
                  "identifier"
                ]
              }
            },
            "required": [
              "status"
            ],
            "nullable": true,
            "description": "The stratified sampling settings for the experiment"
          },
          "id": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_-]*$",
            "description": "The experiment name ID"
          },
          "layerID": {
            "type": "string",
            "description": "Which layer to place the experiment into."
          }
        },
        "required": [
          "name"
        ],
        "description": "Create Experiment",
        "example": {
          "name": "Test Experiment",
          "description": "Description test"
        }
      },
      "ExperimentFullUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "The display name of the experiment"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A helpful summary of what this experiment does"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the experiment is based on"
          },
          "secondaryIDType": {
            "type": "string",
            "nullable": true,
            "description": "The secondary ID type for the experiment used in WHN for ID resolution"
          },
          "identifierMappingMode": {
            "type": "string",
            "enum": [
              "strictOneToOne",
              "firstTouchOneToMany",
              "lastTouchOneToMany"
            ],
            "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
          },
          "identityResolutionSource": {
            "type": "string",
            "nullable": true,
            "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
          },
          "hypothesis": {
            "type": "string",
            "description": "A statement that will be tested by this experiment"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the link"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the link"
                }
              },
              "required": [
                "url"
              ]
            },
            "description": "Links to relevant documentation or resources"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "size": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "parameterValues": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "disabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "foreignGroupID": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "size",
                "parameterValues"
              ]
            },
            "description": "The test groups for your experiment"
          },
          "controlGroupID": {
            "type": "string",
            "description": "Optional control group ID"
          },
          "allocation": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Percent of layer allocated to this experiment",
            "format": "double"
          },
          "primaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Primary metric tags for the experiment"
          },
          "secondaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary metric tags for the experiment"
          },
          "primaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Main metrics needed to evaluate your hypothesis"
          },
          "secondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics to monitor that might impact the analysis or final decision of the experiment"
          },
          "otherMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Target apps assigned to this experiment"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the experiment"
          },
          "duration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "How long the experiment is expected to last in days",
            "format": "int64"
          },
          "targetExposures": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Target exposures for the experiment",
            "format": "int64"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "description": "Restrict your experiment to users passing the selected feature gate"
          },
          "sequentialTesting": {
            "type": "boolean",
            "description": "Apply sequential testing?"
          },
          "bonferroniCorrection": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per variant?"
          },
          "bonferroniCorrectionPerMetric": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per metric?"
          },
          "benjaminiHochbergPerVariant": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per variant?"
          },
          "benjaminiHochbergPerMetric": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per metric?"
          },
          "benjaminiPrimaryMetricsOnly": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
          },
          "defaultConfidenceInterval": {
            "type": "string",
            "enum": [
              "80",
              "90",
              "95",
              "98",
              "99"
            ],
            "description": "Default error margin used for results"
          },
          "manualQualityScores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "criteriaName": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "HYPOTHESIS_LENGTH",
                        "BALANCED_EXPOSURE",
                        "PRIMARY_METRICS_LENGTH",
                        "COMPARISON_CORRECTION",
                        "GUARDRAIL_METRIC_TAGS",
                        "SUFFICIENT_SAMPLE",
                        "POWER_ANALYSIS",
                        "SEQUENTIAL_TESTING"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "WARNING"
                  ]
                },
                "criteriaDescription": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "weight": {
                  "type": "number"
                }
              },
              "required": [
                "criteriaName",
                "status",
                "criteriaDescription",
                "score",
                "weight"
              ]
            },
            "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "setup",
              "decision_made",
              "abandoned",
              "archived",
              "experiment_stopped",
              "assignment_stopped"
            ],
            "description": "The current status of the experiment"
          },
          "launchedGroupID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the launched group, null otherwise"
          },
          "assignmentSourceName": {
            "type": "string",
            "description": "Source name of the assignment"
          },
          "assignmentSourceExperimentName": {
            "type": "string",
            "description": "Name of the source experiment for assignment"
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "The Statsig ID of the creator of this experiment"
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "The email of the creator of this experiment"
          },
          "isAnalysisOnly": {
            "type": "boolean",
            "nullable": true,
            "description": "For Warehouse Native"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the experiment, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the experiment, Enterprise only."
          },
          "allocationDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "nullable": true,
            "description": "Warehouse Native Only - Allocation duration in days",
            "format": "int64"
          },
          "cohortedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Warehouse Native Only - Cohorted analysis duration in days",
            "format": "int64"
          },
          "cohortedMetricsMatureAfterEnd": {
            "type": "boolean",
            "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
          },
          "cohortWaitUntilEndToInclude": {
            "type": "boolean",
            "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
          },
          "fixedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Fixed analysis duration in days",
            "format": "int64"
          },
          "scheduledReloadHour": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "nullable": true,
            "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads",
            "format": "int64"
          },
          "scheduledReloadType": {
            "type": "string",
            "enum": [
              "full",
              "incremental"
            ],
            "description": "Warehouse Native only - reload type for scheduled reloads"
          },
          "analysisEndTime": {
            "type": "string",
            "description": "Warehouse Native only - end time for analysis only experiments"
          },
          "assignmentSourceFilters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "column": {
                  "type": "string",
                  "description": "Column to filter on."
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "in",
                    "not_in",
                    "=",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "is_null",
                    "non_null",
                    "contains",
                    "not_contains",
                    "sql_filter",
                    "starts_with",
                    "ends_with",
                    "after_exposure",
                    "before_exposure",
                    "is_true",
                    "is_false"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional array of values for the criterion to match against."
                }
              },
              "required": [
                "condition"
              ]
            },
            "description": "Array of criteria for filtering assignment sources."
          },
          "analyticsType": {
            "type": "string",
            "enum": [
              "frequentist",
              "bayesian",
              "sprt"
            ],
            "description": "The mode of analysis for the experiment, e.g frequentist, bayesian, sprt"
          },
          "isSidecar": {
            "type": "boolean",
            "description": "Whether this is a Statsig Sidecar experiment."
          },
          "decisionReason": {
            "type": "string",
            "description": "Experiment notes reported after experiment completes"
          },
          "stratifiedSampling": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "success",
                  "error"
                ]
              },
              "metric": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "startDate",
                  "endDate"
                ]
              },
              "entityPropertySource": {
                "type": "object",
                "properties": {
                  "propertySourceName": {
                    "type": "string"
                  },
                  "column": {
                    "type": "string"
                  }
                },
                "required": [
                  "propertySourceName",
                  "column"
                ]
              },
              "csv": {
                "type": "object",
                "properties": {
                  "original": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "original",
                  "identifier"
                ]
              }
            },
            "required": [
              "status"
            ],
            "nullable": true,
            "description": "The stratified sampling settings for the experiment"
          }
        },
        "required": [
          "description",
          "idType",
          "hypothesis",
          "groups",
          "allocation",
          "targetingGateID",
          "bonferroniCorrection",
          "defaultConfidenceInterval",
          "status"
        ]
      },
      "ExperimentNameContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "The experiment display name"
          }
        },
        "required": [
          "name"
        ]
      },
      "ExperimentOverridesDto": {
        "type": "object",
        "properties": {
          "overrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "gate",
                    "segment"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The id of the segment or gate"
                },
                "groupID": {
                  "type": "string",
                  "description": "The experiment group which user will be forced into"
                },
                "environment": {
                  "type": "string",
                  "nullable": true,
                  "description": "Optional environment designation (e.g., production, staging) for the experiment."
                }
              },
              "required": [
                "type",
                "id",
                "groupID"
              ]
            },
            "maxItems": 1000,
            "description": "Array of experiment overrides, each specifying type, ID, and group ID."
          },
          "userIDOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "groupID": {
                  "type": "string",
                  "description": "The experiment group the user will be forced into."
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 1000,
                  "description": "Array of user IDs to be assigned to the specified experiment group."
                },
                "environment": {
                  "type": "string",
                  "nullable": true,
                  "description": "Optional environment designation (e.g., production, staging) for the experiment."
                },
                "unitType": {
                  "type": "string",
                  "nullable": true,
                  "description": "Optional type of unit for the experiment, defining the scope of the override."
                }
              },
              "required": [
                "groupID",
                "ids"
              ]
            },
            "description": "Array of user ID overrides, specifying which users to force into experiment groups."
          }
        },
        "required": [
          "overrides",
          "userIDOverrides"
        ]
      },
      "ExperimentPartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "The display name of the experiment"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A helpful summary of what this experiment does"
          },
          "idType": {
            "type": "string",
            "description": "The type of ID which the experiment is based on"
          },
          "secondaryIDType": {
            "type": "string",
            "nullable": true,
            "description": "The secondary ID type for the experiment used in WHN for ID resolution"
          },
          "identifierMappingMode": {
            "type": "string",
            "enum": [
              "strictOneToOne",
              "firstTouchOneToMany",
              "lastTouchOneToMany"
            ],
            "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
          },
          "identityResolutionSource": {
            "type": "string",
            "nullable": true,
            "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
          },
          "hypothesis": {
            "type": "string",
            "description": "A statement that will be tested by this experiment"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the link"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the link"
                }
              },
              "required": [
                "url"
              ]
            },
            "description": "Links to relevant documentation or resources"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "size": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "parameterValues": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "disabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "foreignGroupID": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "size",
                "parameterValues"
              ]
            },
            "description": "The test groups for your experiment"
          },
          "controlGroupID": {
            "type": "string",
            "description": "Optional control group ID"
          },
          "allocation": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Percent of layer allocated to this experiment",
            "format": "double"
          },
          "primaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Primary metric tags for the experiment"
          },
          "secondaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary metric tags for the experiment"
          },
          "primaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Main metrics needed to evaluate your hypothesis"
          },
          "secondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics to monitor that might impact the analysis or final decision of the experiment"
          },
          "otherMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Target apps assigned to this experiment"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the experiment"
          },
          "duration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "How long the experiment is expected to last in days",
            "format": "int64"
          },
          "targetExposures": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Target exposures for the experiment",
            "format": "int64"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "description": "Restrict your experiment to users passing the selected feature gate"
          },
          "sequentialTesting": {
            "type": "boolean",
            "description": "Apply sequential testing?"
          },
          "bonferroniCorrection": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per variant?"
          },
          "bonferroniCorrectionPerMetric": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per metric?"
          },
          "benjaminiHochbergPerVariant": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per variant?"
          },
          "benjaminiHochbergPerMetric": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per metric?"
          },
          "benjaminiPrimaryMetricsOnly": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
          },
          "defaultConfidenceInterval": {
            "type": "string",
            "enum": [
              "80",
              "90",
              "95",
              "98",
              "99"
            ],
            "description": "Default error margin used for results"
          },
          "manualQualityScores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "criteriaName": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "HYPOTHESIS_LENGTH",
                        "BALANCED_EXPOSURE",
                        "PRIMARY_METRICS_LENGTH",
                        "COMPARISON_CORRECTION",
                        "GUARDRAIL_METRIC_TAGS",
                        "SUFFICIENT_SAMPLE",
                        "POWER_ANALYSIS",
                        "SEQUENTIAL_TESTING"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "WARNING"
                  ]
                },
                "criteriaDescription": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "weight": {
                  "type": "number"
                }
              },
              "required": [
                "criteriaName",
                "status",
                "criteriaDescription",
                "score",
                "weight"
              ]
            },
            "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "setup",
              "decision_made",
              "abandoned",
              "archived",
              "experiment_stopped",
              "assignment_stopped"
            ],
            "description": "The current status of the experiment"
          },
          "launchedGroupID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the launched group, null otherwise"
          },
          "assignmentSourceName": {
            "type": "string",
            "description": "Source name of the assignment"
          },
          "assignmentSourceExperimentName": {
            "type": "string",
            "description": "Name of the source experiment for assignment"
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "The Statsig ID of the creator of this experiment"
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "The email of the creator of this experiment"
          },
          "isAnalysisOnly": {
            "type": "boolean",
            "nullable": true,
            "description": "For Warehouse Native"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the experiment, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the experiment, Enterprise only."
          },
          "allocationDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "nullable": true,
            "description": "Warehouse Native Only - Allocation duration in days",
            "format": "int64"
          },
          "cohortedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Warehouse Native Only - Cohorted analysis duration in days",
            "format": "int64"
          },
          "cohortedMetricsMatureAfterEnd": {
            "type": "boolean",
            "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
          },
          "cohortWaitUntilEndToInclude": {
            "type": "boolean",
            "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
          },
          "fixedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Fixed analysis duration in days",
            "format": "int64"
          },
          "scheduledReloadHour": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "nullable": true,
            "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads",
            "format": "int64"
          },
          "scheduledReloadType": {
            "type": "string",
            "enum": [
              "full",
              "incremental"
            ],
            "description": "Warehouse Native only - reload type for scheduled reloads"
          },
          "analysisEndTime": {
            "type": "string",
            "description": "Warehouse Native only - end time for analysis only experiments"
          },
          "assignmentSourceFilters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "column": {
                  "type": "string",
                  "description": "Column to filter on."
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "in",
                    "not_in",
                    "=",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "is_null",
                    "non_null",
                    "contains",
                    "not_contains",
                    "sql_filter",
                    "starts_with",
                    "ends_with",
                    "after_exposure",
                    "before_exposure",
                    "is_true",
                    "is_false"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional array of values for the criterion to match against."
                }
              },
              "required": [
                "condition"
              ]
            },
            "description": "Array of criteria for filtering assignment sources."
          },
          "analyticsType": {
            "type": "string",
            "enum": [
              "frequentist",
              "bayesian",
              "sprt"
            ],
            "description": "The mode of analysis for the experiment, e.g frequentist, bayesian, sprt"
          },
          "isSidecar": {
            "type": "boolean",
            "description": "Whether this is a Statsig Sidecar experiment."
          },
          "decisionReason": {
            "type": "string",
            "description": "Experiment notes reported after experiment completes"
          },
          "stratifiedSampling": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "success",
                  "error"
                ]
              },
              "metric": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "startDate",
                  "endDate"
                ]
              },
              "entityPropertySource": {
                "type": "object",
                "properties": {
                  "propertySourceName": {
                    "type": "string"
                  },
                  "column": {
                    "type": "string"
                  }
                },
                "required": [
                  "propertySourceName",
                  "column"
                ]
              },
              "csv": {
                "type": "object",
                "properties": {
                  "original": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "original",
                  "identifier"
                ]
              }
            },
            "required": [
              "status"
            ],
            "nullable": true,
            "description": "The stratified sampling settings for the experiment"
          }
        }
      },
      "ExperimentPulseResultsDto": {
        "type": "object",
        "properties": {
          "ds": {
            "type": "string"
          },
          "primaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metricID": {
                  "type": "string"
                },
                "metricName": {
                  "type": "string"
                },
                "directionality": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ],
                  "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
                  "example": "increase"
                },
                "absoluteChange": {
                  "type": "number"
                },
                "confidenceIntervalDelta": {
                  "type": "number",
                  "description": "Absolute confidence interval delta"
                },
                "percentChange": {
                  "type": "number"
                },
                "sequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentSequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "testMean": {
                  "type": "number"
                },
                "controlMean": {
                  "type": "number"
                },
                "testStd": {
                  "type": "number"
                },
                "controlStd": {
                  "type": "number"
                },
                "testUnits": {
                  "type": "number"
                },
                "controlUnits": {
                  "type": "number"
                },
                "pValue": {
                  "type": "number"
                },
                "absoluteToplineImpact": {
                  "type": "number"
                },
                "absoluteToplineImpactDelta": {
                  "type": "number"
                },
                "relativeToplineImpact": {
                  "type": "number"
                },
                "relativeToplineImpactDelta": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpact": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpactDelta": {
                  "type": "number"
                },
                "projectedRelativeToplineImpact": {
                  "type": "number"
                },
                "projectedRelativeToplineImpactDelta": {
                  "type": "number"
                }
              },
              "required": [
                "metricID",
                "metricName",
                "directionality"
              ],
              "additionalProperties": false
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metricID": {
                  "type": "string"
                },
                "metricName": {
                  "type": "string"
                },
                "directionality": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ],
                  "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
                  "example": "increase"
                },
                "absoluteChange": {
                  "type": "number"
                },
                "confidenceIntervalDelta": {
                  "type": "number",
                  "description": "Absolute confidence interval delta"
                },
                "percentChange": {
                  "type": "number"
                },
                "sequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentSequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "testMean": {
                  "type": "number"
                },
                "controlMean": {
                  "type": "number"
                },
                "testStd": {
                  "type": "number"
                },
                "controlStd": {
                  "type": "number"
                },
                "testUnits": {
                  "type": "number"
                },
                "controlUnits": {
                  "type": "number"
                },
                "pValue": {
                  "type": "number"
                },
                "absoluteToplineImpact": {
                  "type": "number"
                },
                "absoluteToplineImpactDelta": {
                  "type": "number"
                },
                "relativeToplineImpact": {
                  "type": "number"
                },
                "relativeToplineImpactDelta": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpact": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpactDelta": {
                  "type": "number"
                },
                "projectedRelativeToplineImpact": {
                  "type": "number"
                },
                "projectedRelativeToplineImpactDelta": {
                  "type": "number"
                }
              },
              "required": [
                "metricID",
                "metricName",
                "directionality"
              ],
              "additionalProperties": false
            }
          },
          "otherMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metricID": {
                  "type": "string"
                },
                "metricName": {
                  "type": "string"
                },
                "directionality": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ],
                  "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
                  "example": "increase"
                },
                "absoluteChange": {
                  "type": "number"
                },
                "confidenceIntervalDelta": {
                  "type": "number",
                  "description": "Absolute confidence interval delta"
                },
                "percentChange": {
                  "type": "number"
                },
                "sequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentSequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "testMean": {
                  "type": "number"
                },
                "controlMean": {
                  "type": "number"
                },
                "testStd": {
                  "type": "number"
                },
                "controlStd": {
                  "type": "number"
                },
                "testUnits": {
                  "type": "number"
                },
                "controlUnits": {
                  "type": "number"
                },
                "pValue": {
                  "type": "number"
                },
                "absoluteToplineImpact": {
                  "type": "number"
                },
                "absoluteToplineImpactDelta": {
                  "type": "number"
                },
                "relativeToplineImpact": {
                  "type": "number"
                },
                "relativeToplineImpactDelta": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpact": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpactDelta": {
                  "type": "number"
                },
                "projectedRelativeToplineImpact": {
                  "type": "number"
                },
                "projectedRelativeToplineImpactDelta": {
                  "type": "number"
                }
              },
              "required": [
                "metricID",
                "metricName",
                "directionality"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "ds",
          "primaryMetrics",
          "secondaryMetrics"
        ]
      },
      "ExperimentStartDto": {
        "type": "object",
        "properties": {
          "analysisStartTime": {
            "type": "string",
            "description": "For Warehouse Native analysis-only experiments; start time of experiment analysis.",
            "example": "2024-10-01"
          },
          "analysisEndTime": {
            "type": "string",
            "description": "For Warehouse Native analysis-only experiments; end time of experiment analysis.",
            "example": "2024-10-30"
          }
        }
      },
      "ExperimentStatusUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the group to launch",
            "example": "groupid123"
          },
          "decisionReason": {
            "type": "string",
            "description": "The reason for making the decision to update the experiment status",
            "example": "Your reason for stopping early"
          },
          "removeTargeting": {
            "default": false,
            "type": "boolean",
            "description": "Indicates whether to remove targeting from the experiment",
            "example": false
          }
        },
        "required": [
          "id",
          "decisionReason"
        ],
        "description": "Schema for updating the status of an experiment",
        "example": {
          "id": "experiment123",
          "decisionReason": "Your reason for stopping early",
          "removeTargeting": false
        }
      },
      "ExposureCountDto": {
        "type": "object",
        "properties": {
          "gates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "pastDay": {
                  "type": "number"
                },
                "past7Days": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "pastDay",
                "past7Days"
              ]
            },
            "maxItems": 25,
            "description": "ids of gates to query (max 25)"
          },
          "experiments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "pastDay": {
                  "type": "number"
                },
                "past7Days": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "pastDay",
                "past7Days"
              ]
            },
            "maxItems": 25,
            "description": "ids of experiments to query (max 25)"
          },
          "dynamicConfigs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "pastDay": {
                  "type": "number"
                },
                "past7Days": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "pastDay",
                "past7Days"
              ]
            },
            "maxItems": 25,
            "description": "ids of dynamic configs to query (max 25)"
          }
        },
        "required": [
          "gates",
          "experiments",
          "dynamicConfigs"
        ]
      },
      "ExternalExperimentDto": {
        "type": "object",
        "properties": {
          "reviewSettings": {
            "type": "object",
            "properties": {
              "requiredReview": {
                "type": "boolean"
              },
              "allowedReviewers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email"
                  ]
                },
                "nullable": true
              }
            },
            "required": [
              "requiredReview"
            ]
          },
          "activeReview": {
            "type": "object",
            "properties": {
              "reviewID": {
                "type": "string"
              },
              "reviewStatus": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "reviewID",
              "reviewStatus",
              "description"
            ]
          },
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "The display name of the experiment"
          },
          "idType": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A helpful summary of what this experiment does"
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "The Statsig ID of the creator of this experiment"
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "The email of the creator of this experiment"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "Target apps assigned to this experiment"
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team name associated with the experiment, Enterprise only."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the experiment, Enterprise only."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "secondaryIDType": {
            "type": "string",
            "nullable": true,
            "description": "The secondary ID type for the experiment used in WHN for ID resolution"
          },
          "identifierMappingMode": {
            "type": "string",
            "enum": [
              "strictOneToOne",
              "firstTouchOneToMany",
              "lastTouchOneToMany"
            ],
            "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
          },
          "identityResolutionSource": {
            "type": "string",
            "nullable": true,
            "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
          },
          "hypothesis": {
            "type": "string",
            "description": "A statement that will be tested by this experiment"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "format": "uri",
                  "description": "The URL of the link"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the link"
                }
              },
              "required": [
                "url"
              ]
            },
            "description": "Links to relevant documentation or resources"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "nullable": true
                },
                "size": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100
                },
                "parameterValues": {
                  "type": "object",
                  "additionalProperties": {}
                },
                "disabled": {
                  "type": "boolean"
                },
                "description": {
                  "type": "string"
                },
                "foreignGroupID": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "size",
                "parameterValues"
              ]
            },
            "description": "The test groups for your experiment"
          },
          "controlGroupID": {
            "type": "string",
            "description": "Optional control group ID"
          },
          "allocation": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "description": "Percent of layer allocated to this experiment",
            "format": "double"
          },
          "primaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Primary metric tags for the experiment"
          },
          "secondaryMetricTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Secondary metric tags for the experiment"
          },
          "primaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "secondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "otherMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "direction": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ]
                },
                "hypothesizedValue": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
          },
          "duration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "How long the experiment is expected to last in days",
            "format": "int64"
          },
          "targetExposures": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Target exposures for the experiment",
            "format": "int64"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "description": "Restrict your experiment to users passing the selected feature gate"
          },
          "sequentialTesting": {
            "type": "boolean",
            "description": "Apply sequential testing?"
          },
          "bonferroniCorrection": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per variant?"
          },
          "bonferroniCorrectionPerMetric": {
            "type": "boolean",
            "description": "Is Bonferroni correction applied per metric?"
          },
          "benjaminiHochbergPerVariant": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per variant?"
          },
          "benjaminiHochbergPerMetric": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied per metric?"
          },
          "benjaminiPrimaryMetricsOnly": {
            "type": "boolean",
            "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
          },
          "defaultConfidenceInterval": {
            "type": "string",
            "enum": [
              "80",
              "90",
              "95",
              "98",
              "99"
            ],
            "description": "Default error margin used for results"
          },
          "manualQualityScores": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "criteriaName": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "HYPOTHESIS_LENGTH",
                        "BALANCED_EXPOSURE",
                        "PRIMARY_METRICS_LENGTH",
                        "COMPARISON_CORRECTION",
                        "GUARDRAIL_METRIC_TAGS",
                        "SUFFICIENT_SAMPLE",
                        "POWER_ANALYSIS",
                        "SEQUENTIAL_TESTING"
                      ]
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "WARNING"
                  ]
                },
                "criteriaDescription": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "weight": {
                  "type": "number"
                }
              },
              "required": [
                "criteriaName",
                "status",
                "criteriaDescription",
                "score",
                "weight"
              ]
            },
            "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "setup",
              "decision_made",
              "abandoned",
              "archived",
              "experiment_stopped",
              "assignment_stopped"
            ],
            "description": "The current status of the experiment"
          },
          "launchedGroupID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the launched group, null otherwise"
          },
          "assignmentSourceName": {
            "type": "string"
          },
          "assignmentSourceExperimentName": {
            "type": "string",
            "description": "Name of the source experiment for assignment"
          },
          "isAnalysisOnly": {
            "type": "boolean"
          },
          "allocationDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "nullable": true,
            "description": "Warehouse Native Only - Allocation duration in days",
            "format": "int64"
          },
          "cohortedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Warehouse Native Only - Cohorted analysis duration in days",
            "format": "int64"
          },
          "cohortedMetricsMatureAfterEnd": {
            "type": "boolean",
            "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
          },
          "cohortWaitUntilEndToInclude": {
            "type": "boolean",
            "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
          },
          "fixedAnalysisDuration": {
            "type": "integer",
            "minimum": 1,
            "exclusiveMinimum": true,
            "description": "Fixed analysis duration in days",
            "format": "int64"
          },
          "scheduledReloadHour": {
            "type": "integer",
            "minimum": 0,
            "maximum": 23,
            "nullable": true,
            "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads",
            "format": "int64"
          },
          "scheduledReloadType": {
            "type": "string",
            "enum": [
              "full",
              "incremental"
            ],
            "description": "Warehouse Native only - reload type for scheduled reloads"
          },
          "analysisEndTime": {
            "type": "string"
          },
          "assignmentSourceFilters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "column": {
                  "type": "string",
                  "description": "Column to filter on."
                },
                "condition": {
                  "type": "string",
                  "enum": [
                    "in",
                    "not_in",
                    "=",
                    ">",
                    "<",
                    ">=",
                    "<=",
                    "is_null",
                    "non_null",
                    "contains",
                    "not_contains",
                    "sql_filter",
                    "starts_with",
                    "ends_with",
                    "after_exposure",
                    "before_exposure",
                    "is_true",
                    "is_false"
                  ]
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional array of values for the criterion to match against."
                }
              },
              "required": [
                "condition"
              ]
            },
            "description": "Array of criteria for filtering assignment sources."
          },
          "analyticsType": {
            "type": "string",
            "nullable": true
          },
          "isSidecar": {
            "type": "boolean",
            "description": "Whether this is a Statsig Sidecar experiment."
          },
          "decisionReason": {
            "type": "string",
            "nullable": true
          },
          "stratifiedSampling": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "success",
                  "error"
                ]
              },
              "metric": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "startDate",
                  "endDate"
                ]
              },
              "entityPropertySource": {
                "type": "object",
                "properties": {
                  "propertySourceName": {
                    "type": "string"
                  },
                  "column": {
                    "type": "string"
                  }
                },
                "required": [
                  "propertySourceName",
                  "column"
                ]
              },
              "csv": {
                "type": "object",
                "properties": {
                  "original": {
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string"
                  }
                },
                "required": [
                  "original",
                  "identifier"
                ]
              }
            },
            "required": [
              "status"
            ],
            "nullable": true,
            "description": "The stratified sampling settings for the experiment"
          },
          "subtype": {
            "type": "string",
            "enum": [
              "conversion",
              "reactivation",
              "retention"
            ]
          },
          "externalExperimentName": {
            "type": "string"
          },
          "layerID": {
            "type": "string",
            "nullable": true
          },
          "startTime": {
            "type": "number",
            "nullable": true,
            "format": "double"
          },
          "endTime": {
            "type": "number",
            "nullable": true,
            "format": "double"
          },
          "decisionTime": {
            "type": "number",
            "nullable": true,
            "format": "double"
          },
          "healthChecks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "PASSED",
                    "FAILED",
                    "WAITING",
                    "WARNING"
                  ]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "lastPulseLoadTime": {
                      "type": "number"
                    },
                    "crossoverPercent": {
                      "type": "number"
                    },
                    "assignmentSourceID": {
                      "type": "string"
                    },
                    "assignmentSourceName": {
                      "type": "string"
                    },
                    "foreignExperimentID": {
                      "type": "string"
                    },
                    "deduplication_rate": {
                      "type": "number"
                    },
                    "deduplication_rates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "group_id": {
                            "type": "string"
                          },
                          "rate": {
                            "type": "number"
                          },
                          "group_name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "group_id",
                          "rate",
                          "group_name"
                        ]
                      }
                    },
                    "primary_id_type": {
                      "type": "string"
                    },
                    "secondary_id_type": {
                      "type": "string"
                    },
                    "missingMetrics": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "metrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "metric_name": {
                            "type": "string"
                          },
                          "earliest_date": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "latest_date": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          }
                        },
                        "required": [
                          "metric_name",
                          "earliest_date",
                          "latest_date"
                        ]
                      }
                    },
                    "lastUpdatedDs": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "primary_id_type"
                  ]
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "has_checks",
                    "has_valid_unit_type",
                    "has_balanced_exposures",
                    "has_event_metrics",
                    "has_pulse_metrics",
                    "assignment_health",
                    "has_crossover",
                    "has_exposures",
                    "has_recent_exposures_for_analyze_whn",
                    "user_metrics_exist",
                    "deduplication_rate",
                    "deduplication_rate_group_level",
                    "windowed_metrics_have_outliers",
                    "exposures_data_is_behind",
                    "pre_experimental_bias_check",
                    "segments_of_interest_analysis",
                    "has_changed_parameter",
                    "metric_history_for_topline_impact",
                    "default_value_mismatch",
                    "has_data_gaps",
                    "has_correct_target_app",
                    "has_dag_failures",
                    "has_exploration_completed",
                    "autotune_has_outcomes"
                  ]
                }
              },
              "required": [
                "name",
                "description",
                "status"
              ]
            }
          },
          "healthCheckStatus": {
            "type": "string",
            "enum": [
              "PASSED",
              "FAILED",
              "WAITING",
              "WARNING"
            ],
            "description": "Overall health check status"
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "inlineTargetingRulesJSON": {
            "type": "string",
            "nullable": true
          },
          "summarySections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "content": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "name",
                "content"
              ]
            },
            "nullable": true
          }
        },
        "required": [
          "id",
          "idType",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "createdTime",
          "creatorName",
          "tags",
          "hypothesis",
          "groups",
          "allocation",
          "primaryMetrics",
          "secondaryMetrics",
          "targetingGateID",
          "bonferroniCorrection",
          "defaultConfidenceInterval",
          "status",
          "decisionReason",
          "layerID",
          "startTime",
          "endTime",
          "decisionTime",
          "healthCheckStatus"
        ]
      },
      "ExternalGateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The gate display name"
          },
          "idType": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "teamID": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "checksPerHour": {
            "type": "number",
            "nullable": true,
            "format": "double"
          },
          "status": {
            "type": "string",
            "enum": [
              "In Progress",
              "Launched",
              "Disabled",
              "Archived"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "TEMPORARY",
              "PERMANENT",
              "STALE",
              "TEMPLATE"
            ]
          },
          "typeReason": {
            "type": "string",
            "enum": [
              "NONE",
              "STALE_PROBABLY_LAUNCHED",
              "STALE_PROBABLY_UNLAUNCHED",
              "STALE_PROBABLY_FORGOTTEN",
              "STALE_NO_RULES",
              "STALE_PROBABLY_DEAD_CHECK",
              "STALE_EMPTY_CHECKS",
              "STALE_ALL_TRUE",
              "STALE_ALL_FALSE"
            ]
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "isTemplate": {
            "type": "boolean"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          },
          "measureMetricLifts": {
            "type": "boolean"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "reviewSettings": {
            "type": "object",
            "properties": {
              "requiredReview": {
                "type": "boolean"
              },
              "allowedReviewers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "email"
                  ]
                },
                "nullable": true
              }
            },
            "required": [
              "requiredReview"
            ]
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true
          },
          "activeReview": {
            "type": "object",
            "properties": {
              "reviewID": {
                "type": "string"
              },
              "reviewStatus": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "reviewID",
              "reviewStatus",
              "description"
            ]
          }
        },
        "required": [
          "id",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "createdTime",
          "creatorName",
          "checksPerHour",
          "status",
          "type",
          "typeReason",
          "isEnabled",
          "rules"
        ]
      },
      "ExternalMetricDefinitionContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric, serving as its primary identifier.",
            "example": "metricName"
          },
          "type": {
            "type": "string",
            "enum": [
              "ratio",
              "sum",
              "composite",
              "mean",
              "event_count_custom",
              "event_user",
              "funnel",
              "undefined",
              "setup_incomplete",
              "composite_sum",
              "import_window",
              "user_warehouse",
              "count_distinct"
            ],
            "description": "The type of the metric, defining its aggregation method and characteristics.",
            "example": "sum"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the metric as verified, indicating trustworthiness within the organization.",
            "example": false
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Set to true to make the metric definition editable only through the Console API.",
            "example": false
          },
          "unitTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of unit types associated with the metric, such as stableID or userID.",
            "example": [
              "stableID",
              "userID"
            ]
          },
          "metricEvents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric event."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "count",
                    "count_distinct",
                    "value",
                    "metadata"
                  ],
                  "nullable": true,
                  "description": "The type of metric event. Allowed values include: count, count_distinct, value, and metadata."
                },
                "metadataKey": {
                  "type": "string",
                  "description": "The key for associated metadata, if applicable."
                },
                "criteria": {
                  "type": "array",
                  "items": {
                    "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                    "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                  },
                  "description": "Filtering criteria for the metric event, including conditions and values to refine the event data."
                }
              },
              "required": [
                "name"
              ]
            },
            "description": "An array of event definitions used to compute the metric.",
            "example": [
              {
                "name": "event1",
                "type": "value"
              }
            ]
          },
          "metricComponentMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "List of input metrics used to calculate the new metric for composite types.",
            "example": []
          },
          "description": {
            "type": "string",
            "description": "An optional description providing additional context about the metric.",
            "example": "the description of this metric"
          },
          "directionality": {
            "type": "string",
            "enum": [
              "increase",
              "decrease"
            ],
            "description": "Specifies the desired directionality for the metric, indicating whether an increase or decrease is favorable.",
            "example": "increase"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorizing the metric and improving searchability.",
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "isPermanent": {
            "type": "boolean",
            "description": "Indicates whether the metric is permanent and should not be deleted.",
            "example": false
          },
          "rollupTimeWindow": {
            "type": "string",
            "description": "Time window for the metric rollup. Specify \"custom\" for a customized time window.",
            "example": "custom"
          },
          "customRollUpStart": {
            "type": "number",
            "description": "Custom time window start date in days since exposure.",
            "example": 1,
            "format": "double"
          },
          "customRollUpEnd": {
            "type": "number",
            "description": "Custom time window end date in days since exposure.",
            "example": 1,
            "format": "double"
          },
          "funnelEventList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the funnel event used in the metric.",
                  "example": "event1"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "event_dau",
                    "event_user",
                    "event_count",
                    "event_count_custom"
                  ],
                  "description": "The type of funnel event, specifying how the event is tracked.",
                  "example": "event_dau"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "List of events used to create funnel metrics."
          },
          "funnelCountDistinct": {
            "type": "string",
            "enum": [
              "events",
              "users"
            ],
            "description": "Specifies whether to count events or distinct users for the funnel metric."
          },
          "warehouseNative": {
            "type": "object",
            "properties": {
              "aggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "metricSourceName": {
                "type": "string",
                "description": "For Count, Sum, Mean, User Count aggregation types: the name of metric source"
              },
              "criteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the metric source"
              },
              "waitForCohortWindow": {
                "type": "boolean"
              },
              "denominatorCriteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the denominator metric source, if this metric is a ratio"
              },
              "denominatorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "denominatorCustomRollupEnd": {
                "type": "number",
                "description": "Custom end window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorCustomRollupStart": {
                "type": "number",
                "description": "Custom start window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorMetricSourceName": {
                "type": "string",
                "description": "Name of the metric source for the denominator."
              },
              "denominatorRollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for ratio denominator unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "denominatorValueColumn": {
                "type": "string",
                "description": "Column name for the denominator’s value."
              },
              "funnelCalculationWindow": {
                "type": "number",
                "description": "Duration for counting funnel events in days.",
                "format": "double"
              },
              "funnelCountDistinct": {
                "type": "string",
                "enum": [
                  "sessions",
                  "users"
                ],
                "description": "Allowed: users┃sessions for distinct count method in funnel events."
              },
              "funnelEvents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "criteria": {
                      "type": "array",
                      "items": {
                        "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                        "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                      },
                      "description": "Optional array of criteria to filter the funnel events, defined by various types and conditions."
                    },
                    "metricSourceName": {
                      "type": "string",
                      "description": "Optional name of the metric source associated with the funnel event."
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "Optional step name for the funnel event, can be null if not specified."
                    },
                    "sessionIdentifierField": {
                      "type": "string",
                      "nullable": true,
                      "description": "Name of column which being used as session identifier. Funnel event with the same metric source"
                    }
                  }
                },
                "description": "List of funnel events with associated criteria and identifiers."
              },
              "funnelStartCriteria": {
                "type": "string",
                "enum": [
                  "start_event",
                  "exposure"
                ],
                "description": "Allowed: start_event┃exposure to determine funnel start criteria."
              },
              "metricDimensionColumns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Specify metadata columns for breaking down metric analysis."
              },
              "metricBakeDays": {
                "type": "number",
                "description": "Number of days for metric baking; specify duration for analysis.",
                "format": "double"
              },
              "numeratorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Aggregation type for numerator; Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile."
              },
              "valueColumn": {
                "type": "string",
                "description": "Column name representing the metric’s value."
              },
              "valueThreshold": {
                "type": "number",
                "description": "Threshold value for filtering metrics.",
                "format": "double"
              },
              "allowNullRatioDenominator": {
                "type": "boolean",
                "description": "Include units which do not have a denominator. Only applicable to ratios."
              },
              "funnelStrictOrdering": {
                "type": "boolean"
              },
              "funnelUseExposureAsFirstEvent": {
                "type": "boolean"
              },
              "funnelTimestampAllowanceMs": {
                "type": "number",
                "format": "double"
              },
              "funnelTimeToConvert": {
                "type": "boolean"
              },
              "winsorizationHigh": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "High threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationLow": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "Low threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationHighDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "winsorizationLowDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "cupedAttributionWindow": {
                "type": "number",
                "nullable": true,
                "description": "Attribution window for CUPED adjustments in days.",
                "format": "double"
              },
              "rollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "customRollUpStart": {
                "type": "number",
                "description": "Custom start window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "customRollUpEnd": {
                "type": "number",
                "description": "Custom end window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "onlyIncludeUsersWithConversionEvent": {
                "type": "boolean",
                "description": "Flag to include only users with a conversion event in the metric."
              },
              "denominatorCustomRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the denominator custom rollup window in minutes instead of days."
              },
              "customRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the custom rollup window in minutes instead of days."
              },
              "percentile": {
                "type": "number",
                "description": "Percentile value for statistical calculations.",
                "format": "double"
              },
              "useLogTransform": {
                "type": "boolean",
                "description": "Use log transform for the metric."
              },
              "useSecondaryRetentionEvent": {
                "type": "boolean",
                "description": "Use secondary retention event."
              },
              "retentionEnd": {
                "type": "number",
                "description": "Retention end.",
                "format": "double"
              },
              "retentionLength": {
                "type": "number",
                "description": "Retention length.",
                "format": "double"
              },
              "logTransformBase": {
                "type": "number",
                "nullable": true,
                "description": "Log transform base to be used for the metric.",
                "format": "double"
              },
              "cap": {
                "type": "number",
                "description": "Maximum cap for metric values.",
                "format": "double"
              },
              "surrogateMetricMSE": {
                "type": "number",
                "nullable": true,
                "description": "Mean Squared Error for surrogate metric.",
                "format": "double"
              }
            },
            "description": "Defines warehouse native metrics for advanced configurations."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team associated with the metric, applicable for enterprise environments."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the metric, applicable for enterprise environments."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the metric (used to validate that inputs are correct)"
          },
          "id": {
            "type": "string",
            "description": "Unique identifier for the metric, used for referencing within the system.",
            "example": "metricId"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Indicates if the metric is hidden from the user interface.",
            "example": false
          },
          "lineage": {
            "type": "object",
            "properties": {
              "events": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of event names that contribute to the metric’s calculation.",
                "example": [
                  "event1",
                  "event2"
                ]
              },
              "metrics": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of metric names that are part of this metric’s lineage.",
                "example": [
                  "metric1",
                  "metric2"
                ]
              }
            },
            "required": [
              "events",
              "metrics"
            ]
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the person who created the metric, if available.",
            "example": "creatorName"
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email address of the metric creator for contact purposes.",
            "example": "creatorEmail"
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp indicating when the metric was created.",
            "example": 1716230400,
            "format": "double"
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification to this metric.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              },
              "name": {
                "type": "string",
                "description": "The name of the owner.",
                "example": "John Doe"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "name",
          "type",
          "directionality",
          "id",
          "lineage"
        ]
      },
      "ExternalProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "ExternalPromptDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The gate display name"
          },
          "idType": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of target applications associated with this configuration."
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "teamID": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "createdTime",
          "creatorName"
        ]
      },
      "ExternalPromptVersionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GateCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The gate display name"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "PERMANENT",
              "TEMPORARY"
            ]
          },
          "idType": {
            "type": "string"
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "teamID": {
            "type": "string",
            "nullable": true
          },
          "measureMetricLifts": {
            "type": "boolean"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "reviewSettings": {
            "type": "object",
            "properties": {
              "requiredReview": {
                "type": "boolean"
              }
            },
            "required": [
              "requiredReview"
            ],
            "description": "Whether reviews are required for this gate. If a gate has reviews required due to a project-level or team-level setting, setting this will have no effect."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-.]*$",
            "description": "The gate name ID"
          },
          "isTemplate": {
            "type": "boolean"
          }
        },
        "description": "Create a new gate",
        "example": {
          "name": "a_verbose_gate",
          "idType": "userID",
          "isEnabled": false,
          "description": "helpful summary of what this gate does",
          "lastModifierName": "CONSOLE API",
          "lastModifierID": "5rfuqoxLIYTscuSaaCOlB8",
          "targetApps": [
            "my_app"
          ],
          "team": "team",
          "rules": [
            {
              "name": "All Conditions",
              "passPercentage": 10,
              "conditions": [
                {
                  "type": "public"
                },
                {
                  "type": "user_id",
                  "targetValue": [
                    "111",
                    "222"
                  ],
                  "operator": "any"
                },
                {
                  "type": "email",
                  "targetValue": [
                    "@outlook.com",
                    "@gmail.com"
                  ],
                  "operator": "str_contains_any"
                },
                {
                  "type": "custom_field",
                  "targetValue": 31,
                  "operator": "gt",
                  "field": "age"
                },
                {
                  "type": "app_version",
                  "targetValue": "1.1.1",
                  "operator": "version_gt"
                },
                {
                  "type": "browser_name",
                  "targetValue": [
                    "Android",
                    "Chrome"
                  ],
                  "operator": "any"
                },
                {
                  "type": "browser_version",
                  "targetValue": [
                    "94.0.4606.81",
                    "94.0.4606.92"
                  ],
                  "operator": "any"
                },
                {
                  "type": "os_name",
                  "targetValue": [
                    "Android",
                    "Windows"
                  ],
                  "operator": "none"
                },
                {
                  "type": "os_version",
                  "targetValue": "11.0.0",
                  "operator": "version_lte"
                },
                {
                  "type": "country",
                  "targetValue": [
                    "NZ",
                    "US"
                  ],
                  "operator": "any"
                },
                {
                  "type": "passes_gate",
                  "targetValue": "my_gate_2"
                },
                {
                  "type": "fails_gate",
                  "targetValue": "my_gate_2"
                },
                {
                  "type": "time",
                  "targetValue": 1643070357193,
                  "operator": "after"
                },
                {
                  "type": "environment_tier",
                  "targetValue": [
                    "production"
                  ],
                  "operator": "any"
                },
                {
                  "type": "passes_segment",
                  "targetValue": "growth_org"
                },
                {
                  "type": "fails_segment",
                  "targetValue": "growth_org"
                },
                {
                  "type": "ip_address",
                  "targetValue": [
                    "1.1.1.1",
                    "8.8.8.8"
                  ],
                  "operator": "any"
                }
              ],
              "environment": null
            }
          ],
          "checksPerHour": 0,
          "tags": [],
          "monitoringMetrics": [
            {
              "name": "dau",
              "type": "user"
            }
          ]
        }
      },
      "GateFullUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The gate display name"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "PERMANENT",
              "TEMPORARY"
            ]
          },
          "idType": {
            "type": "string"
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "teamID": {
            "type": "string",
            "nullable": true
          },
          "measureMetricLifts": {
            "type": "boolean"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "reviewSettings": {
            "type": "object",
            "properties": {
              "requiredReview": {
                "type": "boolean"
              }
            },
            "required": [
              "requiredReview"
            ],
            "description": "Whether reviews are required for this gate. If a gate has reviews required due to a project-level or team-level setting, setting this will have no effect."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "isEnabled",
          "description",
          "rules"
        ],
        "example": {
          "isEnabled": false,
          "description": "Updated Gate Description",
          "rules": [
            {
              "name": "All Conditions",
              "passPercentage": 10,
              "conditions": [
                {
                  "type": "user_id",
                  "targetValue": [
                    "111",
                    "222"
                  ],
                  "operator": "any"
                },
                {
                  "type": "email",
                  "targetValue": [
                    "@outlook.com",
                    "@gmail.com"
                  ],
                  "operator": "str_contains_any"
                },
                {
                  "type": "custom_field",
                  "targetValue": 31,
                  "operator": "gt",
                  "field": "age"
                },
                {
                  "type": "app_version",
                  "targetValue": "1.1.1",
                  "operator": "version_gt"
                },
                {
                  "type": "browser_name",
                  "targetValue": [
                    "Android",
                    "Chrome"
                  ],
                  "operator": "any"
                },
                {
                  "type": "browser_version",
                  "targetValue": [
                    "94.0.4606.81",
                    "94.0.4606.92"
                  ],
                  "operator": "any"
                },
                {
                  "type": "os_name",
                  "targetValue": [
                    "Android",
                    "Windows"
                  ],
                  "operator": "none"
                },
                {
                  "type": "os_version",
                  "targetValue": "11.0.0",
                  "operator": "version_lte"
                },
                {
                  "type": "country",
                  "targetValue": [
                    "NZ",
                    "US"
                  ],
                  "operator": "any"
                },
                {
                  "type": "environment_tier",
                  "targetValue": [
                    "production"
                  ],
                  "operator": "any"
                },
                {
                  "type": "passes_segment",
                  "targetValue": "growth_org"
                },
                {
                  "type": "fails_segment",
                  "targetValue": "growth_org"
                },
                {
                  "type": "ip_address",
                  "targetValue": [
                    "1.1.1.1",
                    "8.8.8.8"
                  ],
                  "operator": "any"
                },
                {
                  "type": "unit_id",
                  "operator": "any",
                  "targetValue": [
                    "31"
                  ],
                  "customID": "userID"
                }
              ]
            }
          ],
          "tags": [
            "★ Core"
          ],
          "type": "TEMPORARY",
          "idType": "stableID",
          "targetApps": []
        }
      },
      "GatePartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-. ]*$",
            "description": "The gate display name"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "PERMANENT",
              "TEMPORARY"
            ]
          },
          "idType": {
            "type": "string"
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "creatorID": {
            "type": "string",
            "nullable": true
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true
          },
          "teamID": {
            "type": "string",
            "nullable": true
          },
          "measureMetricLifts": {
            "type": "boolean"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          },
          "reviewSettings": {
            "type": "object",
            "properties": {
              "requiredReview": {
                "type": "boolean"
              }
            },
            "required": [
              "requiredReview"
            ],
            "description": "Whether reviews are required for this gate. If a gate has reviews required due to a project-level or team-level setting, setting this will have no effect."
          },
          "releasePipelineID": {
            "type": "string",
            "nullable": true
          }
        },
        "example": {
          "description": "Updated the description of the gate"
        }
      },
      "GatePulseResultsDto": {
        "type": "object",
        "properties": {
          "ds": {
            "type": "string"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "metricID": {
                  "type": "string"
                },
                "metricName": {
                  "type": "string"
                },
                "directionality": {
                  "type": "string",
                  "enum": [
                    "increase",
                    "decrease"
                  ],
                  "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
                  "example": "increase"
                },
                "absoluteChange": {
                  "type": "number"
                },
                "confidenceIntervalDelta": {
                  "type": "number",
                  "description": "Absolute confidence interval delta"
                },
                "percentChange": {
                  "type": "number"
                },
                "sequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentConfidenceIntervalDelta": {
                  "type": "number"
                },
                "percentSequentialTestingConfidenceIntervalDelta": {
                  "type": "number"
                },
                "testMean": {
                  "type": "number"
                },
                "controlMean": {
                  "type": "number"
                },
                "testStd": {
                  "type": "number"
                },
                "controlStd": {
                  "type": "number"
                },
                "testUnits": {
                  "type": "number"
                },
                "controlUnits": {
                  "type": "number"
                },
                "pValue": {
                  "type": "number"
                },
                "absoluteToplineImpact": {
                  "type": "number"
                },
                "absoluteToplineImpactDelta": {
                  "type": "number"
                },
                "relativeToplineImpact": {
                  "type": "number"
                },
                "relativeToplineImpactDelta": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpact": {
                  "type": "number"
                },
                "projectedAbsoluteToplineImpactDelta": {
                  "type": "number"
                },
                "projectedRelativeToplineImpact": {
                  "type": "number"
                },
                "projectedRelativeToplineImpactDelta": {
                  "type": "number"
                }
              },
              "required": [
                "metricID",
                "metricName",
                "directionality"
              ],
              "additionalProperties": false
            }
          }
        },
        "required": [
          "ds",
          "monitoringMetrics"
        ]
      },
      "GateRulesDto": {
        "type": "object",
        "properties": {
          "rules": {
            "description": "Gate Rules",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        },
        "required": [
          "rules"
        ]
      },
      "HoldoutCreateContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "example": "team holdout",
            "description": "name of the holdout"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "holdout for this team",
            "description": "description of the holdout"
          },
          "idType": {
            "type": "string",
            "example": "userID",
            "description": "type of id"
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "example": "4pjeXYDjC2WinSgOiII7wh",
            "description": "id of the team"
          }
        },
        "required": [
          "name"
        ]
      },
      "HoldoutDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Optional name for the configuration."
          },
          "idType": {
            "type": "string",
            "description": "type of id"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "example holdout description",
            "description": "brief summary of what the holdout is being used for"
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created the entity."
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the creator."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "targetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of target applications associated with this configuration."
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional name for the responsible team."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the responsible team."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "isEnabled": {
            "type": "boolean",
            "example": true,
            "description": "enable or disable the holdout"
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "example": 5,
            "description": "percentage of users between 0-10% to pass through the holdout",
            "format": "double"
          },
          "gateIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "4pjeXYDjC2WinSgOiII7wh"
            ],
            "description": "an array of gateIDs which this holdout is applied to"
          },
          "experimentIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "70fCNphHGesdLwHdHau99q"
            ],
            "description": "an array of experimentIDs which this holdout is applied to"
          },
          "layerIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "5O908pyGoCqw6QH1nt8v82"
            ],
            "description": "an array of layerIDs which this holdout is applied to"
          },
          "isGlobal": {
            "type": "boolean",
            "example": false,
            "description": "whether the holdout is being applied to all new gates"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "example": "4pjeXYDjC2WinSgOiII7wh",
            "description": "the gateID that the holdout is targeting"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          }
        },
        "required": [
          "id",
          "idType",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "creatorID",
          "createdTime",
          "creatorName",
          "creatorEmail",
          "isEnabled",
          "passPercentage",
          "gateIDs",
          "experimentIDs",
          "layerIDs",
          "isGlobal",
          "targetingGateID"
        ]
      },
      "HoldoutFullUpdateContractDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "example": true,
            "description": "enable or disable the holdout"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "example holdout description",
            "description": "brief summary of what the holdout is being used for"
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "example": 5,
            "description": "percentage of users between 0-10% to pass through the holdout",
            "format": "double"
          },
          "gateIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "4pjeXYDjC2WinSgOiII7wh"
            ],
            "description": "an array of gateIDs which this holdout is applied to"
          },
          "experimentIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "70fCNphHGesdLwHdHau99q"
            ],
            "description": "an array of experimentIDs which this holdout is applied to"
          },
          "layerIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "5O908pyGoCqw6QH1nt8v82"
            ],
            "description": "an array of layerIDs which this holdout is applied to"
          },
          "isGlobal": {
            "type": "boolean",
            "example": false,
            "description": "whether the holdout is being applied to all new gates"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "example": "4pjeXYDjC2WinSgOiII7wh",
            "description": "the gateID that the holdout is targeting"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          }
        },
        "required": [
          "isEnabled",
          "description",
          "passPercentage",
          "gateIDs",
          "experimentIDs",
          "layerIDs",
          "isGlobal",
          "targetingGateID"
        ]
      },
      "HoldoutPartialUpdateContractDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "example": true,
            "description": "enable or disable the holdout"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "example holdout description",
            "description": "brief summary of what the holdout is being used for"
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "example": 5,
            "description": "percentage of users between 0-10% to pass through the holdout",
            "format": "double"
          },
          "gateIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "4pjeXYDjC2WinSgOiII7wh"
            ],
            "description": "an array of gateIDs which this holdout is applied to"
          },
          "experimentIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "70fCNphHGesdLwHdHau99q"
            ],
            "description": "an array of experimentIDs which this holdout is applied to"
          },
          "layerIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "5O908pyGoCqw6QH1nt8v82"
            ],
            "description": "an array of layerIDs which this holdout is applied to"
          },
          "isGlobal": {
            "type": "boolean",
            "example": false,
            "description": "whether the holdout is being applied to all new gates"
          },
          "targetingGateID": {
            "type": "string",
            "nullable": true,
            "example": "4pjeXYDjC2WinSgOiII7wh",
            "description": "the gateID that the holdout is targeting"
          },
          "monitoringMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            }
          }
        }
      },
      "IDListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name associated with the list of IDs",
            "example": "Example List"
          },
          "count": {
            "type": "number",
            "description": "The count of IDs in the list",
            "example": 5,
            "format": "double"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The array of IDs",
            "example": [
              "id1",
              "id2",
              "id3",
              "id4",
              "id5"
            ]
          }
        },
        "required": [
          "name",
          "count",
          "ids"
        ],
        "description": "Schema for a list of IDs with a name and count",
        "example": {
          "name": "Example List",
          "count": 5,
          "ids": [
            "id1",
            "id2",
            "id3",
            "id4",
            "id5"
          ]
        }
      },
      "IDListMetadataDto": {
        "type": "object",
        "properties": {
          "currentVersion": {
            "type": "number",
            "description": "The current version of the ID list",
            "example": 4,
            "format": "double"
          },
          "isUpdating": {
            "type": "boolean",
            "description": "If the ID list is currently being updated",
            "example": true
          }
        }
      },
      "IngestionBackfillContractDto": {
        "type": "object",
        "properties": {
          "datestamp_start": {
            "type": "string",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "example": "2024-01-01"
          },
          "datestamp_end": {
            "type": "string",
            "description": "Expected valid date in the form of YYYY-MM-DD",
            "example": "2024-01-01"
          },
          "type": {
            "type": "string",
            "enum": [
              "redshift",
              "bigquery-v2",
              "snowflake-v2",
              "databricks",
              "azure-synapse",
              "s3",
              "athena",
              "adls"
            ]
          },
          "source": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "nullable": true
          },
          "dataset": {
            "type": "string",
            "enum": [
              "Events",
              "Metrics",
              "export_exposures",
              "entity_properties"
            ]
          }
        },
        "required": [
          "datestamp_start",
          "datestamp_end",
          "type",
          "dataset"
        ]
      },
      "IngestionBackfillDataDto": {
        "type": "object",
        "properties": {
          "runID": {
            "type": "string"
          }
        },
        "required": [
          "runID"
        ]
      },
      "IngestionCreateDatabricksConnectionContractDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "deltaSharingCredentials": {
            "type": "string"
          },
          "verified": {
            "type": "boolean"
          }
        },
        "required": [
          "token",
          "host",
          "path"
        ]
      },
      "IngestionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "type",
          "enabled",
          "data"
        ]
      },
      "IngestionEventCountResponseDto": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "event": {
                  "type": "string"
                },
                "count": {
                  "type": "number"
                },
                "last_updated_time": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "date",
                "event",
                "count",
                "last_updated_time"
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "event": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      },
                      "last_updated_time": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "event",
                      "count",
                      "last_updated_time"
                    ]
                  }
                }
              },
              "required": [
                "date",
                "events"
              ]
            }
          }
        ]
      },
      "IngestionEventDeltaResponseDto": {
        "oneOf": [
          {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "event": {
                  "type": "string"
                },
                "internal_count": {
                  "type": "number"
                },
                "external_count": {
                  "type": "number"
                },
                "has_diff": {
                  "type": "boolean"
                },
                "threshold": {
                  "type": "number"
                },
                "last_updated_time": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "date",
                "source",
                "event",
                "internal_count",
                "external_count",
                "has_diff",
                "threshold",
                "last_updated_time"
              ]
            }
          },
          {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "string"
                      },
                      "event": {
                        "type": "string"
                      },
                      "internal_count": {
                        "type": "number"
                      },
                      "external_count": {
                        "type": "number"
                      },
                      "has_diff": {
                        "type": "boolean"
                      },
                      "threshold": {
                        "type": "number"
                      },
                      "last_updated_time": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "source",
                      "event",
                      "internal_count",
                      "external_count",
                      "has_diff",
                      "threshold",
                      "last_updated_time"
                    ]
                  }
                }
              },
              "required": [
                "date",
                "events"
              ]
            }
          }
        ]
      },
      "IngestionRunDataContractDto": {
        "type": "object",
        "properties": {
          "runID": {
            "type": "string"
          },
          "latestStatus": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "trigger": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateStamps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "runHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statusTimestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "statusTimestamp",
                "status"
              ]
            }
          },
          "granularHistory": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "string"
                },
                "latestSourceStatus": {
                  "type": "string"
                },
                "statusByDate": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dateStamp": {
                        "type": "string"
                      },
                      "statuses": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "statusTimestamp": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "status": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "statusTimestamp",
                            "status"
                          ]
                        }
                      }
                    },
                    "required": [
                      "dateStamp",
                      "statuses"
                    ]
                  }
                }
              },
              "required": [
                "source",
                "latestSourceStatus",
                "statusByDate"
              ]
            }
          }
        },
        "required": [
          "runID",
          "latestStatus",
          "lastUpdatedAt",
          "createdAt",
          "trigger",
          "sources",
          "dateStamps",
          "runHistory",
          "granularHistory"
        ]
      },
      "IngestionScheduleDto": {
        "type": "object",
        "properties": {
          "dataset": {
            "type": "string"
          },
          "scheduled_hour_pst": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "dataset",
          "scheduled_hour_pst"
        ]
      },
      "IngestionScheduleUpdateContractDto": {
        "type": "object",
        "properties": {
          "dataset": {
            "type": "string",
            "enum": [
              "Events",
              "Metrics",
              "export_exposures",
              "entity_properties"
            ]
          },
          "scheduled_hour_pst": {
            "default": 10,
            "type": "number",
            "minimum": 0,
            "maximum": 23,
            "format": "double"
          }
        },
        "required": [
          "dataset"
        ]
      },
      "IngestionSourceCreateContractDto": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Metrics"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this metric is for. This might not necessarily be a user_id - it could be a custom_id of some kind. Make sure this is in the same format as your logged unit_ids."
                  },
                  "id_type": {
                    "type": "string",
                    "description": "The id_type the unit_id represents. Must be valid id_type. Default Statsig types are user_id/stable_id, but you may have generated custom id_types. Make sure this matches (case sensitive) a customID in your project, or you won’t get experiment results."
                  },
                  "dateid": {
                    "type": "string",
                    "description": "Date of the daily metric, ISO formatted (ex. 2021-02-17). We’ll load custom metrics to whatever date you use here."
                  },
                  "metric_name": {
                    "type": "string",
                    "description": "String format. Not null. Length < 128 characters."
                  },
                  "metric_value": {
                    "default": "null",
                    "type": "string",
                    "description": "Numeric value for the metric. This OR both of numerator and denominator need to be provided."
                  },
                  "numerator": {
                    "default": "null",
                    "type": "string",
                    "description": "Required for ratio metrics. If present along with a denominator in any record, the metric will be treated as ratio and only calculated for users with non-null denominators"
                  },
                  "denominator": {
                    "default": "null",
                    "type": "string",
                    "description": "Required for ratio metrics. If present along with a numerator in any record, the metric will be treated as ratio and only calculated for users with non-null numerators."
                  }
                },
                "required": [
                  "unit_id",
                  "id_type",
                  "dateid",
                  "metric_name"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "use_delta_sharing": {
                "type": "boolean",
                "enum": [
                  true
                ]
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type",
              "source_name"
            ]
          },
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Events"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this event is for. This might not necessarily be a single column for userID - it could be spread across multiple columns for deviceID etc."
                  },
                  "event_name": {
                    "type": "string",
                    "description": "Name of the event. String under 128 characters, using ‘_’ for spaces."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Unix timestamp in seconds of the event (ex. 1613584800)"
                  },
                  "ids": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata_object": {
                    "default": "null",
                    "type": "string"
                  },
                  "event_value": {
                    "default": "",
                    "type": "string"
                  }
                },
                "required": [
                  "event_name",
                  "timestamp",
                  "ids"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "use_delta_sharing": {
                "type": "boolean",
                "enum": [
                  true
                ]
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type",
              "source_name"
            ]
          },
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Exposures",
                  "export_exposures"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "experiment": {
                    "type": "string",
                    "description": "Unique identifier for the experiment."
                  },
                  "group_id": {
                    "type": "string",
                    "description": "Unique identifier for the experiment groups."
                  },
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this exposure is for. This might not necessarily be a single column for userID - it could be spread across multiple columns for deviceID etc."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Unix timestamp in seconds of the event (ex. 1613584800)"
                  },
                  "ids": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata_object": {
                    "default": "null",
                    "type": "string"
                  },
                  "event_value": {
                    "default": "",
                    "type": "string"
                  }
                },
                "required": [
                  "experiment",
                  "group_id",
                  "timestamp",
                  "ids"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "use_delta_sharing": {
                "type": "boolean",
                "enum": [
                  true
                ]
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type",
              "source_name"
            ]
          }
        ]
      },
      "IngestionStatusDto": {
        "type": "object",
        "properties": {
          "ds": {
            "type": "string",
            "format": "date-time"
          },
          "ingestion_dataset": {
            "type": "string",
            "nullable": true
          },
          "ingestion_source": {
            "type": "string",
            "nullable": true
          },
          "source_name": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "error_message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "rowCount": {
            "type": "number",
            "format": "double"
          },
          "metricCount": {
            "type": "number",
            "format": "double"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "ingestion_dataset",
          "ingestion_source",
          "source_name",
          "message",
          "status",
          "timestamp"
        ]
      },
      "IngestionUpdateContractDto": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Metrics"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this metric is for. This might not necessarily be a user_id - it could be a custom_id of some kind. Make sure this is in the same format as your logged unit_ids."
                  },
                  "id_type": {
                    "type": "string",
                    "description": "The id_type the unit_id represents. Must be valid id_type. Default Statsig types are user_id/stable_id, but you may have generated custom id_types. Make sure this matches (case sensitive) a customID in your project, or you won’t get experiment results."
                  },
                  "dateid": {
                    "type": "string",
                    "description": "Date of the daily metric, ISO formatted (ex. 2021-02-17). We’ll load custom metrics to whatever date you use here."
                  },
                  "metric_name": {
                    "type": "string",
                    "description": "String format. Not null. Length < 128 characters."
                  },
                  "metric_value": {
                    "default": "null",
                    "type": "string",
                    "description": "Numeric value for the metric. This OR both of numerator and denominator need to be provided."
                  },
                  "numerator": {
                    "default": "null",
                    "type": "string",
                    "description": "Required for ratio metrics. If present along with a denominator in any record, the metric will be treated as ratio and only calculated for users with non-null denominators"
                  },
                  "denominator": {
                    "default": "null",
                    "type": "string",
                    "description": "Required for ratio metrics. If present along with a numerator in any record, the metric will be treated as ratio and only calculated for users with non-null numerators."
                  }
                },
                "required": [
                  "unit_id",
                  "id_type",
                  "dateid",
                  "metric_name"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Events"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this event is for. This might not necessarily be a single column for userID - it could be spread across multiple columns for deviceID etc."
                  },
                  "event_name": {
                    "type": "string",
                    "description": "Name of the event. String under 128 characters, using ‘_’ for spaces."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Unix timestamp in seconds of the event (ex. 1613584800)"
                  },
                  "ids": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata_object": {
                    "default": "null",
                    "type": "string"
                  },
                  "event_value": {
                    "default": "",
                    "type": "string"
                  }
                },
                "required": [
                  "event_name",
                  "timestamp",
                  "ids"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "dataset": {
                "type": "string",
                "enum": [
                  "Exposures",
                  "export_exposures"
                ]
              },
              "column_mapping": {
                "type": "object",
                "properties": {
                  "experiment": {
                    "type": "string",
                    "description": "Unique identifier for the experiment."
                  },
                  "group_id": {
                    "type": "string",
                    "description": "Unique identifier for the experiment groups."
                  },
                  "unit_id": {
                    "type": "string",
                    "description": "The unique user identifier this exposure is for. This might not necessarily be a single column for userID - it could be spread across multiple columns for deviceID etc."
                  },
                  "timestamp": {
                    "type": "string",
                    "description": "Unix timestamp in seconds of the event (ex. 1613584800)"
                  },
                  "ids": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata": {
                    "default": {},
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "metadata_object": {
                    "default": "null",
                    "type": "string"
                  },
                  "event_value": {
                    "default": "",
                    "type": "string"
                  }
                },
                "required": [
                  "experiment",
                  "group_id",
                  "timestamp",
                  "ids"
                ]
              },
              "type": {
                "type": "string",
                "enum": [
                  "redshift",
                  "bigquery-v2",
                  "snowflake-v2",
                  "databricks",
                  "azure-synapse",
                  "s3",
                  "athena",
                  "adls"
                ]
              },
              "source_name": {
                "type": "string"
              },
              "query": {
                "type": "string"
              },
              "share": {
                "type": "string"
              },
              "schema": {
                "type": "string"
              },
              "table": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              }
            },
            "required": [
              "dataset",
              "type"
            ]
          }
        ]
      },
      "KeyCreateContractDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "type": {
            "type": "string",
            "enum": [
              "SERVER",
              "CLIENT",
              "CONSOLE",
              "SCIM",
              "ORG"
            ]
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "omni_read_only",
                "omni_read_write",
                "client_download_config_specs",
                "none_hash_enabled",
                "can_access_keys",
                "client_can_write_user_store",
                "personal_read_only",
                "personal_read_write"
              ]
            }
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetAppID": {
            "type": "string"
          },
          "secondaryTargetAppIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "description",
          "type"
        ]
      },
      "KeyDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "enum": [
              "SERVER",
              "CLIENT",
              "CONSOLE",
              "SCIM",
              "ORG"
            ]
          },
          "description": {
            "type": "string"
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "omni_read_only",
                "omni_read_write",
                "client_download_config_specs",
                "none_hash_enabled",
                "can_access_keys",
                "client_can_write_user_store",
                "personal_read_only",
                "personal_read_write"
              ]
            }
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "primaryTargetApp": {
            "type": "string",
            "nullable": true
          },
          "secondaryTargetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "deactivated"
            ]
          }
        },
        "required": [
          "key",
          "type",
          "description",
          "scopes",
          "status"
        ]
      },
      "KeyUpdateContractDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "omni_read_only",
                "omni_read_write",
                "client_download_config_specs",
                "none_hash_enabled",
                "can_access_keys",
                "client_can_write_user_store",
                "personal_read_only",
                "personal_read_write"
              ]
            }
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetAppID": {
            "type": "string",
            "nullable": true
          },
          "secondaryTargetAppIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        }
      },
      "LayerContractDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Optional name for the configuration."
          },
          "idType": {
            "type": "string",
            "description": "The ID type used for this layer, important for validation."
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A detailed description of the layer, explaining its purpose and functionality."
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created the entity."
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the creator."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "List of target applications that this layer is intended for."
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional name for the responsible team."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the responsible team."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          },
          "isImplicitLayer": {
            "type": "boolean",
            "description": "Indicates if the layer was automatically created by Statsig during experiment creation."
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this parameter, used for identification within the layer."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "number",
                    "boolean",
                    "object",
                    "array"
                  ],
                  "description": "The data type that this parameter returns. Allowed types include: string, boolean, number, object, and array."
                },
                "defaultValue": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "object",
                            "additionalProperties": {}
                          }
                        ]
                      }
                    }
                  ],
                  "description": "The default value for this parameter, which must match the specified type."
                }
              },
              "required": [
                "name",
                "type",
                "defaultValue"
              ]
            },
            "description": "An array of parameters associated with the layer, each defining specific attributes."
          }
        },
        "required": [
          "id",
          "idType",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "creatorID",
          "createdTime",
          "creatorName",
          "creatorEmail",
          "isImplicitLayer",
          "parameters"
        ]
      },
      "LayerCreateContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[A-Za-z0-9_ -]*$",
            "description": "The unique name of the layer, formatted as an ID (e.g., \"A Layer\" becomes \"a_layer\")."
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A helpful description of what this layer does, providing context for its purpose."
          },
          "idType": {
            "type": "string",
            "description": "The type of ID used for this layer, essential for validation in services."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "List of target applications that this layer is associated with."
          },
          "team": {
            "type": "string",
            "description": "Optional identifier for the team responsible for this layer."
          }
        },
        "required": [
          "name",
          "idType"
        ]
      },
      "LayerFullUpdateContractDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A detailed description of the layer, explaining its purpose and functionality."
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this parameter, used for identification within the layer."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "number",
                    "boolean",
                    "object",
                    "array"
                  ],
                  "description": "The data type that this parameter returns. Allowed types include: string, boolean, number, object, and array."
                },
                "defaultValue": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "object",
                            "additionalProperties": {}
                          }
                        ]
                      }
                    }
                  ],
                  "description": "The default value for this parameter, which must match the specified type."
                }
              },
              "required": [
                "name",
                "type",
                "defaultValue"
              ]
            },
            "description": "An array of parameters associated with the layer, each defining specific attributes."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "List of target applications that this layer is intended for."
          }
        },
        "required": [
          "description",
          "parameters"
        ]
      },
      "LayerOverridesDto": {
        "type": "object",
        "properties": {
          "conditionalOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Describes whether layer override is segment or gate"
                },
                "name": {
                  "type": "string",
                  "description": "Name of override entity"
                },
                "experimentName": {
                  "type": "string"
                },
                "groupName": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name",
                "experimentName",
                "groupName"
              ]
            }
          },
          "idOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "groupName": {
                  "type": "string",
                  "description": "Group that ID is overriden into"
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "ID being overriden into a particular group"
                },
                "idType": {
                  "type": "string",
                  "nullable": true
                },
                "environment": {
                  "type": "string",
                  "nullable": true
                },
                "experimentName": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "groupName",
                "ids"
              ]
            }
          }
        },
        "required": [
          "conditionalOverrides",
          "idOverrides"
        ]
      },
      "LayerOverridesPatchDto": {
        "type": "object",
        "properties": {
          "op": {
            "type": "string",
            "enum": [
              "add"
            ],
            "description": "Add a layer override"
          },
          "conditionalOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Describes whether layer override is segment or gate"
                },
                "name": {
                  "type": "string",
                  "description": "Name of override entity"
                },
                "experimentName": {
                  "type": "string"
                },
                "groupName": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "name",
                "experimentName",
                "groupName"
              ]
            }
          },
          "idOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "groupName": {
                  "type": "string",
                  "description": "Group that ID is overriden into"
                },
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "ID being overriden into a particular group"
                },
                "idType": {
                  "type": "string",
                  "nullable": true
                },
                "environment": {
                  "type": "string",
                  "nullable": true
                },
                "experimentName": {
                  "type": "string",
                  "nullable": true
                }
              },
              "required": [
                "groupName",
                "ids"
              ]
            }
          }
        },
        "required": [
          "op",
          "conditionalOverrides",
          "idOverrides"
        ]
      },
      "LayerPartialUpdateContractDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A detailed description of the layer, explaining its purpose and functionality."
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this parameter, used for identification within the layer."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "number",
                    "boolean",
                    "object",
                    "array"
                  ],
                  "description": "The data type that this parameter returns. Allowed types include: string, boolean, number, object, and array."
                },
                "defaultValue": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "object",
                            "additionalProperties": {}
                          }
                        ]
                      }
                    }
                  ],
                  "description": "The default value for this parameter, which must match the specified type."
                }
              },
              "required": [
                "name",
                "type",
                "defaultValue"
              ]
            },
            "description": "An array of parameters associated with the layer, each defining specific attributes."
          },
          "targetApps": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ],
            "description": "List of target applications that this layer is intended for."
          }
        }
      },
      "LoggedEventDto": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "The timestamp when the event occurred, represented as a string."
          },
          "name": {
            "type": "string",
            "description": "The name of the event (e.g., \"add_to_cart\")."
          },
          "source": {
            "type": "string",
            "description": "The source of the event, indicating where it was triggered from."
          },
          "value": {
            "type": "string",
            "description": "The value associated with the event, providing additional context."
          },
          "userID": {
            "type": "string",
            "description": "The ID of the user who triggered the event."
          }
        },
        "required": [
          "timestamp",
          "name",
          "source",
          "value",
          "userID"
        ]
      },
      "MetricCreationContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200,
            "minLength": 4,
            "pattern": "^[a-zA-Z0-9_.\\-()/ %:]*$",
            "description": "The name of the new metric, which identifies it within the system.",
            "example": "metricName"
          },
          "type": {
            "type": "string",
            "enum": [
              "ratio",
              "mean",
              "event_count_custom",
              "event_user",
              "funnel",
              "composite",
              "composite_sum",
              "sum",
              "undefined",
              "user_warehouse"
            ],
            "example": "sum"
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the metric as verified for internal trustworthiness.",
            "example": false
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Set to true to make the metric definition editable only from the Console API.",
            "example": false
          },
          "unitTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of unit types associated with the metric, such as stableID or userID.",
            "example": [
              "stableID",
              "userID"
            ]
          },
          "metricEvents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric event."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "count",
                    "count_distinct",
                    "value",
                    "metadata"
                  ],
                  "nullable": true,
                  "description": "The type of metric event. Allowed values include: count, count_distinct, value, and metadata."
                },
                "metadataKey": {
                  "type": "string",
                  "description": "The key for associated metadata, if applicable."
                },
                "criteria": {
                  "type": "array",
                  "items": {
                    "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                    "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                  },
                  "description": "Filtering criteria for the metric event, including conditions and values to refine the event data."
                }
              },
              "required": [
                "name"
              ]
            },
            "description": "An array of event definitions used to compute the metric.",
            "example": [
              {
                "name": "event1",
                "type": "value"
              }
            ]
          },
          "metricComponentMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "List of input metrics used to calculate the new metric for composite types.",
            "example": []
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A description of the new metric, providing context and purpose."
          },
          "directionality": {
            "default": "increase",
            "type": "string",
            "enum": [
              "increase",
              "decrease"
            ],
            "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
            "example": "increase"
          },
          "tags": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ],
            "description": "Tags associated with the metric for categorization and searchability.",
            "example": [
              "tag1",
              "tag2"
            ]
          },
          "isPermanent": {
            "type": "boolean",
            "description": "Indicates whether the metric is permanent and should not be deleted.",
            "example": false
          },
          "rollupTimeWindow": {
            "type": "string",
            "description": "Time window for the metric rollup. Specify \"custom\" for a customized time window.",
            "example": "custom"
          },
          "customRollUpStart": {
            "type": "number",
            "description": "Custom time window start date in days since exposure.",
            "example": 1,
            "format": "double"
          },
          "customRollUpEnd": {
            "type": "number",
            "description": "Custom time window end date in days since exposure.",
            "example": 1,
            "format": "double"
          },
          "funnelEventList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the funnel event used in the metric.",
                  "example": "event1"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "event_dau",
                    "event_user",
                    "event_count",
                    "event_count_custom"
                  ],
                  "description": "The type of funnel event, specifying how the event is tracked.",
                  "example": "event_dau"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "List of events used to create funnel metrics."
          },
          "funnelCountDistinct": {
            "type": "string",
            "enum": [
              "events",
              "users"
            ],
            "description": "Specifies whether to count events or distinct users for the funnel metric."
          },
          "warehouseNative": {
            "type": "object",
            "properties": {
              "aggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "metricSourceName": {
                "type": "string",
                "description": "For Count, Sum, Mean, User Count aggregation types: the name of metric source"
              },
              "criteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the metric source"
              },
              "waitForCohortWindow": {
                "type": "boolean"
              },
              "denominatorCriteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the denominator metric source, if this metric is a ratio"
              },
              "denominatorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "denominatorCustomRollupEnd": {
                "type": "number",
                "description": "Custom end window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorCustomRollupStart": {
                "type": "number",
                "description": "Custom start window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorMetricSourceName": {
                "type": "string",
                "description": "Name of the metric source for the denominator."
              },
              "denominatorRollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for ratio denominator unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "denominatorValueColumn": {
                "type": "string",
                "description": "Column name for the denominator’s value."
              },
              "funnelCalculationWindow": {
                "type": "number",
                "description": "Duration for counting funnel events in days.",
                "format": "double"
              },
              "funnelCountDistinct": {
                "type": "string",
                "enum": [
                  "sessions",
                  "users"
                ],
                "description": "Allowed: users┃sessions for distinct count method in funnel events."
              },
              "funnelEvents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "criteria": {
                      "type": "array",
                      "items": {
                        "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                        "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                      },
                      "description": "Optional array of criteria to filter the funnel events, defined by various types and conditions."
                    },
                    "metricSourceName": {
                      "type": "string",
                      "description": "Optional name of the metric source associated with the funnel event."
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "Optional step name for the funnel event, can be null if not specified."
                    },
                    "sessionIdentifierField": {
                      "type": "string",
                      "nullable": true,
                      "description": "Name of column which being used as session identifier. Funnel event with the same metric source"
                    }
                  }
                },
                "description": "List of funnel events with associated criteria and identifiers."
              },
              "funnelStartCriteria": {
                "type": "string",
                "enum": [
                  "start_event",
                  "exposure"
                ],
                "description": "Allowed: start_event┃exposure to determine funnel start criteria."
              },
              "metricDimensionColumns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Specify metadata columns for breaking down metric analysis."
              },
              "metricBakeDays": {
                "type": "number",
                "description": "Number of days for metric baking; specify duration for analysis.",
                "format": "double"
              },
              "numeratorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Aggregation type for numerator; Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile."
              },
              "valueColumn": {
                "type": "string",
                "description": "Column name representing the metric’s value."
              },
              "valueThreshold": {
                "type": "number",
                "description": "Threshold value for filtering metrics.",
                "format": "double"
              },
              "allowNullRatioDenominator": {
                "type": "boolean",
                "description": "Include units which do not have a denominator. Only applicable to ratios."
              },
              "funnelStrictOrdering": {
                "type": "boolean"
              },
              "funnelUseExposureAsFirstEvent": {
                "type": "boolean"
              },
              "funnelTimestampAllowanceMs": {
                "type": "number",
                "format": "double"
              },
              "funnelTimeToConvert": {
                "type": "boolean"
              },
              "winsorizationHigh": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "High threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationLow": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "Low threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationHighDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "winsorizationLowDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "cupedAttributionWindow": {
                "type": "number",
                "nullable": true,
                "description": "Attribution window for CUPED adjustments in days.",
                "format": "double"
              },
              "rollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "customRollUpStart": {
                "type": "number",
                "description": "Custom start window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "customRollUpEnd": {
                "type": "number",
                "description": "Custom end window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "onlyIncludeUsersWithConversionEvent": {
                "type": "boolean",
                "description": "Flag to include only users with a conversion event in the metric."
              },
              "denominatorCustomRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the denominator custom rollup window in minutes instead of days."
              },
              "customRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the custom rollup window in minutes instead of days."
              },
              "percentile": {
                "type": "number",
                "description": "Percentile value for statistical calculations.",
                "format": "double"
              },
              "useLogTransform": {
                "type": "boolean",
                "description": "Use log transform for the metric."
              },
              "useSecondaryRetentionEvent": {
                "type": "boolean",
                "description": "Use secondary retention event."
              },
              "retentionEnd": {
                "type": "number",
                "description": "Retention end.",
                "format": "double"
              },
              "retentionLength": {
                "type": "number",
                "description": "Retention length.",
                "format": "double"
              },
              "logTransformBase": {
                "type": "number",
                "nullable": true,
                "description": "Log transform base to be used for the metric.",
                "format": "double"
              },
              "cap": {
                "type": "number",
                "description": "Maximum cap for metric values.",
                "format": "double"
              },
              "surrogateMetricMSE": {
                "type": "number",
                "nullable": true,
                "description": "Mean Squared Error for surrogate metric.",
                "format": "double"
              }
            },
            "description": "Defines warehouse native metrics for advanced configurations."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "The team associated with the metric, applicable for enterprise environments."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "The team ID associated with the metric, applicable for enterprise environments."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the metric (used to validate that inputs are correct)"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "MetricEventsCriteriaDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "value",
              "metadata",
              "user",
              "user_custom"
            ],
            "description": "Type of event criterion for filtering metrics. Options include `value`, `metadata`, `user`, and `user_custom`; in Warehouse Native, this should always be `metadata`."
          },
          "column": {
            "type": "string",
            "description": "Optional column specifying which data attribute to filter on."
          },
          "condition": {
            "type": "string",
            "enum": [
              "in",
              "not_in",
              "=",
              ">",
              "<",
              ">=",
              "<=",
              "is_null",
              "non_null",
              "contains",
              "not_contains",
              "sql_filter",
              "starts_with",
              "ends_with",
              "after_exposure",
              "before_exposure",
              "is_true",
              "is_false"
            ],
            "description": "sql_filter, start_withs, ends_with, after_exposure, and before_exposure are only applicable in Warehouse Native"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of values for the criterion to match against."
          },
          "nullVacuousOverride": {
            "type": "boolean",
            "description": "If true, overrides null values in criterion evaluation."
          }
        },
        "required": [
          "type",
          "condition"
        ],
        "description": "Array of event criteria for defining filtering conditions in metrics analysis."
      },
      "MetricSourceContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the source, serving as its primary identifier."
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the source, providing context and usage information."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorizing the source and improving searchability."
          },
          "sql": {
            "type": "string",
            "description": "The SQL query or statement used to extract data from the source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "The name of the column containing timestamp data for the source."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates whether the timestamp should be treated as a day-level granularity."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "The identifier mapping for Statsig units."
                },
                "column": {
                  "type": "string",
                  "description": "The corresponding column name in the source that relates to the Statsig unit ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Array defining the mapping between Statsig unit IDs and their respective source columns."
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "table",
              "query"
            ],
            "description": "The type of source, indicating whether it is a database table or a custom query."
          },
          "tableName": {
            "type": "string",
            "description": "The name of the database table if the source type is \"table\"."
          },
          "datePartitionColumn": {
            "type": "string",
            "description": "The name of the date partition column if the source type is \"table\". Can be undefined."
          },
          "customFieldMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The identifier for the custom field mapping."
                },
                "formula": {
                  "type": "string",
                  "description": "The formula or expression used to compute the custom field value."
                }
              },
              "required": [
                "key",
                "formula"
              ]
            },
            "description": "Optional array defining mappings for custom fields using specific formulas."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the metric source as verified, indicating trustworthiness within the organization.",
            "example": false
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          }
        },
        "required": [
          "name",
          "description",
          "sql",
          "timestampColumn",
          "idTypeMapping"
        ]
      },
      "MetricSourceCreationContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the source, serving as its primary identifier."
          },
          "description": {
            "type": "string",
            "description": "An optional description for the source, providing context and details about its purpose and usage."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of tags to categorize the source, facilitating easier organization and retrieval."
          },
          "sql": {
            "type": "string",
            "description": "The SQL query or statement used to extract data from the source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "The name of the column containing timestamp data for the source."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates whether the timestamp should be treated as a day-level granularity."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "The identifier mapping for Statsig units."
                },
                "column": {
                  "type": "string",
                  "description": "The corresponding column name in the source that relates to the Statsig unit ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Array defining the mapping between Statsig unit IDs and their respective source columns."
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "table",
              "query"
            ],
            "description": "The type of source, indicating whether it is a database table or a custom query."
          },
          "tableName": {
            "type": "string",
            "description": "The name of the database table if the source type is \"table\"."
          },
          "datePartitionColumn": {
            "type": "string",
            "description": "The name of the date partition column if the source type is \"table\". Can be undefined."
          },
          "customFieldMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The identifier for the custom field mapping."
                },
                "formula": {
                  "type": "string",
                  "description": "The formula or expression used to compute the custom field value."
                }
              },
              "required": [
                "key",
                "formula"
              ]
            },
            "description": "Optional array defining mappings for custom fields using specific formulas."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the metric source as verified, indicating trustworthiness within the organization.",
            "example": false
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting the source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "name",
          "sql",
          "timestampColumn",
          "idTypeMapping"
        ]
      },
      "MetricSourceUpdateContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the source cannot be changed in this update, ensuring the identity remains consistent."
          },
          "description": {
            "type": "string",
            "description": "An optional updated description for the source, providing additional context or changes."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional array of tags for categorizing the source, allowing for updates to its categorization."
          },
          "sql": {
            "type": "string",
            "description": "The SQL query or statement used to extract data from the source."
          },
          "timestampColumn": {
            "type": "string",
            "description": "The name of the column containing timestamp data for the source."
          },
          "timestampAsDay": {
            "type": "boolean",
            "description": "Indicates whether the timestamp should be treated as a day-level granularity."
          },
          "idTypeMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "statsigUnitID": {
                  "type": "string",
                  "description": "The identifier mapping for Statsig units."
                },
                "column": {
                  "type": "string",
                  "description": "The corresponding column name in the source that relates to the Statsig unit ID."
                }
              },
              "required": [
                "statsigUnitID",
                "column"
              ]
            },
            "description": "Array defining the mapping between Statsig unit IDs and their respective source columns."
          },
          "sourceType": {
            "type": "string",
            "enum": [
              "table",
              "query"
            ],
            "description": "The type of source, indicating whether it is a database table or a custom query."
          },
          "tableName": {
            "type": "string",
            "description": "The name of the database table if the source type is \"table\"."
          },
          "datePartitionColumn": {
            "type": "string",
            "description": "The name of the date partition column if the source type is \"table\". Can be undefined."
          },
          "customFieldMapping": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string",
                  "description": "The identifier for the custom field mapping."
                },
                "formula": {
                  "type": "string",
                  "description": "The formula or expression used to compute the custom field value."
                }
              },
              "required": [
                "key",
                "formula"
              ]
            },
            "description": "Optional array defining mappings for custom fields using specific formulas."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the source can only be edited via the Console API."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Marks the metric source as verified, indicating trustworthiness within the organization.",
            "example": false
          },
          "owner": {
            "type": "object",
            "properties": {
              "ownerID": {
                "type": "string",
                "description": "ID of the owner",
                "example": "abc123"
              },
              "ownerType": {
                "type": "string",
                "description": "Type of the owner (e.g., SDK_KEY or USER)",
                "example": "USER"
              },
              "ownerName": {
                "type": "string",
                "description": "The name of the owner. This field is optional.",
                "example": "John Doe"
              },
              "ownerEmail": {
                "type": "string",
                "description": "The email of the owner. This field is optional."
              }
            },
            "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
            "example": {
              "ownerID": "user123",
              "ownerType": "USER",
              "ownerName": "John Doe",
              "ownerEmail": "owner123@test.com"
            },
            "nullable": true
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting updates to the source (used to validate that inputs are correct)"
          }
        },
        "required": [
          "sql",
          "timestampColumn",
          "idTypeMapping"
        ]
      },
      "MetricsUpdateContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the metric, serving as its primary identifier.",
            "example": "metricName"
          },
          "description": {
            "type": "string",
            "description": "A detailed description of the metric, providing insights into its purpose and application."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An array of tags associated with the metric, used for categorization and easier retrieval."
          },
          "isVerified": {
            "type": "boolean",
            "description": "Flag to mark the metric as verified, ensuring it is deemed trustworthy within the organization."
          },
          "isReadOnly": {
            "type": "boolean",
            "description": "Specifies if the metric definition can only be edited via the Console API, enhancing control over modifications."
          },
          "isPermanent": {
            "type": "boolean",
            "description": "Determines if the metric is permanent, preventing it from being deleted or modified inadvertently."
          },
          "warehouseNative": {
            "type": "object",
            "properties": {
              "aggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "metricSourceName": {
                "type": "string",
                "description": "For Count, Sum, Mean, User Count aggregation types: the name of metric source"
              },
              "criteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the metric source"
              },
              "waitForCohortWindow": {
                "type": "boolean"
              },
              "denominatorCriteria": {
                "type": "array",
                "items": {
                  "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                  "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                },
                "description": "Filtering criteria for the denominator metric source, if this metric is a ratio"
              },
              "denominatorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile"
              },
              "denominatorCustomRollupEnd": {
                "type": "number",
                "description": "Custom end window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorCustomRollupStart": {
                "type": "number",
                "description": "Custom start window for ratio denominator unit count metrics with \"custom\" rollup time window. Measured in days or minutes depending on the \"denominatorCustomRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "denominatorMetricSourceName": {
                "type": "string",
                "description": "Name of the metric source for the denominator."
              },
              "denominatorRollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for ratio denominator unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "denominatorValueColumn": {
                "type": "string",
                "description": "Column name for the denominator’s value."
              },
              "funnelCalculationWindow": {
                "type": "number",
                "description": "Duration for counting funnel events in days.",
                "format": "double"
              },
              "funnelCountDistinct": {
                "type": "string",
                "enum": [
                  "sessions",
                  "users"
                ],
                "description": "Allowed: users┃sessions for distinct count method in funnel events."
              },
              "funnelEvents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "criteria": {
                      "type": "array",
                      "items": {
                        "description": "Array of event criteria for defining filtering conditions in metrics analysis.",
                        "$ref": "#/components/schemas/MetricEventsCriteriaDto"
                      },
                      "description": "Optional array of criteria to filter the funnel events, defined by various types and conditions."
                    },
                    "metricSourceName": {
                      "type": "string",
                      "description": "Optional name of the metric source associated with the funnel event."
                    },
                    "name": {
                      "type": "string",
                      "nullable": true,
                      "description": "Optional step name for the funnel event, can be null if not specified."
                    },
                    "sessionIdentifierField": {
                      "type": "string",
                      "nullable": true,
                      "description": "Name of column which being used as session identifier. Funnel event with the same metric source"
                    }
                  }
                },
                "description": "List of funnel events with associated criteria and identifiers."
              },
              "funnelStartCriteria": {
                "type": "string",
                "enum": [
                  "start_event",
                  "exposure"
                ],
                "description": "Allowed: start_event┃exposure to determine funnel start criteria."
              },
              "metricDimensionColumns": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Specify metadata columns for breaking down metric analysis."
              },
              "metricBakeDays": {
                "type": "number",
                "description": "Number of days for metric baking; specify duration for analysis.",
                "format": "double"
              },
              "numeratorAggregation": {
                "type": "string",
                "enum": [
                  "count",
                  "sum",
                  "mean",
                  "daily_participation",
                  "ratio",
                  "funnel",
                  "count_distinct",
                  "percentile",
                  "first_value",
                  "latest_value",
                  "retention",
                  "max",
                  "min",
                  ""
                ],
                "description": "Aggregation type for numerator; Allowed: count┃sum┃mean┃daily_participation┃ratio┃funnel┃count_distinct┃percentile."
              },
              "valueColumn": {
                "type": "string",
                "description": "Column name representing the metric’s value."
              },
              "valueThreshold": {
                "type": "number",
                "description": "Threshold value for filtering metrics.",
                "format": "double"
              },
              "allowNullRatioDenominator": {
                "type": "boolean",
                "description": "Include units which do not have a denominator. Only applicable to ratios."
              },
              "funnelStrictOrdering": {
                "type": "boolean"
              },
              "funnelUseExposureAsFirstEvent": {
                "type": "boolean"
              },
              "funnelTimestampAllowanceMs": {
                "type": "number",
                "format": "double"
              },
              "funnelTimeToConvert": {
                "type": "boolean"
              },
              "winsorizationHigh": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "High threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationLow": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "description": "Low threshold for winsorization; must be between 0 and 1.",
                "format": "double"
              },
              "winsorizationHighDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "winsorizationLowDenominator": {
                "type": "number",
                "maximum": 1,
                "minimum": 0,
                "format": "double"
              },
              "cupedAttributionWindow": {
                "type": "number",
                "nullable": true,
                "description": "Attribution window for CUPED adjustments in days.",
                "format": "double"
              },
              "rollupTimeWindow": {
                "type": "string",
                "description": "Rollup-mode for unit count metrics. Allowed values: \"daily\" for daily participation rate, \"max\" for one-time event, \"custom\" for a custom attribution window"
              },
              "customRollUpStart": {
                "type": "number",
                "description": "Custom start window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "customRollUpEnd": {
                "type": "number",
                "description": "Custom end window for unit count metrics with \"custom\" rollup time window, or for other metrics with the \"Use Cohort Window in Experiments\" option on enabled. Measured in days or minutes depending on the \"customRollupMeasureInMinutes\" flag.",
                "format": "double"
              },
              "onlyIncludeUsersWithConversionEvent": {
                "type": "boolean",
                "description": "Flag to include only users with a conversion event in the metric."
              },
              "denominatorCustomRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the denominator custom rollup window in minutes instead of days."
              },
              "customRollupMeasureInMinutes": {
                "type": "boolean",
                "description": "Flag to measure the custom rollup window in minutes instead of days."
              },
              "percentile": {
                "type": "number",
                "description": "Percentile value for statistical calculations.",
                "format": "double"
              },
              "useLogTransform": {
                "type": "boolean",
                "description": "Use log transform for the metric."
              },
              "useSecondaryRetentionEvent": {
                "type": "boolean",
                "description": "Use secondary retention event."
              },
              "retentionEnd": {
                "type": "number",
                "description": "Retention end.",
                "format": "double"
              },
              "retentionLength": {
                "type": "number",
                "description": "Retention length.",
                "format": "double"
              },
              "logTransformBase": {
                "type": "number",
                "nullable": true,
                "description": "Log transform base to be used for the metric.",
                "format": "double"
              },
              "cap": {
                "type": "number",
                "description": "Maximum cap for metric values.",
                "format": "double"
              },
              "surrogateMetricMSE": {
                "type": "number",
                "nullable": true,
                "description": "Mean Squared Error for surrogate metric.",
                "format": "double"
              }
            },
            "description": "Optional configuration for metrics utilizing Warehouse Native features, defining specific behaviors and criteria."
          },
          "unitTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of unit types that the metric can utilize, such as stableID, userID, or other custom identifiers."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team name responsible for the metric, aiding in accountability and management."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional field indicating the team ID responsible for the metric, aiding in accountability and management."
          },
          "directionality": {
            "default": "increase",
            "type": "string",
            "enum": [
              "increase",
              "decrease"
            ],
            "description": "Indicates the desired change direction for the metric. Use \"increase\" for positive changes and \"decrease\" for negative changes.",
            "example": "increase"
          },
          "dryRun": {
            "type": "boolean",
            "description": "Skips persisting updates to the metric (used to validate that inputs are correct)"
          },
          "owner": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "Email of the updated owner responsible for the metric’s management.",
                "example": "owner123@test.com"
              },
              "ownerID": {
                "type": "string",
                "description": "ID of the updated owner responsible for the metric’s management.",
                "example": "1234"
              }
            }
          }
        }
      },
      "MetricValueDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "format": "double"
          },
          "unitType": {
            "type": "string"
          },
          "numerator": {
            "type": "number",
            "format": "double"
          },
          "denominator": {
            "type": "number",
            "format": "double"
          },
          "inputRows": {
            "type": "number",
            "format": "double"
          },
          "metricName": {
            "type": "string"
          },
          "metricType": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "unitType",
          "metricName",
          "metricType"
        ]
      },
      "MetricValuesDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Metric value for the given unit_type",
            "format": "double"
          },
          "unit_type": {
            "type": "string",
            "description": "Unit of the metric: stableID, userID, and other custom ids"
          },
          "row_count": {
            "type": "number",
            "description": "Row count for imported metric, optional",
            "format": "double"
          },
          "numerator": {
            "type": "number",
            "description": "Numerator of a ratio metric, optional",
            "format": "double"
          },
          "denominator": {
            "type": "number",
            "description": "Denominator of a ratio metric, optional",
            "format": "double"
          }
        },
        "required": [
          "value",
          "unit_type"
        ]
      },
      "MultiRuleDto": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            }
          }
        },
        "required": [
          "rules"
        ]
      },
      "MultiRuleUpdateDto": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "example": {
                "name": "All Conditions",
                "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
                "baseID": "38ttpCpzrQFTMKcqFKk02l",
                "passPercentage": 10,
                "conditions": [
                  {
                    "type": "user_id",
                    "targetValue": [
                      "35sClJFs8l0y5uRQhDwUDo"
                    ],
                    "operator": "any"
                  }
                ],
                "environments": [
                  "staging"
                ]
              }
            }
          }
        },
        "required": [
          "rules"
        ],
        "example": {
          "rules": [
            {
              "name": "All Conditions",
              "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
              "baseID": "38ttpCpzrQFTMKcqFKk02l",
              "passPercentage": 10,
              "conditions": [
                {
                  "type": "user_id",
                  "operator": "any",
                  "targetValue": [
                    0
                  ],
                  "field": "string",
                  "customID": "string"
                }
              ],
              "returnValue": {},
              "returnValueJson5": {},
              "environments": [
                "string"
              ]
            }
          ]
        }
      },
      "OverrideDto": {
        "type": "object",
        "properties": {
          "passingUserIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "description": "User ID",
              "example": "user123"
            },
            "maxItems": 2000,
            "description": "List of user IDs",
            "example": [
              "user123",
              "user456",
              "user789"
            ]
          },
          "failingUserIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "description": "User ID",
              "example": "user123"
            },
            "maxItems": 2000,
            "description": "List of user IDs",
            "example": [
              "user123",
              "user456",
              "user789"
            ]
          },
          "passingCustomIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "description": "Custom ID",
              "example": "custom123"
            },
            "maxItems": 2000,
            "description": "Optional list of custom IDs",
            "example": [
              "custom123",
              "custom456"
            ]
          },
          "failingCustomIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "description": "Custom ID",
              "example": "custom123"
            },
            "maxItems": 2000,
            "description": "Optional list of custom IDs",
            "example": [
              "custom123",
              "custom456"
            ]
          },
          "environmentOverrides": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "environment": {
                  "type": "string",
                  "nullable": true,
                  "description": "Environment",
                  "example": "staging"
                },
                "unitID": {
                  "type": "string",
                  "nullable": true,
                  "description": "Unit ID",
                  "example": "unit123"
                },
                "passingIDs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of passing IDs",
                  "example": [
                    "id1",
                    "id2"
                  ]
                },
                "failingIDs": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of failing IDs",
                  "example": [
                    "id3",
                    "id4"
                  ]
                }
              },
              "required": [
                "unitID",
                "passingIDs",
                "failingIDs"
              ],
              "description": "Contract for environment override",
              "example": {
                "environment": "staging",
                "unitID": "unit123",
                "passingIDs": [
                  "id1",
                  "id2"
                ],
                "failingIDs": [
                  "id3",
                  "id4"
                ]
              }
            }
          }
        },
        "required": [
          "passingUserIDs",
          "failingUserIDs",
          "environmentOverrides"
        ],
        "description": "Contract for overrides"
      },
      "PaginationResponseMetadataDto": {
        "type": "object",
        "properties": {
          "itemsPerPage": {
            "type": "number",
            "format": "double"
          },
          "pageNumber": {
            "type": "number",
            "format": "double"
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          },
          "totalItems": {
            "type": "number",
            "format": "double"
          },
          "all": {
            "type": "string"
          }
        },
        "required": [
          "itemsPerPage",
          "pageNumber",
          "nextPage",
          "previousPage"
        ]
      },
      "PaginationResponseWithMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A simple string explaining the result of the operation."
          },
          "data": {
            "description": "Array of results returned by pagination limit.",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "pagination": {
            "description": "Pagination metadata for checking if there is next page for example.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PaginationResponseMetadataDto"
              }
            ]
          }
        },
        "required": [
          "message",
          "data",
          "pagination"
        ]
      },
      "ParamStoreCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Param Store Name"
          },
          "description": {
            "type": "string",
            "description": "Param Store Description"
          },
          "displayName": {
            "type": "string",
            "description": "Param Store Display Name"
          },
          "targetAppIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Target App IDs"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags"
          },
          "team": {
            "type": "string",
            "description": "Team"
          }
        },
        "required": [
          "name",
          "description",
          "displayName"
        ]
      },
      "ParamStoreDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Param Store ID"
          },
          "name": {
            "type": "string",
            "description": "Param Store Name"
          },
          "displayName": {
            "type": "string",
            "description": "Param Store Display Name"
          },
          "description": {
            "type": "string",
            "description": "Param Store Description"
          },
          "createdTime": {
            "type": "number",
            "description": "Param Store Creation Time",
            "format": "double"
          },
          "creatorID": {
            "type": "string",
            "description": "Creator ID"
          },
          "lastModifierID": {
            "type": "string",
            "description": "Last Modifier ID"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Team Name"
          },
          "teamID": {
            "type": "string",
            "description": "Team ID"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    "value": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "number"
                      ]
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "object"
                      ]
                    },
                    "value": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    "value": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    "pass_value": {
                      "type": "boolean"
                    },
                    "fail_value": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "number"
                      ]
                    },
                    "pass_value": {
                      "type": "number"
                    },
                    "fail_value": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    "pass_value": {
                      "type": "string"
                    },
                    "fail_value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "object"
                      ]
                    },
                    "pass_value": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "fail_value": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    "pass_value": {
                      "type": "array",
                      "items": {}
                    },
                    "fail_value": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "layer"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "layer_name": {
                      "type": "string",
                      "description": "Layer Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Layer"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "layer_name",
                    "param_name"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "dynamic_config"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "config_name": {
                      "type": "string",
                      "description": "Dynamic Config Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Config"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "config_name",
                    "param_name"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "experiment"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "experiment_name": {
                      "type": "string",
                      "description": "Experiment Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Experiment"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "experiment_name",
                    "param_name"
                  ]
                }
              ],
              "description": "Parameter Definition"
            },
            "description": "List of Parameters"
          }
        },
        "required": [
          "id",
          "name",
          "displayName",
          "description",
          "createdTime",
          "creatorID",
          "lastModifierID",
          "parameters"
        ]
      },
      "ParamStoreUpdateDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Param Store Description"
          },
          "parameters": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    "value": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "number"
                      ]
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "object"
                      ]
                    },
                    "value": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "static"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    "value": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "boolean"
                      ]
                    },
                    "pass_value": {
                      "type": "boolean"
                    },
                    "fail_value": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "number"
                      ]
                    },
                    "pass_value": {
                      "type": "number"
                    },
                    "fail_value": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string"
                      ]
                    },
                    "pass_value": {
                      "type": "string"
                    },
                    "fail_value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "object"
                      ]
                    },
                    "pass_value": {
                      "type": "object",
                      "additionalProperties": {}
                    },
                    "fail_value": {
                      "type": "object",
                      "additionalProperties": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "gate"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "gate_name": {
                      "type": "string",
                      "description": "Gate Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "array"
                      ]
                    },
                    "pass_value": {
                      "type": "array",
                      "items": {}
                    },
                    "fail_value": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "gate_name",
                    "param_type",
                    "pass_value",
                    "fail_value"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "layer"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "layer_name": {
                      "type": "string",
                      "description": "Layer Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Layer"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "layer_name",
                    "param_name"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "dynamic_config"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "config_name": {
                      "type": "string",
                      "description": "Dynamic Config Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Config"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "config_name",
                    "param_name"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "ref_type": {
                      "type": "string",
                      "enum": [
                        "experiment"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Parameter Name"
                    },
                    "param_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "boolean",
                        "number",
                        "array",
                        "object"
                      ],
                      "description": "Parameter Type"
                    },
                    "experiment_name": {
                      "type": "string",
                      "description": "Experiment Name"
                    },
                    "param_name": {
                      "type": "string",
                      "description": "Parameter Name in Experiment"
                    }
                  },
                  "required": [
                    "ref_type",
                    "name",
                    "param_type",
                    "experiment_name",
                    "param_name"
                  ]
                }
              ],
              "description": "Parameter Definition"
            },
            "description": "List of Parameters"
          }
        }
      },
      "PrecommitHookArgsDto": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "gate"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "rules"
                ]
              },
              "diffs": {
                "type": "array",
                "items": {},
                "nullable": true
              },
              "old_config": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\-. ]*$",
                    "description": "The gate display name"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "checksPerHour": {
                    "type": "number",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "In Progress",
                      "Launched",
                      "Disabled",
                      "Archived"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY",
                      "PERMANENT",
                      "STALE",
                      "TEMPLATE"
                    ]
                  },
                  "typeReason": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "STALE_PROBABLY_LAUNCHED",
                      "STALE_PROBABLY_UNLAUNCHED",
                      "STALE_PROBABLY_FORGOTTEN",
                      "STALE_NO_RULES",
                      "STALE_PROBABLY_DEAD_CHECK",
                      "STALE_EMPTY_CHECKS",
                      "STALE_ALL_TRUE",
                      "STALE_ALL_FALSE"
                    ]
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "The environments this rule is enabled for."
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "The return value of the rule."
                        },
                        "completedAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "pendingAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    }
                  },
                  "measureMetricLifts": {
                    "type": "boolean"
                  },
                  "monitoringMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "reviewSettings": {
                    "type": "object",
                    "properties": {
                      "requiredReview": {
                        "type": "boolean"
                      },
                      "allowedReviewers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "email"
                          ]
                        },
                        "nullable": true
                      }
                    },
                    "required": [
                      "requiredReview"
                    ]
                  },
                  "releasePipelineID": {
                    "type": "string",
                    "nullable": true
                  },
                  "activeReview": {
                    "type": "object",
                    "properties": {
                      "reviewID": {
                        "type": "string"
                      },
                      "reviewStatus": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "reviewID",
                      "reviewStatus",
                      "description"
                    ]
                  }
                },
                "required": [
                  "id",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "checksPerHour",
                  "status",
                  "type",
                  "typeReason",
                  "isEnabled",
                  "rules"
                ]
              },
              "new_config": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\-. ]*$",
                    "description": "The gate display name"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "checksPerHour": {
                    "type": "number",
                    "nullable": true
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "In Progress",
                      "Launched",
                      "Disabled",
                      "Archived"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "TEMPORARY",
                      "PERMANENT",
                      "STALE",
                      "TEMPLATE"
                    ]
                  },
                  "typeReason": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "STALE_PROBABLY_LAUNCHED",
                      "STALE_PROBABLY_UNLAUNCHED",
                      "STALE_PROBABLY_FORGOTTEN",
                      "STALE_NO_RULES",
                      "STALE_PROBABLY_DEAD_CHECK",
                      "STALE_EMPTY_CHECKS",
                      "STALE_ALL_TRUE",
                      "STALE_ALL_FALSE"
                    ]
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "isEnabled": {
                    "type": "boolean"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "The environments this rule is enabled for."
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "The return value of the rule."
                        },
                        "completedAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "pendingAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    }
                  },
                  "measureMetricLifts": {
                    "type": "boolean"
                  },
                  "monitoringMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "reviewSettings": {
                    "type": "object",
                    "properties": {
                      "requiredReview": {
                        "type": "boolean"
                      },
                      "allowedReviewers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "email"
                          ]
                        },
                        "nullable": true
                      }
                    },
                    "required": [
                      "requiredReview"
                    ]
                  },
                  "releasePipelineID": {
                    "type": "string",
                    "nullable": true
                  },
                  "activeReview": {
                    "type": "object",
                    "properties": {
                      "reviewID": {
                        "type": "string"
                      },
                      "reviewStatus": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "reviewID",
                      "reviewStatus",
                      "description"
                    ]
                  }
                },
                "required": [
                  "id",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "checksPerHour",
                  "status",
                  "type",
                  "typeReason",
                  "isEnabled",
                  "rules"
                ]
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "diffs"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "gate"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_target_apps"
                ]
              },
              "old_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "new_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "old_target_apps",
              "new_target_apps"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "dynamic_config"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "rules"
                ]
              },
              "diffs": {
                "type": "array",
                "items": {},
                "nullable": true
              },
              "old_config": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\-. ]*$",
                    "description": "Optional name for the configuration.",
                    "example": "my_config"
                  },
                  "idType": {
                    "type": "string",
                    "description": "The type of ID which the dynamic config is based on.",
                    "example": "userID"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "A brief summary of what the dynamic config is being used for",
                    "example": "helpful summary of what this dynamic config does"
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of tag names attached to the dynamic config",
                    "example": [
                      "a tag"
                    ]
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team name associated with the dynamic config, Enterprise only."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team ID associated with the dynamic config, Enterprise only."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the dynamic config enabled",
                    "default": true
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "completedAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "pendingAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "returnValueJson5": {
                          "type": "string"
                        },
                        "variants": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "passPercentage": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "multipleOf": 0.01
                              },
                              "returnValue": {
                                "type": "object",
                                "additionalProperties": {}
                              },
                              "returnValueJson5": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "passPercentage"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    },
                    "description": "An array of Rule objects"
                  },
                  "defaultValue": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "The fallback JSON object when no rules are triggered"
                  },
                  "defaultValueJson5": {
                    "type": "string",
                    "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "schema": {
                    "type": "string",
                    "nullable": true,
                    "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
                  },
                  "schemaJson5": {
                    "type": "string",
                    "nullable": true,
                    "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
                  },
                  "releasePipelineID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The release pipeline ID associated with the dynamic config"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "Archived"
                    ]
                  }
                },
                "required": [
                  "id",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "isEnabled",
                  "rules"
                ]
              },
              "new_config": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\-. ]*$",
                    "description": "Optional name for the configuration.",
                    "example": "my_config"
                  },
                  "idType": {
                    "type": "string",
                    "description": "The type of ID which the dynamic config is based on.",
                    "example": "userID"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "A brief summary of what the dynamic config is being used for",
                    "example": "helpful summary of what this dynamic config does"
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of tag names attached to the dynamic config",
                    "example": [
                      "a tag"
                    ]
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team name associated with the dynamic config, Enterprise only."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team ID associated with the dynamic config, Enterprise only."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the dynamic config enabled",
                    "default": true
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "completedAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "pendingAutomatedRollouts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "time": {
                                "type": "number"
                              },
                              "passPercent": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "time",
                              "passPercent"
                            ]
                          }
                        },
                        "returnValueJson5": {
                          "type": "string"
                        },
                        "variants": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "passPercentage": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100,
                                "multipleOf": 0.01
                              },
                              "returnValue": {
                                "type": "object",
                                "additionalProperties": {}
                              },
                              "returnValueJson5": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "passPercentage"
                            ]
                          }
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    },
                    "description": "An array of Rule objects"
                  },
                  "defaultValue": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "The fallback JSON object when no rules are triggered"
                  },
                  "defaultValueJson5": {
                    "type": "string",
                    "description": "Can include comments. If provided with defaultValue, must parse to the same JSON"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "schema": {
                    "type": "string",
                    "nullable": true,
                    "description": "A schema using JSON Schema Draft 2020-12 to enforce return values of this dynamic config's rules."
                  },
                  "schemaJson5": {
                    "type": "string",
                    "nullable": true,
                    "description": "`schema` except with Json5 comments. Optional and should parse to same json as `schema`."
                  },
                  "releasePipelineID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The release pipeline ID associated with the dynamic config"
                  },
                  "isTemplate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "Archived"
                    ]
                  }
                },
                "required": [
                  "id",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "isEnabled",
                  "rules"
                ]
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "diffs"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "dynamic_config"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_target_apps"
                ]
              },
              "old_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "new_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "old_target_apps",
              "new_target_apps"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "segment"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "rules"
                ]
              },
              "diffs": {
                "type": "array",
                "items": {},
                "nullable": true
              },
              "old_config": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the segment enabled."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "id_list",
                      "rule_based",
                      "analysis_list",
                      "user_store_id_list"
                    ]
                  },
                  "count": {
                    "type": "number",
                    "description": "For id_list segments: the length of the ID list"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "The environments this rule is enabled for."
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "The return value of the rule."
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    },
                    "description": "Rule Object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional tags for categorization."
                  },
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional name for the configuration."
                  },
                  "idType": {
                    "type": "string",
                    "description": "Type of ID"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the configuration’s purpose."
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the user who created the entity."
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the creator."
                  },
                  "targetApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of target applications associated with this configuration."
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional name for the responsible team."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional ID of the responsible team."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  }
                },
                "required": [
                  "isEnabled",
                  "type",
                  "id",
                  "idType",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "creatorID",
                  "createdTime",
                  "creatorName",
                  "creatorEmail"
                ]
              },
              "new_config": {
                "type": "object",
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "description": "Is the segment enabled."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "id_list",
                      "rule_based",
                      "analysis_list",
                      "user_store_id_list"
                    ]
                  },
                  "count": {
                    "type": "number",
                    "description": "For id_list segments: the length of the ID list"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this rule."
                        },
                        "passPercentage": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100,
                          "multipleOf": 0.01,
                          "description": "Of the users that meet the conditions of this rule, what percent should return true."
                        },
                        "conditions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "targetValue": {
                                "oneOf": [
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ],
                                "nullable": true
                              },
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string",
                                "nullable": true
                              },
                              "customID": {
                                "type": "string",
                                "nullable": true
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "app_version",
                                  "browser_name",
                                  "browser_version",
                                  "country",
                                  "custom_field",
                                  "email",
                                  "environment_tier",
                                  "fails_gate",
                                  "fails_segment",
                                  "ip_address",
                                  "locale",
                                  "os_name",
                                  "os_version",
                                  "passes_gate",
                                  "passes_segment",
                                  "public",
                                  "time",
                                  "unit_id",
                                  "user_id",
                                  "url",
                                  "javascript",
                                  "device_model",
                                  "target_app"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "description": "An array of Condition objects."
                        },
                        "environments": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "The environments this rule is enabled for."
                        },
                        "id": {
                          "type": "string",
                          "description": "The Statsig ID of this rule."
                        },
                        "baseID": {
                          "type": "string",
                          "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                        },
                        "returnValue": {
                          "type": "object",
                          "additionalProperties": {},
                          "description": "The return value of the rule."
                        }
                      },
                      "required": [
                        "name",
                        "passPercentage",
                        "conditions"
                      ]
                    },
                    "description": "Rule Object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Optional tags for categorization."
                  },
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Optional name for the configuration."
                  },
                  "idType": {
                    "type": "string",
                    "description": "Type of ID"
                  },
                  "description": {
                    "type": "string",
                    "description": "Detailed description of the configuration’s purpose."
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the user who created the entity."
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the creator."
                  },
                  "targetApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of target applications associated with this configuration."
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional name for the responsible team."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "Optional ID of the responsible team."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  }
                },
                "required": [
                  "isEnabled",
                  "type",
                  "id",
                  "idType",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "creatorID",
                  "createdTime",
                  "creatorName",
                  "creatorEmail"
                ]
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "diffs"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "change_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "segment"
                ]
              },
              "config_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_target_apps"
                ]
              },
              "old_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "new_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "review_id",
              "change_id",
              "submitter",
              "committer",
              "config_type",
              "config_name",
              "type",
              "old_target_apps",
              "new_target_apps"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_allocation"
                ]
              },
              "old_allocation": {
                "type": "number"
              },
              "new_allocation": {
                "type": "number"
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type",
              "old_allocation",
              "new_allocation"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "start_experiment"
                ]
              },
              "new_allocation": {
                "type": "number"
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type",
              "new_allocation"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "ship_experiment"
                ]
              },
              "group": {
                "type": "string"
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type",
              "group"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "abandon_experiment"
                ]
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_target_apps"
                ]
              },
              "old_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "new_target_apps": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type",
              "old_target_apps",
              "new_target_apps"
            ]
          },
          {
            "type": "object",
            "properties": {
              "review_id": {
                "type": "string"
              },
              "submitter": {
                "type": "string"
              },
              "committer": {
                "type": "string"
              },
              "config_type": {
                "type": "string",
                "enum": [
                  "experiment"
                ]
              },
              "experiment_name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "update_experiment_settings"
                ]
              },
              "old_settings": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "parameterValuesJSON": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "parameterValuesJSON",
                        "size"
                      ]
                    }
                  },
                  "allocation": {
                    "type": "number"
                  },
                  "targetingGateID": {
                    "type": "string",
                    "nullable": true
                  },
                  "inlineTargetingRulesJSON": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "groups",
                  "allocation",
                  "targetingGateID",
                  "inlineTargetingRulesJSON"
                ]
              },
              "new_settings": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "parameterValuesJSON": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "parameterValuesJSON",
                        "size"
                      ]
                    }
                  },
                  "allocation": {
                    "type": "number"
                  },
                  "targetingGateID": {
                    "type": "string",
                    "nullable": true
                  },
                  "inlineTargetingRulesJSON": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "required": [
                  "groups",
                  "allocation",
                  "targetingGateID",
                  "inlineTargetingRulesJSON"
                ]
              },
              "old_experiment": {
                "type": "object",
                "properties": {
                  "reviewSettings": {
                    "type": "object",
                    "properties": {
                      "requiredReview": {
                        "type": "boolean"
                      },
                      "allowedReviewers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "email"
                          ]
                        },
                        "nullable": true
                      }
                    },
                    "required": [
                      "requiredReview"
                    ]
                  },
                  "activeReview": {
                    "type": "object",
                    "properties": {
                      "reviewID": {
                        "type": "string"
                      },
                      "reviewStatus": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "reviewID",
                      "reviewStatus",
                      "description"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\- ]*$",
                    "description": "The display name of the experiment"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "A helpful summary of what this experiment does"
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The Statsig ID of the creator of this experiment"
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "The email of the creator of this experiment"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Target apps assigned to this experiment"
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team name associated with the experiment, Enterprise only."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team ID associated with the experiment, Enterprise only."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "secondaryIDType": {
                    "type": "string",
                    "nullable": true,
                    "description": "The secondary ID type for the experiment used in WHN for ID resolution"
                  },
                  "identifierMappingMode": {
                    "type": "string",
                    "enum": [
                      "strictOneToOne",
                      "firstTouchOneToMany",
                      "lastTouchOneToMany"
                    ],
                    "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
                  },
                  "identityResolutionSource": {
                    "type": "string",
                    "nullable": true,
                    "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
                  },
                  "hypothesis": {
                    "type": "string",
                    "description": "A statement that will be tested by this experiment"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the link"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the link"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "description": "Links to relevant documentation or resources"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string",
                          "nullable": true
                        },
                        "size": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "parameterValues": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "disabled": {
                          "type": "boolean"
                        },
                        "description": {
                          "type": "string"
                        },
                        "foreignGroupID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "size",
                        "parameterValues"
                      ]
                    },
                    "description": "The test groups for your experiment"
                  },
                  "controlGroupID": {
                    "type": "string",
                    "description": "Optional control group ID"
                  },
                  "allocation": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percent of layer allocated to this experiment"
                  },
                  "primaryMetricTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Primary metric tags for the experiment"
                  },
                  "secondaryMetricTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Secondary metric tags for the experiment"
                  },
                  "primaryMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "secondaryMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "otherMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    },
                    "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
                  },
                  "duration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "How long the experiment is expected to last in days"
                  },
                  "targetExposures": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Target exposures for the experiment"
                  },
                  "targetingGateID": {
                    "type": "string",
                    "nullable": true,
                    "description": "Restrict your experiment to users passing the selected feature gate"
                  },
                  "sequentialTesting": {
                    "type": "boolean",
                    "description": "Apply sequential testing?"
                  },
                  "bonferroniCorrection": {
                    "type": "boolean",
                    "description": "Is Bonferroni correction applied per variant?"
                  },
                  "bonferroniCorrectionPerMetric": {
                    "type": "boolean",
                    "description": "Is Bonferroni correction applied per metric?"
                  },
                  "benjaminiHochbergPerVariant": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied per variant?"
                  },
                  "benjaminiHochbergPerMetric": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied per metric?"
                  },
                  "benjaminiPrimaryMetricsOnly": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
                  },
                  "defaultConfidenceInterval": {
                    "type": "string",
                    "enum": [
                      "80",
                      "90",
                      "95",
                      "98",
                      "99"
                    ],
                    "description": "Default error margin used for results"
                  },
                  "manualQualityScores": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "criteriaName": {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "HYPOTHESIS_LENGTH",
                                "BALANCED_EXPOSURE",
                                "PRIMARY_METRICS_LENGTH",
                                "COMPARISON_CORRECTION",
                                "GUARDRAIL_METRIC_TAGS",
                                "SUFFICIENT_SAMPLE",
                                "POWER_ANALYSIS",
                                "SEQUENTIAL_TESTING"
                              ]
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PASSED",
                            "FAILED",
                            "WARNING"
                          ]
                        },
                        "criteriaDescription": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "weight": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "criteriaName",
                        "status",
                        "criteriaDescription",
                        "score",
                        "weight"
                      ]
                    },
                    "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "setup",
                      "decision_made",
                      "abandoned",
                      "archived",
                      "experiment_stopped",
                      "assignment_stopped"
                    ],
                    "description": "The current status of the experiment"
                  },
                  "launchedGroupID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the launched group, null otherwise"
                  },
                  "assignmentSourceName": {
                    "type": "string"
                  },
                  "assignmentSourceExperimentName": {
                    "type": "string",
                    "description": "Name of the source experiment for assignment"
                  },
                  "isAnalysisOnly": {
                    "type": "boolean"
                  },
                  "allocationDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "nullable": true,
                    "description": "Warehouse Native Only - Allocation duration in days"
                  },
                  "cohortedAnalysisDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Warehouse Native Only - Cohorted analysis duration in days"
                  },
                  "cohortedMetricsMatureAfterEnd": {
                    "type": "boolean",
                    "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
                  },
                  "cohortWaitUntilEndToInclude": {
                    "type": "boolean",
                    "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
                  },
                  "fixedAnalysisDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Fixed analysis duration in days"
                  },
                  "scheduledReloadHour": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 23,
                    "nullable": true,
                    "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads"
                  },
                  "scheduledReloadType": {
                    "type": "string",
                    "enum": [
                      "full",
                      "incremental"
                    ],
                    "description": "Warehouse Native only - reload type for scheduled reloads"
                  },
                  "analysisEndTime": {
                    "type": "string"
                  },
                  "assignmentSourceFilters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string",
                          "description": "Column to filter on."
                        },
                        "condition": {
                          "type": "string",
                          "enum": [
                            "in",
                            "not_in",
                            "=",
                            ">",
                            "<",
                            ">=",
                            "<=",
                            "is_null",
                            "non_null",
                            "contains",
                            "not_contains",
                            "sql_filter",
                            "starts_with",
                            "ends_with",
                            "after_exposure",
                            "before_exposure",
                            "is_true",
                            "is_false"
                          ]
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional array of values for the criterion to match against."
                        }
                      },
                      "required": [
                        "condition"
                      ]
                    },
                    "description": "Array of criteria for filtering assignment sources."
                  },
                  "analyticsType": {
                    "type": "string",
                    "nullable": true
                  },
                  "isSidecar": {
                    "type": "boolean",
                    "description": "Whether this is a Statsig Sidecar experiment."
                  },
                  "decisionReason": {
                    "type": "string",
                    "nullable": true
                  },
                  "stratifiedSampling": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "success",
                          "error"
                        ]
                      },
                      "metric": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "endDate": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "startDate",
                          "endDate"
                        ]
                      },
                      "entityPropertySource": {
                        "type": "object",
                        "properties": {
                          "propertySourceName": {
                            "type": "string"
                          },
                          "column": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "propertySourceName",
                          "column"
                        ]
                      },
                      "csv": {
                        "type": "object",
                        "properties": {
                          "original": {
                            "type": "string"
                          },
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "original",
                          "identifier"
                        ]
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "nullable": true,
                    "description": "The stratified sampling settings for the experiment"
                  },
                  "subtype": {
                    "type": "string",
                    "enum": [
                      "conversion",
                      "reactivation",
                      "retention"
                    ]
                  },
                  "externalExperimentName": {
                    "type": "string"
                  },
                  "layerID": {
                    "type": "string",
                    "nullable": true
                  },
                  "startTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "endTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "decisionTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "healthChecks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PASSED",
                            "FAILED",
                            "WAITING",
                            "WARNING"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "lastPulseLoadTime": {
                              "type": "number"
                            },
                            "crossoverPercent": {
                              "type": "number"
                            },
                            "assignmentSourceID": {
                              "type": "string"
                            },
                            "assignmentSourceName": {
                              "type": "string"
                            },
                            "foreignExperimentID": {
                              "type": "string"
                            },
                            "deduplication_rate": {
                              "type": "number"
                            },
                            "deduplication_rates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "group_id": {
                                    "type": "string"
                                  },
                                  "rate": {
                                    "type": "number"
                                  },
                                  "group_name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "group_id",
                                  "rate",
                                  "group_name"
                                ]
                              }
                            },
                            "primary_id_type": {
                              "type": "string"
                            },
                            "secondary_id_type": {
                              "type": "string"
                            },
                            "missingMetrics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "metrics": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "metric_name": {
                                    "type": "string"
                                  },
                                  "earliest_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  },
                                  "latest_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "metric_name",
                                  "earliest_date",
                                  "latest_date"
                                ]
                              }
                            },
                            "lastUpdatedDs": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "primary_id_type"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "has_checks",
                            "has_valid_unit_type",
                            "has_balanced_exposures",
                            "has_event_metrics",
                            "has_pulse_metrics",
                            "assignment_health",
                            "has_crossover",
                            "has_exposures",
                            "has_recent_exposures_for_analyze_whn",
                            "user_metrics_exist",
                            "deduplication_rate",
                            "deduplication_rate_group_level",
                            "windowed_metrics_have_outliers",
                            "exposures_data_is_behind",
                            "pre_experimental_bias_check",
                            "segments_of_interest_analysis",
                            "has_changed_parameter",
                            "metric_history_for_topline_impact",
                            "default_value_mismatch",
                            "has_data_gaps",
                            "has_correct_target_app",
                            "has_dag_failures",
                            "has_exploration_completed",
                            "autotune_has_outcomes"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "status"
                      ]
                    }
                  },
                  "healthCheckStatus": {
                    "type": "string",
                    "enum": [
                      "PASSED",
                      "FAILED",
                      "WAITING",
                      "WARNING"
                    ],
                    "description": "Overall health check status"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "inlineTargetingRulesJSON": {
                    "type": "string",
                    "nullable": true
                  },
                  "summarySections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "name",
                        "content"
                      ]
                    },
                    "nullable": true
                  }
                },
                "required": [
                  "id",
                  "idType",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "tags",
                  "hypothesis",
                  "groups",
                  "allocation",
                  "primaryMetrics",
                  "secondaryMetrics",
                  "targetingGateID",
                  "bonferroniCorrection",
                  "defaultConfidenceInterval",
                  "status",
                  "decisionReason",
                  "layerID",
                  "startTime",
                  "endTime",
                  "decisionTime",
                  "healthCheckStatus"
                ]
              },
              "new_experiment": {
                "type": "object",
                "properties": {
                  "reviewSettings": {
                    "type": "object",
                    "properties": {
                      "requiredReview": {
                        "type": "boolean"
                      },
                      "allowedReviewers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "email"
                          ]
                        },
                        "nullable": true
                      }
                    },
                    "required": [
                      "requiredReview"
                    ]
                  },
                  "activeReview": {
                    "type": "object",
                    "properties": {
                      "reviewID": {
                        "type": "string"
                      },
                      "reviewStatus": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "reviewID",
                      "reviewStatus",
                      "description"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "ID"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "pattern": "^[a-zA-Z0-9_\\- ]*$",
                    "description": "The display name of the experiment"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 1000,
                    "description": "A helpful summary of what this experiment does"
                  },
                  "lastModifierID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the last modifier."
                  },
                  "lastModifiedTime": {
                    "type": "number",
                    "nullable": true,
                    "description": "Time of the last modification."
                  },
                  "lastModifierEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "Email of the last modifier."
                  },
                  "lastModifierName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the last modifier."
                  },
                  "creatorID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The Statsig ID of the creator of this experiment"
                  },
                  "createdTime": {
                    "type": "number",
                    "description": "Timestamp when the entity was created."
                  },
                  "creatorName": {
                    "type": "string",
                    "nullable": true,
                    "description": "Name of the creator."
                  },
                  "creatorEmail": {
                    "type": "string",
                    "nullable": true,
                    "description": "The email of the creator of this experiment"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetApps": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ],
                    "description": "Target apps assigned to this experiment"
                  },
                  "holdoutIDs": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Holdouts applied to this configuration."
                  },
                  "team": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team name associated with the experiment, Enterprise only."
                  },
                  "teamID": {
                    "type": "string",
                    "nullable": true,
                    "description": "The team ID associated with the experiment, Enterprise only."
                  },
                  "version": {
                    "type": "number",
                    "description": "Version number"
                  },
                  "secondaryIDType": {
                    "type": "string",
                    "nullable": true,
                    "description": "The secondary ID type for the experiment used in WHN for ID resolution"
                  },
                  "identifierMappingMode": {
                    "type": "string",
                    "enum": [
                      "strictOneToOne",
                      "firstTouchOneToMany",
                      "lastTouchOneToMany"
                    ],
                    "description": "The identifier mapping mode for the experiment used in WHN for ID resolution"
                  },
                  "identityResolutionSource": {
                    "type": "string",
                    "nullable": true,
                    "description": "The identity resolution entity property source for the experiment used in WHN for ID resolution"
                  },
                  "hypothesis": {
                    "type": "string",
                    "description": "A statement that will be tested by this experiment"
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "description": "The URL of the link"
                        },
                        "title": {
                          "type": "string",
                          "description": "The title of the link"
                        }
                      },
                      "required": [
                        "url"
                      ]
                    },
                    "description": "Links to relevant documentation or resources"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string",
                          "nullable": true
                        },
                        "size": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "parameterValues": {
                          "type": "object",
                          "additionalProperties": {}
                        },
                        "disabled": {
                          "type": "boolean"
                        },
                        "description": {
                          "type": "string"
                        },
                        "foreignGroupID": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "size",
                        "parameterValues"
                      ]
                    },
                    "description": "The test groups for your experiment"
                  },
                  "controlGroupID": {
                    "type": "string",
                    "description": "Optional control group ID"
                  },
                  "allocation": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Percent of layer allocated to this experiment"
                  },
                  "primaryMetricTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Primary metric tags for the experiment"
                  },
                  "secondaryMetricTags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Secondary metric tags for the experiment"
                  },
                  "primaryMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "secondaryMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    }
                  },
                  "otherMetrics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "increase",
                            "decrease"
                          ]
                        },
                        "hypothesizedValue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ]
                    },
                    "description": "Additional metrics you want to investigate or learn from. The usual corrections applied to Primary and Secondary metrics are not applied to these."
                  },
                  "duration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "How long the experiment is expected to last in days"
                  },
                  "targetExposures": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Target exposures for the experiment"
                  },
                  "targetingGateID": {
                    "type": "string",
                    "nullable": true,
                    "description": "Restrict your experiment to users passing the selected feature gate"
                  },
                  "sequentialTesting": {
                    "type": "boolean",
                    "description": "Apply sequential testing?"
                  },
                  "bonferroniCorrection": {
                    "type": "boolean",
                    "description": "Is Bonferroni correction applied per variant?"
                  },
                  "bonferroniCorrectionPerMetric": {
                    "type": "boolean",
                    "description": "Is Bonferroni correction applied per metric?"
                  },
                  "benjaminiHochbergPerVariant": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied per variant?"
                  },
                  "benjaminiHochbergPerMetric": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied per metric?"
                  },
                  "benjaminiPrimaryMetricsOnly": {
                    "type": "boolean",
                    "description": "Is Benjamini-Hochberg procedure applied for primary metrics only?"
                  },
                  "defaultConfidenceInterval": {
                    "type": "string",
                    "enum": [
                      "80",
                      "90",
                      "95",
                      "98",
                      "99"
                    ],
                    "description": "Default error margin used for results"
                  },
                  "manualQualityScores": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "criteriaName": {
                          "oneOf": [
                            {
                              "type": "string",
                              "enum": [
                                "HYPOTHESIS_LENGTH",
                                "BALANCED_EXPOSURE",
                                "PRIMARY_METRICS_LENGTH",
                                "COMPARISON_CORRECTION",
                                "GUARDRAIL_METRIC_TAGS",
                                "SUFFICIENT_SAMPLE",
                                "POWER_ANALYSIS",
                                "SEQUENTIAL_TESTING"
                              ]
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PASSED",
                            "FAILED",
                            "WARNING"
                          ]
                        },
                        "criteriaDescription": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "weight": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "criteriaName",
                        "status",
                        "criteriaDescription",
                        "score",
                        "weight"
                      ]
                    },
                    "description": "Up to 10 manually set quality scores for an experiment. The scores and weights will be added to the existing weights and scores, and then weights will be renormalized to 100. This can be set via the Statsig Console API. If targeting a default check, the weight of the check will be updated, but not the status or description. A default score can be removed by setting the weight to 0. The default score identifiers are one of: HYPOTHESIS_LENGTH, BALANCED_EXPOSURE, PRIMARY_METRICS_LENGTH, COMPARISON_CORRECTION, GUARDRAIL_METRIC_TAGS, SUFFICIENT_SAMPLE, POWER_ANALYSIS, SEQUENTIAL_TESTING"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "setup",
                      "decision_made",
                      "abandoned",
                      "archived",
                      "experiment_stopped",
                      "assignment_stopped"
                    ],
                    "description": "The current status of the experiment"
                  },
                  "launchedGroupID": {
                    "type": "string",
                    "nullable": true,
                    "description": "ID of the launched group, null otherwise"
                  },
                  "assignmentSourceName": {
                    "type": "string"
                  },
                  "assignmentSourceExperimentName": {
                    "type": "string",
                    "description": "Name of the source experiment for assignment"
                  },
                  "isAnalysisOnly": {
                    "type": "boolean"
                  },
                  "allocationDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "nullable": true,
                    "description": "Warehouse Native Only - Allocation duration in days"
                  },
                  "cohortedAnalysisDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Warehouse Native Only - Cohorted analysis duration in days"
                  },
                  "cohortedMetricsMatureAfterEnd": {
                    "type": "boolean",
                    "description": "Warehouse Native Only - Allow cohort metrics to mature after experiment end"
                  },
                  "cohortWaitUntilEndToInclude": {
                    "type": "boolean",
                    "description": "Warehouse Native Only - Whether to filter to units whose experiment cohort analysis duration is complete, if cohortedAnalysisDuration exists"
                  },
                  "fixedAnalysisDuration": {
                    "type": "integer",
                    "minimum": 1,
                    "exclusiveMinimum": true,
                    "description": "Fixed analysis duration in days"
                  },
                  "scheduledReloadHour": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 23,
                    "nullable": true,
                    "description": "Warehouse Native only - UTC hour at which to run scheduled pulse loads"
                  },
                  "scheduledReloadType": {
                    "type": "string",
                    "enum": [
                      "full",
                      "incremental"
                    ],
                    "description": "Warehouse Native only - reload type for scheduled reloads"
                  },
                  "analysisEndTime": {
                    "type": "string"
                  },
                  "assignmentSourceFilters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "column": {
                          "type": "string",
                          "description": "Column to filter on."
                        },
                        "condition": {
                          "type": "string",
                          "enum": [
                            "in",
                            "not_in",
                            "=",
                            ">",
                            "<",
                            ">=",
                            "<=",
                            "is_null",
                            "non_null",
                            "contains",
                            "not_contains",
                            "sql_filter",
                            "starts_with",
                            "ends_with",
                            "after_exposure",
                            "before_exposure",
                            "is_true",
                            "is_false"
                          ]
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Optional array of values for the criterion to match against."
                        }
                      },
                      "required": [
                        "condition"
                      ]
                    },
                    "description": "Array of criteria for filtering assignment sources."
                  },
                  "analyticsType": {
                    "type": "string",
                    "nullable": true
                  },
                  "isSidecar": {
                    "type": "boolean",
                    "description": "Whether this is a Statsig Sidecar experiment."
                  },
                  "decisionReason": {
                    "type": "string",
                    "nullable": true
                  },
                  "stratifiedSampling": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "pending",
                          "success",
                          "error"
                        ]
                      },
                      "metric": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "startDate": {
                            "type": "string"
                          },
                          "endDate": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "startDate",
                          "endDate"
                        ]
                      },
                      "entityPropertySource": {
                        "type": "object",
                        "properties": {
                          "propertySourceName": {
                            "type": "string"
                          },
                          "column": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "propertySourceName",
                          "column"
                        ]
                      },
                      "csv": {
                        "type": "object",
                        "properties": {
                          "original": {
                            "type": "string"
                          },
                          "identifier": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "original",
                          "identifier"
                        ]
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "nullable": true,
                    "description": "The stratified sampling settings for the experiment"
                  },
                  "subtype": {
                    "type": "string",
                    "enum": [
                      "conversion",
                      "reactivation",
                      "retention"
                    ]
                  },
                  "externalExperimentName": {
                    "type": "string"
                  },
                  "layerID": {
                    "type": "string",
                    "nullable": true
                  },
                  "startTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "endTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "decisionTime": {
                    "type": "number",
                    "nullable": true
                  },
                  "healthChecks": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "PASSED",
                            "FAILED",
                            "WAITING",
                            "WARNING"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "lastPulseLoadTime": {
                              "type": "number"
                            },
                            "crossoverPercent": {
                              "type": "number"
                            },
                            "assignmentSourceID": {
                              "type": "string"
                            },
                            "assignmentSourceName": {
                              "type": "string"
                            },
                            "foreignExperimentID": {
                              "type": "string"
                            },
                            "deduplication_rate": {
                              "type": "number"
                            },
                            "deduplication_rates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "group_id": {
                                    "type": "string"
                                  },
                                  "rate": {
                                    "type": "number"
                                  },
                                  "group_name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "group_id",
                                  "rate",
                                  "group_name"
                                ]
                              }
                            },
                            "primary_id_type": {
                              "type": "string"
                            },
                            "secondary_id_type": {
                              "type": "string"
                            },
                            "missingMetrics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "metrics": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "metric_name": {
                                    "type": "string"
                                  },
                                  "earliest_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  },
                                  "latest_date": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "metric_name",
                                  "earliest_date",
                                  "latest_date"
                                ]
                              }
                            },
                            "lastUpdatedDs": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "primary_id_type"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "has_checks",
                            "has_valid_unit_type",
                            "has_balanced_exposures",
                            "has_event_metrics",
                            "has_pulse_metrics",
                            "assignment_health",
                            "has_crossover",
                            "has_exposures",
                            "has_recent_exposures_for_analyze_whn",
                            "user_metrics_exist",
                            "deduplication_rate",
                            "deduplication_rate_group_level",
                            "windowed_metrics_have_outliers",
                            "exposures_data_is_behind",
                            "pre_experimental_bias_check",
                            "segments_of_interest_analysis",
                            "has_changed_parameter",
                            "metric_history_for_topline_impact",
                            "default_value_mismatch",
                            "has_data_gaps",
                            "has_correct_target_app",
                            "has_dag_failures",
                            "has_exploration_completed",
                            "autotune_has_outcomes"
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "description",
                        "status"
                      ]
                    }
                  },
                  "healthCheckStatus": {
                    "type": "string",
                    "enum": [
                      "PASSED",
                      "FAILED",
                      "WAITING",
                      "WARNING"
                    ],
                    "description": "Overall health check status"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "ownerID": {
                        "type": "string",
                        "description": "ID of the owner",
                        "example": "abc123"
                      },
                      "ownerType": {
                        "type": "string",
                        "description": "Type of the owner (e.g., SDK_KEY or USER)",
                        "example": "USER"
                      },
                      "ownerName": {
                        "type": "string",
                        "description": "The name of the owner. This field is optional.",
                        "example": "John Doe"
                      },
                      "ownerEmail": {
                        "type": "string",
                        "description": "The email of the owner. This field is optional."
                      }
                    },
                    "description": "Schema for owner data including ID, type, name. Note that if Entity is created by CONSOLE API, owner will be undefined.",
                    "example": {
                      "ownerID": "user123",
                      "ownerType": "USER",
                      "ownerName": "John Doe",
                      "ownerEmail": "owner123@test.com"
                    },
                    "nullable": true
                  },
                  "inlineTargetingRulesJSON": {
                    "type": "string",
                    "nullable": true
                  },
                  "summarySections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": [
                        "name",
                        "content"
                      ]
                    },
                    "nullable": true
                  }
                },
                "required": [
                  "id",
                  "idType",
                  "description",
                  "lastModifierID",
                  "lastModifiedTime",
                  "lastModifierEmail",
                  "lastModifierName",
                  "createdTime",
                  "creatorName",
                  "tags",
                  "hypothesis",
                  "groups",
                  "allocation",
                  "primaryMetrics",
                  "secondaryMetrics",
                  "targetingGateID",
                  "bonferroniCorrection",
                  "defaultConfidenceInterval",
                  "status",
                  "decisionReason",
                  "layerID",
                  "startTime",
                  "endTime",
                  "decisionTime",
                  "healthCheckStatus"
                ]
              }
            },
            "required": [
              "review_id",
              "submitter",
              "committer",
              "config_type",
              "experiment_name",
              "type",
              "old_settings",
              "new_settings",
              "old_experiment",
              "new_experiment"
            ]
          }
        ]
      },
      "PulseLoadHistoryDto": {
        "type": "object",
        "properties": {
          "creatorName": {
            "type": "string"
          },
          "createdTime": {
            "type": "number",
            "format": "double"
          },
          "finishedTime": {
            "type": "number",
            "format": "double"
          },
          "finishedState": {
            "type": "string",
            "enum": [
              "success",
              "failure",
              "partial_failure",
              "cancelled",
              "timeout"
            ]
          },
          "startDs": {
            "type": "string"
          },
          "endDs": {
            "type": "string"
          },
          "reloadType": {
            "type": "string",
            "enum": [
              "incremental",
              "full",
              "metric"
            ]
          },
          "turboMode": {
            "type": "boolean"
          }
        },
        "required": [
          "createdTime",
          "startDs",
          "endDs",
          "reloadType",
          "turboMode"
        ]
      },
      "ReleasePipelineCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pipeline Name"
          },
          "phases": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Phase ID"
                },
                "name": {
                  "type": "string",
                  "description": "Phase Name"
                },
                "timeIntervalMs": {
                  "type": "number",
                  "description": "Time interval in milliseconds for this phase"
                },
                "requiredReview": {
                  "type": "boolean",
                  "description": "Whether this phase requires review to proceed"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Statsig ID of this rule."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of this rule."
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "targetValue": {
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ],
                              "nullable": true
                            },
                            "operator": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string",
                              "nullable": true
                            },
                            "customID": {
                              "type": "string",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "app_version",
                                "browser_name",
                                "browser_version",
                                "country",
                                "custom_field",
                                "email",
                                "environment_tier",
                                "fails_gate",
                                "fails_segment",
                                "ip_address",
                                "locale",
                                "os_name",
                                "os_version",
                                "passes_gate",
                                "passes_segment",
                                "public",
                                "time",
                                "unit_id",
                                "user_id",
                                "url",
                                "javascript",
                                "device_model",
                                "target_app"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "description": "An array of Condition objects."
                      },
                      "environments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "description": "The environments this rule is enabled for."
                      }
                    },
                    "required": [
                      "name",
                      "conditions"
                    ]
                  },
                  "description": "Rules to apply in this phase"
                }
              },
              "required": [
                "name",
                "timeIntervalMs",
                "requiredReview",
                "rules"
              ]
            },
            "description": "Phases of the release pipeline that will be executed in order."
          }
        },
        "required": [
          "name"
        ]
      },
      "ReleasePipelineDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Pipeline ID"
          },
          "name": {
            "type": "string",
            "description": "Pipeline Name"
          },
          "creatorID": {
            "type": "string",
            "description": "Pipeline Creator ID"
          },
          "createdTime": {
            "type": "number",
            "description": "Pipeline Creation Time",
            "format": "double"
          },
          "lastModifierID": {
            "type": "string",
            "description": "Last Modifier ID"
          },
          "phases": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Phase ID"
                },
                "name": {
                  "type": "string",
                  "description": "Phase Name"
                },
                "timeIntervalMs": {
                  "type": "number",
                  "description": "Time interval in milliseconds for this phase"
                },
                "requiredReview": {
                  "type": "boolean",
                  "description": "Whether this phase requires review to proceed"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Statsig ID of this rule."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of this rule."
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "targetValue": {
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ],
                              "nullable": true
                            },
                            "operator": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string",
                              "nullable": true
                            },
                            "customID": {
                              "type": "string",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "app_version",
                                "browser_name",
                                "browser_version",
                                "country",
                                "custom_field",
                                "email",
                                "environment_tier",
                                "fails_gate",
                                "fails_segment",
                                "ip_address",
                                "locale",
                                "os_name",
                                "os_version",
                                "passes_gate",
                                "passes_segment",
                                "public",
                                "time",
                                "unit_id",
                                "user_id",
                                "url",
                                "javascript",
                                "device_model",
                                "target_app"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "description": "An array of Condition objects."
                      },
                      "environments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "description": "The environments this rule is enabled for."
                      }
                    },
                    "required": [
                      "name",
                      "conditions"
                    ]
                  },
                  "description": "Rules to apply in this phase"
                }
              },
              "required": [
                "name",
                "timeIntervalMs",
                "requiredReview",
                "rules"
              ]
            },
            "description": "Phases of the release pipeline that will be executed in order."
          }
        },
        "required": [
          "id",
          "name",
          "creatorID",
          "createdTime",
          "lastModifierID"
        ]
      },
      "ReleasePipelineTriggerActionBodyDto": {
        "type": "object",
        "properties": {
          "phaseID": {
            "type": "string",
            "description": "Phase ID to ensure the correct state of the pipeline is updated"
          }
        },
        "required": [
          "phaseID"
        ]
      },
      "ReleasePipelineTriggerResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Trigger ID"
          },
          "releasePipelineID": {
            "type": "string",
            "description": "Release Pipeline ID"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "STARTED",
                        "ABORTED",
                        "PAUSED",
                        "UNPAUSED",
                        "APPROVED_FOR",
                        "SKIPPED",
                        "FULL_ROLL_OUT"
                      ]
                    },
                    {
                      "type": "string",
                      "enum": [
                        "CLEANED_UP"
                      ]
                    }
                  ]
                },
                "timeMs": {
                  "type": "number"
                },
                "phaseID": {
                  "type": "string"
                },
                "actorID": {
                  "type": "string"
                },
                "actorName": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "timeMs",
                "phaseID",
                "actorID",
                "actorName"
              ]
            },
            "description": "Actions"
          },
          "creatorID": {
            "type": "string",
            "description": "Trigger Creator ID"
          },
          "createdTime": {
            "type": "number",
            "description": "Trigger Creation Time",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "Optional description for this trigger"
          },
          "gateID": {
            "type": "string",
            "description": "Gate ID"
          },
          "dynamicConfigID": {
            "type": "string",
            "description": "Dynamic Config ID"
          },
          "lastModifierID": {
            "type": "string",
            "description": "Last modifier ID"
          },
          "lastModifierName": {
            "type": "string",
            "description": "Last modifier name"
          },
          "status": {
            "type": "string",
            "description": "Pipeline status with this trigger"
          },
          "currentPhase": {
            "type": "string",
            "nullable": true,
            "description": "Current phase"
          },
          "currentPhaseID": {
            "type": "string",
            "nullable": true,
            "description": "Current phase ID"
          },
          "currentPhaseEndTime": {
            "type": "number",
            "nullable": true,
            "description": "Current phase end time",
            "format": "double"
          }
        },
        "required": [
          "id",
          "releasePipelineID",
          "actions",
          "creatorID",
          "createdTime",
          "lastModifierID",
          "lastModifierName",
          "status",
          "currentPhase",
          "currentPhaseID",
          "currentPhaseEndTime"
        ]
      },
      "ReleasePipelineUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pipeline Name"
          },
          "phases": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Phase ID"
                },
                "name": {
                  "type": "string",
                  "description": "Phase Name"
                },
                "timeIntervalMs": {
                  "type": "number",
                  "description": "Time interval in milliseconds for this phase"
                },
                "requiredReview": {
                  "type": "boolean",
                  "description": "Whether this phase requires review to proceed"
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The Statsig ID of this rule."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of this rule."
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "targetValue": {
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "number"
                                  }
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                }
                              ],
                              "nullable": true
                            },
                            "operator": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string",
                              "nullable": true
                            },
                            "customID": {
                              "type": "string",
                              "nullable": true
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "app_version",
                                "browser_name",
                                "browser_version",
                                "country",
                                "custom_field",
                                "email",
                                "environment_tier",
                                "fails_gate",
                                "fails_segment",
                                "ip_address",
                                "locale",
                                "os_name",
                                "os_version",
                                "passes_gate",
                                "passes_segment",
                                "public",
                                "time",
                                "unit_id",
                                "user_id",
                                "url",
                                "javascript",
                                "device_model",
                                "target_app"
                              ]
                            }
                          },
                          "required": [
                            "type"
                          ]
                        },
                        "description": "An array of Condition objects."
                      },
                      "environments": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "description": "The environments this rule is enabled for."
                      }
                    },
                    "required": [
                      "name",
                      "conditions"
                    ]
                  },
                  "description": "Rules to apply in this phase"
                }
              },
              "required": [
                "name",
                "timeIntervalMs",
                "requiredReview",
                "rules"
              ]
            },
            "description": "Phases of the release pipeline that will be executed in order."
          }
        }
      },
      "ReportDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://example.com/report.pdf",
            "description": "URL to the report"
          }
        },
        "required": [
          "url"
        ]
      },
      "ResolveGuardrailAlertRequestDto": {
        "type": "object",
        "properties": {
          "reasoning": {
            "type": "string",
            "description": "Reason for resolving the alert",
            "example": "Issue has been addressed"
          }
        }
      },
      "ResolveGuardrailAlertResponseDto": {
        "type": "object",
        "properties": {
          "resolvedAt": {
            "type": "number",
            "description": "Timestamp when alert was resolved",
            "example": 1718630400,
            "format": "double"
          }
        }
      },
      "RoleContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role."
          },
          "permissions": {
            "type": "object",
            "properties": {
              "invitation_access": {
                "type": "boolean"
              },
              "create_configs": {
                "type": "boolean"
              },
              "edit_or_delete_configs": {
                "type": "boolean"
              },
              "launch_to_production": {
                "type": "boolean"
              },
              "launch_or_disable_configs": {
                "type": "boolean"
              },
              "start_experiments": {
                "type": "boolean"
              },
              "create_or_edit_templates": {
                "type": "boolean"
              },
              "create_or_edit_dashboards": {
                "type": "boolean"
              },
              "create_teams": {
                "type": "boolean"
              },
              "edit_dynamic_config_schemas": {
                "type": "boolean"
              },
              "create_release_pipelines": {
                "type": "boolean"
              },
              "approve_required_review_release_pipeline_phase": {
                "type": "boolean"
              },
              "self_approve_review": {
                "type": "boolean"
              },
              "approve_reviews": {
                "type": "boolean"
              },
              "bypass_reviews_for_overrides": {
                "type": "boolean"
              },
              "metric_management": {
                "type": "boolean"
              },
              "event_dimensions_access": {
                "type": "boolean"
              },
              "verify_metrics": {
                "type": "boolean"
              },
              "use_metrics_explorer": {
                "type": "boolean"
              },
              "local_metrics": {
                "type": "boolean"
              },
              "manage_alerts": {
                "type": "boolean"
              },
              "integrations_edit_access": {
                "type": "boolean"
              },
              "source_connection_and_creation": {
                "type": "boolean"
              },
              "data_warehouse_ingestion_and_exports_edit_access": {
                "type": "boolean"
              },
              "edit_and_tag_configs_with_core_tag": {
                "type": "boolean"
              },
              "reset_experiments": {
                "type": "boolean"
              },
              "manual_whn_reload": {
                "type": "boolean"
              }
            },
            "description": "The permissions of the role."
          }
        },
        "required": [
          "name",
          "permissions"
        ]
      },
      "RoleUpdateContractDto": {
        "type": "object",
        "properties": {
          "permissions": {
            "type": "object",
            "properties": {
              "invitation_access": {
                "type": "boolean"
              },
              "create_configs": {
                "type": "boolean"
              },
              "edit_or_delete_configs": {
                "type": "boolean"
              },
              "launch_to_production": {
                "type": "boolean"
              },
              "launch_or_disable_configs": {
                "type": "boolean"
              },
              "start_experiments": {
                "type": "boolean"
              },
              "create_or_edit_templates": {
                "type": "boolean"
              },
              "create_or_edit_dashboards": {
                "type": "boolean"
              },
              "create_teams": {
                "type": "boolean"
              },
              "edit_dynamic_config_schemas": {
                "type": "boolean"
              },
              "create_release_pipelines": {
                "type": "boolean"
              },
              "approve_required_review_release_pipeline_phase": {
                "type": "boolean"
              },
              "self_approve_review": {
                "type": "boolean"
              },
              "approve_reviews": {
                "type": "boolean"
              },
              "bypass_reviews_for_overrides": {
                "type": "boolean"
              },
              "metric_management": {
                "type": "boolean"
              },
              "event_dimensions_access": {
                "type": "boolean"
              },
              "verify_metrics": {
                "type": "boolean"
              },
              "use_metrics_explorer": {
                "type": "boolean"
              },
              "local_metrics": {
                "type": "boolean"
              },
              "manage_alerts": {
                "type": "boolean"
              },
              "integrations_edit_access": {
                "type": "boolean"
              },
              "source_connection_and_creation": {
                "type": "boolean"
              },
              "data_warehouse_ingestion_and_exports_edit_access": {
                "type": "boolean"
              },
              "edit_and_tag_configs_with_core_tag": {
                "type": "boolean"
              },
              "reset_experiments": {
                "type": "boolean"
              },
              "manual_whn_reload": {
                "type": "boolean"
              }
            },
            "description": "The permissions of the role."
          }
        },
        "required": [
          "permissions"
        ]
      },
      "RuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this rule."
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 0.01,
            "description": "Of the users that meet the conditions of this rule, what percent should return true.",
            "format": "double"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "targetValue": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "nullable": true
                },
                "operator": {
                  "type": "string"
                },
                "field": {
                  "type": "string",
                  "nullable": true
                },
                "customID": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "app_version",
                    "browser_name",
                    "browser_version",
                    "country",
                    "custom_field",
                    "email",
                    "environment_tier",
                    "fails_gate",
                    "fails_segment",
                    "ip_address",
                    "locale",
                    "os_name",
                    "os_version",
                    "passes_gate",
                    "passes_segment",
                    "public",
                    "time",
                    "unit_id",
                    "user_id",
                    "url",
                    "javascript",
                    "device_model",
                    "target_app"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "description": "An array of Condition objects."
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The environments this rule is enabled for."
          },
          "id": {
            "type": "string",
            "description": "The Statsig ID of this rule."
          },
          "baseID": {
            "type": "string",
            "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
          },
          "returnValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The return value of the rule."
          },
          "completedAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          },
          "pendingAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          }
        },
        "required": [
          "name",
          "passPercentage",
          "conditions"
        ]
      },
      "RuleUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this rule."
          },
          "passPercentage": {
            "type": "number",
            "minimum": 0,
            "maximum": 100,
            "multipleOf": 0.01,
            "description": "Of the users that meet the conditions of this rule, what percent should return true.",
            "format": "double"
          },
          "conditions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "targetValue": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ],
                  "nullable": true
                },
                "operator": {
                  "type": "string"
                },
                "field": {
                  "type": "string",
                  "nullable": true
                },
                "customID": {
                  "type": "string",
                  "nullable": true
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "app_version",
                    "browser_name",
                    "browser_version",
                    "country",
                    "custom_field",
                    "email",
                    "environment_tier",
                    "fails_gate",
                    "fails_segment",
                    "ip_address",
                    "locale",
                    "os_name",
                    "os_version",
                    "passes_gate",
                    "passes_segment",
                    "public",
                    "time",
                    "unit_id",
                    "user_id",
                    "url",
                    "javascript",
                    "device_model",
                    "target_app"
                  ]
                }
              },
              "required": [
                "type"
              ]
            },
            "description": "An array of Condition objects."
          },
          "environments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "The environments this rule is enabled for."
          },
          "id": {
            "type": "string",
            "description": "The Statsig ID of this rule."
          },
          "baseID": {
            "type": "string",
            "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
          },
          "returnValue": {
            "type": "object",
            "additionalProperties": {},
            "description": "The return value of the rule."
          },
          "completedAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          },
          "pendingAutomatedRollouts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "number"
                },
                "passPercent": {
                  "type": "number"
                }
              },
              "required": [
                "time",
                "passPercent"
              ]
            }
          }
        },
        "example": {
          "name": "All Conditions",
          "id": "38ttpCpzrQFTMKcqFKk02l:10.00:1",
          "baseID": "38ttpCpzrQFTMKcqFKk02l",
          "passPercentage": 10,
          "conditions": [
            {
              "type": "user_id",
              "targetValue": [
                "35sClJFs8l0y5uRQhDwUDo"
              ],
              "operator": "any"
            }
          ],
          "environments": [
            "staging"
          ]
        }
      },
      "ScheduleExperimentStartParamDto": {
        "type": "object",
        "properties": {
          "scheduledTime": {
            "type": "number",
            "description": "Unix timestamp (in milliseconds) to schedule the experiment to start",
            "format": "double"
          }
        },
        "required": [
          "scheduledTime"
        ]
      },
      "SegmentCreateContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\- ]*$",
            "description": "name of the segment"
          },
          "id": {
            "type": "string",
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_-]*$",
            "description": "optional id of the segment (defaults to name)"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "description of the segment"
          },
          "type": {
            "type": "string",
            "enum": [
              "id_list",
              "rule_based",
              "analysis_list",
              "user_store_id_list"
            ],
            "description": "type of the segment"
          },
          "idType": {
            "default": "userID",
            "type": "string",
            "description": "type of id"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "optional tags for categorization"
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "the Statsig ID of the creator of this experiment"
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "the email of the creator of this experiment"
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "optional name identifier for the responsible team (enterprise only)"
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "optional identifier for the responsible team (enterprise only)"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_segment",
                          "ip_address",
                          "os_name",
                          "os_version",
                          "passes_segment",
                          "unit_id",
                          "user_id"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                },
                "completedAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                },
                "pendingAutomatedRollouts": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "number"
                      },
                      "passPercent": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "time",
                      "passPercent"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            },
            "description": "Rule Object"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "SegmentDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Is the segment enabled."
          },
          "type": {
            "type": "string",
            "enum": [
              "id_list",
              "rule_based",
              "analysis_list",
              "user_store_id_list"
            ]
          },
          "count": {
            "type": "number",
            "description": "For id_list segments: the length of the ID list",
            "format": "double"
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of this rule."
                },
                "passPercentage": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "multipleOf": 0.01,
                  "description": "Of the users that meet the conditions of this rule, what percent should return true."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "targetValue": {
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ],
                        "nullable": true
                      },
                      "operator": {
                        "type": "string"
                      },
                      "field": {
                        "type": "string",
                        "nullable": true
                      },
                      "customID": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "app_version",
                          "browser_name",
                          "browser_version",
                          "country",
                          "custom_field",
                          "email",
                          "environment_tier",
                          "fails_gate",
                          "fails_segment",
                          "ip_address",
                          "locale",
                          "os_name",
                          "os_version",
                          "passes_gate",
                          "passes_segment",
                          "public",
                          "time",
                          "unit_id",
                          "user_id",
                          "url",
                          "javascript",
                          "device_model",
                          "target_app"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "description": "An array of Condition objects."
                },
                "environments": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true,
                  "description": "The environments this rule is enabled for."
                },
                "id": {
                  "type": "string",
                  "description": "The Statsig ID of this rule."
                },
                "baseID": {
                  "type": "string",
                  "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
                },
                "returnValue": {
                  "type": "object",
                  "additionalProperties": {},
                  "description": "The return value of the rule."
                }
              },
              "required": [
                "name",
                "passPercentage",
                "conditions"
              ]
            },
            "description": "Rule Object"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional tags for categorization."
          },
          "id": {
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "Optional name for the configuration."
          },
          "idType": {
            "type": "string",
            "description": "Type of ID"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the configuration’s purpose."
          },
          "lastModifierID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the last modifier."
          },
          "lastModifiedTime": {
            "type": "number",
            "nullable": true,
            "description": "Time of the last modification.",
            "format": "double"
          },
          "lastModifierEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the last modifier."
          },
          "lastModifierName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the last modifier."
          },
          "creatorID": {
            "type": "string",
            "nullable": true,
            "description": "ID of the user who created the entity."
          },
          "createdTime": {
            "type": "number",
            "description": "Timestamp when the entity was created.",
            "format": "double"
          },
          "creatorName": {
            "type": "string",
            "nullable": true,
            "description": "Name of the creator."
          },
          "creatorEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email of the creator."
          },
          "targetApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of target applications associated with this configuration."
          },
          "holdoutIDs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Holdouts applied to this configuration."
          },
          "team": {
            "type": "string",
            "nullable": true,
            "description": "Optional name for the responsible team."
          },
          "teamID": {
            "type": "string",
            "nullable": true,
            "description": "Optional ID of the responsible team."
          },
          "version": {
            "type": "number",
            "description": "Version number",
            "format": "double"
          }
        },
        "required": [
          "isEnabled",
          "type",
          "id",
          "idType",
          "description",
          "lastModifierID",
          "lastModifiedTime",
          "lastModifierEmail",
          "lastModifierName",
          "creatorID",
          "createdTime",
          "creatorName",
          "creatorEmail"
        ]
      },
      "SegmentIDListContractDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100000
          }
        },
        "required": [
          "ids"
        ]
      },
      "SegmentIDListResetContractDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 100000
          }
        },
        "required": [
          "ids"
        ]
      },
      "SegmentIDListUserStoreContractDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 1000
          },
          "version": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "ids"
        ]
      },
      "SegmentRulesDto": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of this rule."
            },
            "passPercentage": {
              "type": "number",
              "minimum": 0,
              "maximum": 100,
              "multipleOf": 0.01,
              "description": "Of the users that meet the conditions of this rule, what percent should return true."
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "targetValue": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      },
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ],
                    "nullable": true
                  },
                  "operator": {
                    "type": "string"
                  },
                  "field": {
                    "type": "string",
                    "nullable": true
                  },
                  "customID": {
                    "type": "string",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "app_version",
                      "browser_name",
                      "browser_version",
                      "country",
                      "custom_field",
                      "email",
                      "environment_tier",
                      "fails_segment",
                      "ip_address",
                      "os_name",
                      "os_version",
                      "passes_segment",
                      "unit_id",
                      "user_id"
                    ]
                  }
                },
                "required": [
                  "type"
                ]
              }
            },
            "environments": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true,
              "description": "The environments this rule is enabled for."
            },
            "id": {
              "type": "string",
              "description": "The Statsig ID of this rule."
            },
            "baseID": {
              "type": "string",
              "description": "The base ID of this rule, i.e. without any added metadata. Will remain the exact same throughout"
            },
            "returnValue": {
              "type": "object",
              "additionalProperties": {},
              "description": "The return value of the rule."
            },
            "completedAutomatedRollouts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "number"
                  },
                  "passPercent": {
                    "type": "number"
                  }
                },
                "required": [
                  "time",
                  "passPercent"
                ]
              }
            },
            "pendingAutomatedRollouts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "number"
                  },
                  "passPercent": {
                    "type": "number"
                  }
                },
                "required": [
                  "time",
                  "passPercent"
                ]
              }
            }
          },
          "required": [
            "name",
            "passPercentage",
            "conditions"
          ]
        }
      },
      "SettingsProjectContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the project."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "OPEN",
              "CLOSED",
              "EXTERNAL"
            ],
            "description": "The visibility type of the project."
          },
          "default_unit_type": {
            "type": "string",
            "description": "The default unit ID type of the project for newly created gates, experiments, and metrics. If not provided, there will be no default unit type."
          }
        },
        "required": [
          "name",
          "visibility"
        ]
      },
      "SettingsReviewsContractDto": {
        "type": "object",
        "properties": {
          "is_config_review_required": {
            "type": "boolean",
            "description": "Whether config reviews are required."
          },
          "is_metric_review_required": {
            "type": "boolean",
            "description": "Whether metric reviews are required."
          },
          "is_metric_review_required_on_verified_only": {
            "type": "boolean",
            "description": "Whether metric reviews are only required for verified metrics."
          },
          "is_whn_analysis_only_review_required": {
            "type": "boolean",
            "description": "Whether analysis-only experiment reviews are required. Only applicable to WHN projects."
          },
          "is_whn_source_review_required": {
            "type": "boolean",
            "description": "Whether metric/assignment/entity property source reviews are required. Only applicable to WHN projects."
          }
        },
        "required": [
          "is_config_review_required",
          "is_metric_review_required",
          "is_metric_review_required_on_verified_only"
        ]
      },
      "SettingsRolesContractDto": {
        "type": "object",
        "properties": {
          "default_project_role": {
            "type": "string",
            "description": "The name of the default project role. This is the role that will be initially assigned to new users joining the project."
          }
        },
        "required": [
          "default_project_role"
        ]
      },
      "SettingsTeamsContractDto": {
        "type": "object",
        "properties": {
          "require_teams_on_configs": {
            "type": "boolean",
            "description": "Whether a team is required on each new config."
          }
        },
        "required": [
          "require_teams_on_configs"
        ]
      },
      "SingleDataResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "A simple string explaining the result of the operation."
          },
          "data": {
            "type": "object",
            "description": "A single result."
          }
        },
        "required": [
          "message",
          "data"
        ]
      },
      "TagCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "isCore": {
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "description"
        ],
        "example": {
          "name": "my_tag",
          "description": "my tag description",
          "isCore": true
        }
      },
      "TagDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string",
            "description": "id of the tag"
          },
          "name": {
            "type": "string",
            "example": "a tag",
            "description": "name of the tag"
          },
          "description": {
            "type": "string",
            "example": "a description",
            "description": "description of the tag"
          },
          "isCore": {
            "type": "boolean",
            "example": false,
            "description": "is this a core tag"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "isCore"
        ]
      },
      "TagUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "isCore": {
            "default": false,
            "type": "boolean"
          }
        }
      },
      "TargetAppCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string",
            "description": "name of the target app"
          },
          "description": {
            "type": "string",
            "example": "a description",
            "description": "a description of the target app"
          },
          "gates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gate IDs to assign to target app(s)"
          },
          "dynamicConfigs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Dynamic Config IDs to assign to target app(s)"
          },
          "experiments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Experiment IDs to assign to target app(s)"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "TargetAppDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string",
            "description": "id of target app"
          },
          "name": {
            "type": "string",
            "example": "a tag",
            "description": "name of the target app"
          }
        },
        "required": [
          "name"
        ]
      },
      "TeamCreationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the team."
          },
          "description": {
            "type": "string",
            "description": "Description of the team."
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member email addresses in the team."
          },
          "admins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of admin email addresses in the team."
          },
          "defaultGateMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default gate metrics for the team."
          },
          "defaultExperimentPrimaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default primary metrics for experiments in the team."
          },
          "defaultExperimentSecondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default secondary metrics for experiments in the team."
          },
          "defaultHoldoutMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default holdout metrics for the team."
          },
          "changeTeamConfigs": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only"
            ],
            "description": "Who can change team configurations: \"anyone\" or \"team_only\"."
          },
          "reviewApproval": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only",
              "admin_only"
            ],
            "description": "Who can review and approve changes: \"anyone\", \"team_only\", or \"admin_only\"."
          },
          "defaultTargetApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Default target applications for the team."
          },
          "defaultHoldoutID": {
            "type": "string",
            "nullable": true,
            "description": "Default holdout ID for the team, if applicable."
          },
          "requireReviews": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether reviews are required for changes, if applicable."
          },
          "requireGateTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether gate templates are required for the team, if applicable."
          },
          "requireExperimentTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether experiment templates are required for the team, if applicable."
          },
          "requireDynamicConfigTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether dynamic config templates are required for the team, if applicable."
          }
        },
        "required": [
          "name",
          "members",
          "admins",
          "defaultGateMetrics",
          "defaultExperimentPrimaryMetrics",
          "defaultExperimentSecondaryMetrics",
          "defaultHoldoutMetrics",
          "changeTeamConfigs",
          "reviewApproval",
          "defaultTargetApplications"
        ]
      },
      "TeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the team."
          },
          "description": {
            "type": "string",
            "description": "Description of the team."
          },
          "id": {
            "type": "string",
            "description": "The ID of the team."
          },
          "defaultGateMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default gate metrics for the team."
          },
          "defaultExperimentPrimaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default primary metrics for experiments in the team."
          },
          "defaultExperimentSecondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default secondary metrics for experiments in the team."
          },
          "defaultHoldoutMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default holdout metrics for the team."
          },
          "changeTeamConfigs": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only"
            ],
            "description": "Who can change team configurations: \"anyone\" or \"team_only\"."
          },
          "reviewApproval": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only",
              "admin_only"
            ],
            "description": "Who can review and approve changes: \"anyone\", \"team_only\", or \"admin_only\"."
          },
          "defaultTargetApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Default target applications for the team."
          },
          "defaultHoldoutID": {
            "type": "string",
            "nullable": true,
            "description": "Default holdout ID for the team, if applicable."
          },
          "requireReviews": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether reviews are required for changes, if applicable."
          },
          "requireGateTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether gate templates are required for the team, if applicable."
          },
          "requireExperimentTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether experiment templates are required for the team, if applicable."
          },
          "requireDynamicConfigTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether dynamic config templates are required for the team, if applicable."
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The email address of the user."
                },
                "firstName": {
                  "type": "string",
                  "description": "The user's first name."
                },
                "lastName": {
                  "type": "string",
                  "description": "The user's last name."
                },
                "role": {
                  "type": "string",
                  "description": "The user's role, which can be 'Admin', 'Read Only', 'Member', or any custom role name."
                }
              },
              "required": [
                "email",
                "firstName",
                "lastName",
                "role"
              ]
            }
          },
          "admins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "The email address of the user."
                },
                "firstName": {
                  "type": "string",
                  "description": "The user's first name."
                },
                "lastName": {
                  "type": "string",
                  "description": "The user's last name."
                },
                "role": {
                  "type": "string",
                  "description": "The user's role, which can be 'Admin', 'Read Only', 'Member', or any custom role name."
                }
              },
              "required": [
                "email",
                "firstName",
                "lastName",
                "role"
              ]
            }
          }
        },
        "required": [
          "name",
          "id",
          "defaultGateMetrics",
          "defaultExperimentPrimaryMetrics",
          "defaultExperimentSecondaryMetrics",
          "defaultHoldoutMetrics",
          "changeTeamConfigs",
          "reviewApproval",
          "defaultTargetApplications",
          "members",
          "admins"
        ]
      },
      "TeamPartialUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the team."
          },
          "description": {
            "type": "string",
            "description": "Description of the team."
          },
          "id": {
            "type": "string",
            "description": "The ID of the team."
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of member email addresses in the team."
          },
          "admins": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of admin email addresses in the team."
          },
          "defaultGateMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default gate metrics for the team."
          },
          "defaultExperimentPrimaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default primary metrics for experiments in the team."
          },
          "defaultExperimentSecondaryMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default secondary metrics for experiments in the team."
          },
          "defaultHoldoutMetrics": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the metric."
                },
                "type": {
                  "type": "string",
                  "description": "The type of the metric."
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "description": "Default holdout metrics for the team."
          },
          "changeTeamConfigs": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only"
            ],
            "description": "Who can change team configurations: \"anyone\" or \"team_only\"."
          },
          "reviewApproval": {
            "type": "string",
            "enum": [
              "anyone",
              "team_only",
              "admin_only"
            ],
            "description": "Who can review and approve changes: \"anyone\", \"team_only\", or \"admin_only\"."
          },
          "defaultTargetApplications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Default target applications for the team."
          },
          "defaultHoldoutID": {
            "type": "string",
            "nullable": true,
            "description": "Default holdout ID for the team, if applicable."
          },
          "requireReviews": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether reviews are required for changes, if applicable."
          },
          "requireGateTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether gate templates are required for the team, if applicable."
          },
          "requireExperimentTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether experiment templates are required for the team, if applicable."
          },
          "requireDynamicConfigTemplates": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether dynamic config templates are required for the team, if applicable."
          }
        }
      },
      "UnarchiveSchemaDto": {
        "type": "object",
        "properties": {
          "unarchiveReason": {
            "type": "string",
            "description": "The reason for unarchiving the gate",
            "example": "The gate is needed again"
          }
        }
      },
      "UnitIdTypeContractDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the unit id type."
          },
          "description": {
            "type": "string",
            "description": "The description of the unit id type."
          }
        },
        "required": [
          "name"
        ]
      },
      "UnitIdTypeUpdateContractDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the unit id type."
          }
        },
        "required": [
          "description"
        ]
      },
      "UpdateOverridesContractDto": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "environmentOverrides": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "environment": {
                      "type": "string",
                      "nullable": true,
                      "description": "Environment",
                      "example": "staging"
                    },
                    "unitID": {
                      "type": "string",
                      "nullable": true,
                      "description": "Unit ID",
                      "example": "unit123"
                    },
                    "passingIDs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of passing IDs",
                      "example": [
                        "id1",
                        "id2"
                      ]
                    },
                    "failingIDs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of failing IDs",
                      "example": [
                        "id3",
                        "id4"
                      ]
                    }
                  },
                  "required": [
                    "unitID",
                    "passingIDs",
                    "failingIDs"
                  ],
                  "description": "Contract for environment override",
                  "example": {
                    "environment": "staging",
                    "unitID": "unit123",
                    "passingIDs": [
                      "id1",
                      "id2"
                    ],
                    "failingIDs": [
                      "id3",
                      "id4"
                    ]
                  }
                }
              }
            },
            "required": [
              "environmentOverrides"
            ],
            "description": "Contract for updating environment overrides",
            "example": {
              "environmentOverrides": [
                {
                  "environment": "staging",
                  "unitID": "unit123",
                  "passingIDs": [
                    "id1",
                    "id2"
                  ],
                  "failingIDs": [
                    "id3",
                    "id4"
                  ]
                }
              ]
            }
          },
          {
            "type": "object",
            "properties": {
              "passingUserIDs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "description": "User ID",
                  "example": "user123"
                },
                "maxItems": 2000,
                "description": "List of user IDs",
                "example": [
                  "user123",
                  "user456",
                  "user789"
                ]
              },
              "failingUserIDs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "description": "User ID",
                  "example": "user123"
                },
                "maxItems": 2000,
                "description": "List of user IDs",
                "example": [
                  "user123",
                  "user456",
                  "user789"
                ]
              },
              "passingCustomIDs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Custom ID",
                  "example": "custom123"
                },
                "maxItems": 2000,
                "description": "Optional list of custom IDs",
                "example": [
                  "custom123",
                  "custom456"
                ]
              },
              "failingCustomIDs": {
                "type": "array",
                "items": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Custom ID",
                  "example": "custom123"
                },
                "maxItems": 2000,
                "description": "Optional list of custom IDs",
                "example": [
                  "custom123",
                  "custom456"
                ]
              }
            },
            "required": [
              "passingUserIDs",
              "failingUserIDs"
            ],
            "description": "Contract for updating ID overrides",
            "example": {
              "passingUserIDs": [
                "user123",
                "user456"
              ],
              "failingUserIDs": [
                "user789",
                "user012"
              ],
              "passingCustomIDs": [
                "custom123"
              ],
              "failingCustomIDs": [
                "custom456"
              ]
            }
          }
        ],
        "description": "Contract for updating overrides"
      },
      "UpdateTargetAppDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string",
            "description": "name of the target app"
          },
          "description": {
            "type": "string",
            "example": "a description",
            "description": "a description of the target app"
          }
        }
      },
      "UserContractDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user."
          },
          "firstName": {
            "type": "string",
            "description": "The user's first name."
          },
          "lastName": {
            "type": "string",
            "description": "The user's last name."
          },
          "role": {
            "type": "string",
            "description": "The user's role, which can be 'Admin', 'Read Only', 'Member', or any custom role name."
          }
        },
        "required": [
          "email",
          "firstName",
          "lastName",
          "role"
        ]
      },
      "UserInvitesDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Role assigned to the invited users. Can be 'Admin', 'Read Only', 'Member', or any custom role name."
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "List of email addresses to send invitations to. Invitee Emails must have the same domain to your company email domain."
          },
          "teams": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of teams that the invited users will be associated with."
          }
        },
        "required": [
          "role",
          "emails"
        ]
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Update the user's role. Can be 'Admin', 'Read Only', 'Member', or any custom role name."
          },
          "firstName": {
            "type": "string",
            "description": "Update the user's first name."
          },
          "lastName": {
            "type": "string",
            "description": "Update the user's last name."
          }
        },
        "description": "Schema for updating user information."
      },
      "WhConnectionUpdateDto": {
        "type": "object",
        "properties": {
          "databricks": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "accessToken": {
                "type": "string"
              },
              "stagingDatabase": {
                "type": "string",
                "description": "Statsig will use this Database to save intermediate tables in the experimentation pipeline. Must be a database that the service user has write access to."
              },
              "oauthClientID": {
                "type": "string",
                "nullable": true
              },
              "consoleComputePath": {
                "type": "string",
                "nullable": true,
                "description": "An optional separate path that Statsig will use to run interactive queries made from the Console."
              }
            }
          },
          "snowflake": {
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string"
              },
              "serviceUserName": {
                "type": "string"
              },
              "serviceUserPassword": {
                "type": "string"
              },
              "privateKey": {
                "type": "string",
                "nullable": true
              },
              "keyPassPhrase": {
                "type": "string",
                "nullable": true
              },
              "stagingDatabaseName": {
                "type": "string",
                "description": "The database containing the staging schema"
              },
              "stagingSchemaName": {
                "type": "string",
                "description": "Statsig will use this Schema to save intermediate tables in the experimentation pipeline. Must be a schema that the service user has write access to."
              },
              "computeWarehouse": {
                "type": "string",
                "description": "The warehouse that Statsig will use to run queries. Must be a warehouse that the service user has access to."
              },
              "consoleComputeWarehouse": {
                "type": "string",
                "nullable": true,
                "description": "An optional warehouse that Statsig will use to run interactive queries made from the Console."
              }
            }
          },
          "bigquery": {
            "type": "object",
            "properties": {
              "privateKey": {
                "type": "string",
                "description": "Private key for a first-party service account to use for the BigQuery connection."
              },
              "project": {
                "type": "string",
                "description": "The project that Statsig will use to run queries."
              },
              "consoleComputeProject": {
                "type": "string",
                "description": "An optional project that Statsig will use to run interactive queries made from the Console."
              },
              "stagingDataset": {
                "type": "string",
                "description": "Statsig will use this dataset to save intermediate tables in the experimentation pipeline. Must be a dataset that the service user has write access to."
              }
            }
          }
        }
      }
    }
  }
}
